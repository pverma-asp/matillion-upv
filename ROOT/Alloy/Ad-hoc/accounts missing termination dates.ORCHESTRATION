{"job":{"components":{"2961696":{"id":2961696,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-160,"y":0,"width":32,"height":32,"inputConnectorIDs":[2961698],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log error"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log import error\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Accounts Missing Termination Dates',\n       'An error occurred during creation of rdl.ACCOUNTS_MISSING_TERMINATION_DATES - please check the Matillion job history',\n        null,\n       'rdl.ACCOUNTS_MISSING_TERMINATION_DATES',\n        null,\n       'high';"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2961697":{"id":2961697,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-400,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2961699],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2961700":{"id":2961700,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-283,"y":2,"width":32,"height":32,"inputConnectorIDs":[2961699],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[2961698],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"\ndrop table if exists rdl.accounts_missing_termination_dates_new;\ncreate table rdl.accounts_missing_termination_dates_new as\nwith admin_note as (\n          select user_id,\n          listagg(note_title || ' (' ||date_created::date ||')', '; ') within group\n               (order by date_created desc)  as admin_notes\n          from web_db.admin_note\n          where note_title ilike '%account%clos%' or note_title ilike '%account%froz%'\n               or note_title ilike '%account%sus%' or note_title ilike '%lock%'\n               or note_title ilike '%id%theft%' or note_title ilike '%suspended%'\n               or note_title ilike '%closed%'\n          group by 1\n      )\n,risk_status as (\n    select user_id,\n           new_state as risk_state,\n           created_at::date as risk_state_date,\n           row_number() over (partition by user_id order by created_at desc) as rn\n    from web_db.risk_state_history\n)\n,risk_flag as (\n    select user_id,\n           altered_flag_name as risk_flag,\n           new_flag_value,\n           created_at as risk_flag_date,\n           row_number() over (partition by user_id, altered_flag_name order by created_at desc) as rn\n    from web_db.risk_flag_history\n)\n,risk_flag_grouped as (\n    select user_id,\n           listagg(risk_flag || ' (' ||risk_flag_date::date ||')', '; ')within group (order by risk_flag) as risk_flags\n    from risk_flag\n    where rn = 1\n    and new_flag_value = true\n    group by 1\n)\n, cust_master as (\n    select a.GALILEO_ACCOUNT_ID,\n           a.file_date,\n           case b.DESCRIPTION\n            when 'Savings Account' then 'Save'\n            when 'Spending Account' then 'Spend'\n           end as TYPE_OF_ACCOUNT,\n           p.PRN,\n           s.DESCRIPTION as account_status,\n           row_number() over (partition by a.GALILEO_ACCOUNT_ID order by FILE_DATE desc) as rn\n    from rdl.RAW_GALILEO_CUSTOMER_MASTER_DATA a\n    join WEB_DB.GALILEO_LOOKUP b on a.TYPE_OF_ACCOUNT = b.CODE and b.FILE = 'C' and b.FIELD_NAME = 'TYPE OF ACCOUNT'\n    join rdl.VW_USER_PRN p on a.GALILEO_ACCOUNT_ID = p.GALILEO_ACCOUNT_ID\n    join WEB_DB.GALILEO_LOOKUP s on a.STATUS = s.CODE and s.FILE = 'C' and s.FIELD_NAME = 'STATUS'\n    where a.TYPE_OF_ACCOUNT in ('6','8')\n)\n, raw_galileo_account_card_data as (\n    select *, row_number() over (partition by prn order by file_date desc) rn\n    from rdl.raw_galileo_account_card_data\n)\n, active_card as (\n    select          ga.user_id,\n                    sum(case when z.TYPE_OF_CARD = '25' then 1 else 0 end) count_active_virtual,\n                    sum(case when z.TYPE_OF_CARD != '25' then 1 else 0 end) count_active_physical\n    from raw_galileo_account_card_data z\n    JOIN rdl.VW_USER_PRN ga ON ga.galileo_account_id = z.galileo_account_id\n    left join WEB_DB.GALILEO_LOOKUP l on z.STATUS = l.code and l.FIELD_NAME = 'CARD STATUS'\n    where z.rn = 1\n        and (l.DESCRIPTION ilike '%active%'\n         or l.DESCRIPTION ilike '%shipped%'\n         or l.DESCRIPTION ilike '%hold%'\n         or l.DESCRIPTION ilike '%emboss%'\n        )\n    group by 1\n)\n, charged_off_amount as\n(\n    select a.UNIQUE_ACCOUNT_ID, \n           sum(t.AMOUNT)::decimal(38,2) as MOST_RECENT_CHARGED_OFF_AMOUNT\n    from bi.DT_ACCOUNTS a\n    join bi.DT_DEPOSITORY_TRANSACTIONS t on a.UNIQUE_ACCOUNT_ID = t.UNIQUE_ACCOUNT_ID\n                                        and a.MOST_RECENT_CHARGED_OFF_DATE = t.TRANSACTION_DATE\n    where a.ACCOUNT_TYPE = 'Checking'\n    and t.transaction_type = 'Charge Off'\n    group by 1\n)\nselect a.UNIQUE_ACCOUNT_ID, b.USER_ID, b.USER_EMAIL, b.EXTERNAL_USER_ID as UUID,\n       case when z.customer_UUID is not null then true else false end as ops_cancellation_requested,\n       ifnull(convert_timezone('UTC','America/Los_Angeles',d.ACCOUNT_APPROVED_TIME::timestamp)::date, a.INCEPTION_DATE::date) as INCEPTION_DATE_PT,\n       a.TERMINATION_DATE,\n       a.is_joint_account,\n       a.SPEND_GALILEO_PRN, a.SAVE_GALILEO_PRN,\n       cm_sp.account_status as spend_status,\n       cm_sa.account_status as save_status,\n       a.MOST_RECENT_CHARGED_OFF_DATE,\n       coa.MOST_RECENT_CHARGED_OFF_AMOUNT,\n       cm_sp.GALILEO_ACCOUNT_ID as spend_GALILEO_ACCOUNT_ID,\n       cm_sa.GALILEO_ACCOUNT_ID as save_GALILEO_ACCOUNT_ID,\n       a.SPEND_CURRENT_BALANCE, a.SAVE_CURRENT_BALANCE,\n       n.admin_notes, rs.risk_state, rs.risk_state_date, rf.risk_flags,\n       ifnull(ac.count_active_physical,0) as count_physical,\n       ifnull(ac.count_active_virtual,0) as count_virtual,\n       count_physical + count_virtual as total_active_cards,\n       case when a.TERMINATION_DATE is null and (spend_status = 'Charged Off' or save_status = 'Charged Off'\n               or a.MOST_RECENT_CHARGED_OFF_DATE is not null)\n            then 'spend and/or save charged off'\n            when spend_status in ('Active','Suspended') and save_status in ('Canceled','Canceled without Refund','Charged Off')\n            then 'spend open / save closed'\n            when spend_status in ('Canceled','Canceled without Refund','Charged Off') and save_status in ('Active','Suspended')\n            then 'spend closed / save open'\n            when spend_status in ('Canceled','Canceled without Refund','Charged Off')\n               and save_status in ('Canceled','Canceled without Refund','Charged Off')\n               and TERMINATION_DATE is null\n            then 'spend and save closed'\n       else 'unknown'\n       end as category,\n       case when a.UNIQUE_ACCOUNT_ID = 'r209573g413936' then 'Data research term date logic'\n            when category = 'spend and/or save charged off'\n                 and (SPEND_CURRENT_BALANCE = 0 and SAVE_CURRENT_BALANCE =0)\n                 and spend_status = 'Charged Off'\n                 then 'Data close any open accounts (account balance = 0)'\n            when category = 'spend and/or save charged off'\n                 then 'Account Mgmt/Ops close manually'\n            when category = 'spend open / save closed' and count_virtual > 0 then 'Data close spend and any virtual'\n            when category = 'spend open / save closed' and count_virtual = 0 then 'Data close spend'\n            when category = 'spend closed / save open' then 'Data close save and any virtual'\n            when category = 'spend and save closed' then 'Research / consult Galileo'\n            else 'unknown - need to research'\n       end as recommendation\nfrom bi.DT_ACCOUNTS a\nleft join charged_off_amount coa on a.UNIQUE_ACCOUNT_ID = coa.UNIQUE_ACCOUNT_ID\njoin bi.DT_USERS b on a.USER_ID = b.USER_ID\njoin WEB_DB.DEPOSITORY d on a.GALILEO_ID = d.id\nleft join admin_note n on a.USER_ID = n.USER_ID\nleft join risk_status rs on a.user_id = rs.user_id and rs.rn = 1\nleft join risk_flag_grouped rf on a.user_id = rf.user_id\nleft join cust_master cm_sp on a.SPEND_GALILEO_PRN = cm_sp.prn and cm_sp.rn = 1\nleft join cust_master cm_sa on a.SAVE_GALILEO_PRN = cm_sa.prn and cm_sa.rn = 1\nleft join active_card ac on a.USER_ID = ac.USER_ID\nleft join etl.account_cancellation_operations z on b.EXTERNAL_USER_ID = z.customer_uuid\nwhere ((spend_status in ('Active','Suspended') and save_status in ('Canceled','Canceled without Refund','Charged Off'))\n        or (spend_status in ('Canceled','Canceled without Refund','Charged Off') and save_status in ('Active','Suspended'))\n        or (a.TERMINATION_DATE is null and (spend_status = 'Charged Off' or save_status = 'Charged Off'\n               or a.MOST_RECENT_CHARGED_OFF_DATE is not null))\n        or (spend_status in ('Canceled','Canceled without Refund','Charged Off')\n               and save_status in ('Canceled','Canceled without Refund','Charged Off')\n               and TERMINATION_DATE is null)\n        or (a.UNIQUE_ACCOUNT_ID in ('g616289','g501625','r155498g219080','g575260') and TERMINATION_DATE is null))\nand a.ACCOUNT_TYPE = 'Checking'\nand (a.SPEND_GALILEO_PRN is not null or a.SAVE_GALILEO_PRN is not null);\n\nALTER TABLE IF EXISTS rdl.accounts_missing_termination_dates RENAME TO rdl.accounts_missing_termination_dates_old;\nALTER TABLE IF EXISTS rdl.accounts_missing_termination_dates_new RENAME TO rdl.accounts_missing_termination_dates;\nDROP TABLE IF EXISTS rdl.accounts_missing_termination_dates_old;\n\ngrant select on rdl.accounts_missing_termination_dates to role looker_role;\ngrant select on rdl.accounts_missing_termination_dates to role data_engineering_group;\ngrant select on rdl.accounts_missing_termination_dates to role data_science_analytics;\ngrant select on rdl.accounts_missing_termination_dates to role read_only_internal_users;\n\n\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{"2961698":{"id":2961698,"sourceID":2961700,"targetID":2961696}},"unconditionalConnectors":{"2961699":{"id":2961699,"sourceID":2961697,"targetID":2961700}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{},"grids":{}},"info":{"name":"accounts missing termination dates","description":"Creates a table used to troubleshoot accounts that look like they should have a termination date, but don't.","type":"ORCHESTRATION","tag":"0573e006-85ef-46c5-b038-1e6ff9691fd6"}}