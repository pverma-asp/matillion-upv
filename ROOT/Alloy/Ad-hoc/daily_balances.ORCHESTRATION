{"job":{"components":{"2961620":{"id":2961620,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-240,"y":0,"width":32,"height":32,"inputConnectorIDs":[2961617],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2961616],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"etl.daily_balances"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse RUN_DAILY_REFRESH;\n\nDROP TABLE IF EXISTS etl.daily_balances_staging_0;\nCREATE TABLE etl.daily_balances_staging_0\nAS (\n  WITH\n  dates AS (\n    SELECT '2014-10-01'::DATE + i - 1 AS date\n    FROM (\n            select row_number() over(order by seq4()) as i\n            from table (\n                    generator(\n                            rowcount => 3000\n                        )\n                )\n           )\n    WHERE i <= CURRENT_DATE - '2014-10-01'::DATE + 1\n    ),\n  summit_dates AS (\n    SELECT dta.unique_account_id\n      , dates.date\n      , dta.termination_date\n    FROM bi.dt_accounts dta\n    JOIN dates ON dates.date >= dta.inception_date\n    WHERE dta.inception_date IS NOT NULL\n      AND dta.account_type = 'Checking'\n      --AND dates.date <= ifnull(dta.TERMINATION_DATE,current_date::date)\n    ),\n  r_depository_balances AS (\n    SELECT dta.unique_account_id\n      , CASE\n            -- if account is terminated then nullify its balance\n            WHEN ad.date <= r_a.termination_date::date THEN COALESCE(db.current_balance, LAG(db.current_balance) IGNORE NULLS OVER (PARTITION BY dta.unique_account_id ORDER BY ad.date), 0)\n            ELSE 0\n        END AS current_balance\n      , ad.date AS balance_date\n    FROM summit_dates ad\n    JOIN bi.dt_accounts dta ON ad.unique_account_id = dta.unique_account_id\n    LEFT JOIN web_db.depository_balance db ON ad.date = db.balance_date AND dta.radius_id = db.depository_id\n    left join web_db.depository b on dta.radius_id = b.id\n    left JOIN web_db.account r_a on r_a.id = b.account_id\n    ),\n  g_depository_balances AS (\n    SELECT dta.unique_account_id\n      , COALESCE(rgcmd.spend_current_balance, LAG(rgcmd.spend_current_balance) IGNORE NULLS OVER (PARTITION BY dta.unique_account_id ORDER BY ad.date), 0.0) AS spend_current_balance\n      , COALESCE(rgcmd.save_current_balance, LAG(rgcmd.save_current_balance) IGNORE NULLS OVER (PARTITION BY dta.unique_account_id ORDER BY ad.date), 0.0) AS save_current_balance\n      , ad.date AS balance_date\n    FROM summit_dates ad\n    JOIN bi.dt_accounts dta ON ad.unique_account_id = dta.unique_account_id\n    LEFT JOIN (\n      SELECT ga.user_id\n        , t.file_date\n        , MAX(CASE WHEN t.type_of_account = '6' THEN CONCAT(t.current_balance_sign, t.current_balance::decimal(18,2))::dec(18,2) END) AS spend_current_balance\n        , MAX(CASE WHEN t.type_of_account = '8' THEN CONCAT(t.current_balance_sign, t.current_balance::decimal(18,2))::dec(18,2) END) AS save_current_balance\n      FROM rdl.raw_galileo_customer_master_data t\n      JOIN rdl.VW_USER_PRN ga ON (ga.galileo_account_id = t.galileo_account_id)\n      GROUP BY ga.user_id, t.file_date\n      ) AS rgcmd ON (rgcmd.user_id = dta.user_id AND ad.date = rgcmd.file_date)\n    )\n  SELECT ad.unique_account_id\n    , ad.date\n    , ifnull(g_db.spend_current_balance, 0) + ifnull(g_db.save_current_balance, 0) + ifnull(r_db.current_balance, 0) AS current_balance\n    , ifnull(g_db.spend_current_balance, 0) + ifnull(r_db.current_balance, 0) AS spend_current_balance\n    , ifnull(g_db.save_current_balance, 0) AS save_current_balance\n\n  FROM summit_dates ad\n  LEFT JOIN r_depository_balances r_db ON ad.unique_account_id = r_db.unique_account_id AND ad.date = r_db.balance_date\n  LEFT JOIN g_depository_balances g_db ON ad.unique_account_id = g_db.unique_account_id AND ad.date = g_db.balance_date\n\n);\n\nDROP TABLE IF EXISTS etl.daily_balances_staging;\nCREATE TABLE etl.daily_balances_staging\nAS (\n  WITH\n  min_posted_summit_dates AS (\n    SELECT unique_account_id\n      , min(date) AS min_date\n    FROM etl.daily_balances_staging_0\n    WHERE current_balance > 0\n    GROUP BY 1\n    ),\n  initial_summit_balances AS (\n    SELECT db.unique_account_id\n      , db.current_balance AS initial_balance\n      , min_date\n    FROM min_posted_summit_dates a\n    JOIN etl.daily_balances_staging_0 db ON a.unique_account_id = db.unique_account_id AND a.min_date = db.date\n    )\n  SELECT a.unique_account_id\n    , a.date\n    , GREATEST(0, CASE WHEN date < min_date THEN initial_balance ELSE current_balance END) AS daily_balance\n    , current_balance AS original_balance\n    , spend_current_balance AS spend_daily_balance\n    , save_current_balance AS save_daily_balance\n    , false AS has_set_recurring_deposit\n  FROM etl.daily_balances_staging_0 a\n  LEFT JOIN initial_summit_balances b ON a.unique_account_id = b.unique_account_id\n);\n\nalter table etl.daily_balances rename to etl.daily_balances_old;\nalter table etl.daily_balances_staging rename to etl.daily_balances;\ndrop table if exists etl.daily_balances_old;\nDROP TABLE IF EXISTS etl.daily_balances_staging_0;\n\ngrant select on etl.daily_balances to role data_engineering_group;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2961621":{"id":2961621,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-480,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2961619],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2961622":{"id":2961622,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1859466705,"x":-112,"y":0,"width":32,"height":32,"inputConnectorIDs":[2961616],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"run daily refresh WH to xsmall"}}}},"visible":true},"2":{"slot":2,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"RUN_DAILY_REFRESH"}}}},"visible":true},"3":{"slot":3,"name":"Command Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Set"}}}},"visible":true},"4":{"slot":4,"name":"New name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"5":{"slot":5,"name":"Properties","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"WAREHOUSE_SIZE"},"2":{"slot":2,"type":"STRING","value":"XSMALL"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"AUTO_SUSPEND"},"2":{"slot":2,"type":"STRING","value":"10"}}}},"visible":true},"6":{"slot":6,"name":"Properties","elements":{},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2961623":{"id":2961623,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1859466705,"x":-368,"y":0,"width":32,"height":32,"inputConnectorIDs":[2961619],"outputSuccessConnectorIDs":[2961617],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"run daily refresh WH to large"}}}},"visible":true},"2":{"slot":2,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"RUN_DAILY_REFRESH"}}}},"visible":true},"3":{"slot":3,"name":"Command Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Set"}}}},"visible":true},"4":{"slot":4,"name":"New name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"5":{"slot":5,"name":"Properties","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"WAREHOUSE_SIZE"},"2":{"slot":2,"type":"STRING","value":"LARGE"}}}},"visible":true},"6":{"slot":6,"name":"Properties","elements":{},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2961617":{"id":2961617,"sourceID":2961623,"targetID":2961620}},"failureConnectors":{},"unconditionalConnectors":{"2961616":{"id":2961616,"sourceID":2961620,"targetID":2961622},"2961619":{"id":2961619,"sourceID":2961621,"targetID":2961623}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{},"grids":{}},"info":{"name":"daily_balances","description":null,"type":"ORCHESTRATION","tag":"522eb22c-bad7-4ba0-afd3-d544cc90aefe"}}