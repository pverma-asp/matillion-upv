{"job":{"components":{"2964513":{"id":2964513,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1754,"y":-231,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of SQL Script 0"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"with dt_users as (\n    select acc.id\n        ,dtu.user_id\n        ,dtu.external_user_id\n        ,acc.inception_date as install_date\n        ,dtu.utm_source as source\n        ,c.name as country\n        ,dtu.utm_term_ad_id\n        ,dtu.utm_content\n        ,dtu.utm_source\n        ,dtu.lead_arrival_date\n        ,case when sum(dudd.count_ios_login) > 0 then 'ios'\n        when sum(dudd.count_android_login) > 0 then 'android'\n        else 'web' end as platform\n    FROM bi.dt_users dtu\n        LEFT JOIN bi.dt_user_daily_data dudd on dtu.user_id = dudd.user_id\n        LEFT JOIN web_db.user_profile up on dtu.user_id = up.user_id\n        LEFT JOIN web_db.address a on up.address_id = a.id\n        LEFT JOIN web_db.country c on a.country_id = c.id\n        LEFT JOIN web_db.user_account ua on ua.user_id = dtu.user_id\n        LEFT JOIN web_db.account acc on ua.account_id = acc.id\n    WHERE lead_arrival_date::date >= '2018-06-26'\n    GROUP BY 1,2,3,4,5,6,7,8,9,10\n    )\n,first_impression_date as (\n    select first_impression_date.sent_at as first_impression_date\n    ,first_impression_date.user_id\n    ,row_number() over (partition by first_impression_date.user_id order by first_impression_date.sent_at) as rn\n    from (\n    select sent_at\n    ,user_id\n    from prod_segment_js.tracks\n    union all\n    select sent_at\n    ,user_id\n    from prod_segment_ios.tracks segment_ios\n    union all\n    select tracks.sent_at\n    ,tracks.user_id\n    from prod_segment_android.tracks) first_impression_date\n)\nselect coalesce(user_id::varchar||coalesce('_a_'|| id::varchar,'_u_'||user_id::varchar) , id::varchar || '_a_'||id::varchar) as user_id\nfrom dt_users dtu;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964518":{"id":2964518,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1264,"y":-160,"width":32,"height":32,"inputConnectorIDs":[2964512],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SQL Script 0"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"copy into @public.algolift/daily_data/install/install_date=${current_year}-${current_month}-${current_day}/install_${current_year}-${current_month}-${current_day}.csv\n(with dt_users AS (\n    SELECT acc.id\n        ,dtu.user_id\n        ,_u.adjust_id\n        ,dtu.external_user_id\n        ,acc.inception_date AS install_date\n        ,dtu.utm_source AS source\n        ,c.code AS country\n        ,dtu.utm_term_ad_id\n        ,dtu.utm_content\n        ,dtu.utm_source\n        ,dtu.lead_arrival_date\n        ,row_number() over (partition by dtu.user_id order by inception_date) AS rn\n    FROM bi.dt_users dtu\n        LEFT JOIN bi.dt_user_daily_data dudd on dtu.user_id = dudd.user_id\n        LEFT JOIN web_db._user _u on dtu.user_id = _u.id\n        LEFT JOIN web_db.user_profile up on dtu.user_id = up.user_id\n        LEFT JOIN web_db.address a on up.address_id = a.id\n        LEFT JOIN web_db.country c on a.country_id = c.id\n        LEFT JOIN web_db.user_account ua on ua.user_id = dtu.user_id\n        LEFT JOIN web_db.account acc on ua.account_id = acc.id\n    WHERE lead_arrival_date::date = '${current_year}-${current_month}-${current_day}'\n    GROUP BY 1,2,3,4,5,6,7,8,9,10,11\n    )\n    ,\n first_impression_date AS (\n    SELECT first_impression_date.sent_at AS first_impression_date\n    ,first_impression_date.user_id\n    ,row_number() over (partition by first_impression_date.user_id order by first_impression_date.sent_at) AS rn\n    FROM (\n    SELECT sent_at\n    ,user_id\n    FROM segment_events.prod_segment_js.tracks\n    UNION ALL\n    SELECT sent_at\n    ,user_id\n    FROM segment_events.prod_segment_ios.tracks segment_ios\n    UNION ALL\n    SELECT tracks.sent_at\n    ,tracks.user_id\n    FROM segment_events.prod_segment_ANDroid.tracks) first_impression_date\n),\nmobile_users AS (\n    SELECT received_at AS install_date\n    ,tracker_name AS source\n    ,user_id\n    ,anonymous_id\n    ,'ios' AS platform\n    ,context_device_model\n    ,context_device_manufacturer\n    ,regexp_substr(split_part(tracker_name,'::',3),'\\\\(([0-9])+\\\\)')  as ad_group_id\n    ,split_part(tracker_name,'::',3) as ad_group\n    ,case when lower(tracker_name) like '%facebook%' or lower(tracker_name) like '%google%' then NULL else regexp_substr(split_part(tracker_name, '::', 4), '.*[^\\\\d\\\\W]') end as keyword\n    ,case when lower(tracker_name) like '%facebook%' or lower(tracker_name) like '%google%' then NULL else regexp_substr(split_part(tracker_name,'::',4),'\\\\(([0-9])+\\\\)') end as keyword_id\n    FROM segment_events.prod_segment_ios.install_attributed\n    WHERE received_at::date = '${current_year}-${current_month}-${current_day}'\n    UNION ALL\n    SELECT received_at AS install_date\n    ,tracker_name AS source\n    ,user_id\n    ,anonymous_id\n    ,'android' AS platform\n    ,context_device_model\n    ,context_device_manufacturer\n    ,NULL as ad_group_id\n\t,NULL as ad_group\n    ,NULL as keyword\n    ,NULL as keyword_id\n    FROM segment_events.prod_segment_android.install_attributed\n    WHERE received_at::date = '${current_year}-${current_month}-${current_day}'\n),\nsegment_users AS (\n    SELECT received_at AS install_date\n        ,user_id\n        ,anonymous_id\n        ,'web' AS platform\n    FROM segment_events.prod_segment_js.tracks\n    WHERE received_at::date = '${current_year}-${current_month}-${current_day}'\n    AND event ilike '%click%'\n    )\nSELECT coalesce(nullif(mu.user_id,''),mu.anonymous_id,dtu.user_id::varchar || coalesce('_a_' || dtu.id::varchar, '_u_'|| dtu.user_id::varchar) , dtu.id::varchar || '_a_' || dtu.id::varchar) AS user_id\n,fids.first_impression_date as impression_dt\n,mu.install_date as install_dt\n,coalesce(dtu.country::varchar(20),'US') as country\n,mu.platform::varchar(20)\n,lower(split_part(mu.source,':',1)::varchar(255)) as source\n,NULL as subpub_id\n,NULL as subpub_bundle_id\n,NULL as subpub_name\n,regexp_substr(mu.source,'\\(([0-9])+\\)') AS campaign_id\n,case when lower(mu.source) = 'organic' then NULL else regexp_substr(split_part(mu.source, '::', 2), '.*[^\\\\\\\\d\\\\\\\\W]') end AS campaign_name\n,mu.ad_group_id AS adgroup_id\n,mu.ad_group AS adgroup_name\n,NULL as ad_id\n,NULL as ad_name\n,NULL as type\n,mu.keyword_id as keword_id\n,mu.keyword as keyword_name\n,context_device_manufacturer as device_brand\n,context_device_model as device_model\n,NULL as os_version\n,dtu.lead_arrival_date\nFROM mobile_users mu\nLEFT JOIN dt_users dtu on mu.user_id = dtu.external_user_id and dtu.rn = 1\nLEFT JOIN first_impression_date fids on fids.user_id = mu.user_id and fids.rn = 1\nUNION ALL\nSELECT coalesce(nullif(su.user_id,''),su.anonymous_id,dtu.user_id::varchar || coalesce('_a_' || dtu.id::varchar, '_u_'|| dtu.user_id::varchar) , dtu.id::varchar || '_a_' || dtu.id::varchar) AS user_id\n,first_impression_date as impression_dt\n,coalesce(su.install_date,dtu.install_date) AS install_dt\n,coalesce(country,'US') as country\n,su.platform\n,lower(source) as source\n,NULL as subpub_id\n,NULL as subpub_bundle_id\n,NULL as subpub_name\n,fbcamp.id AS campaign_id\n,fbcamp.name AS campaign_name\n,adsets.id AS adgroup_id\n,adsets.name AS adgroup_name\n,NULL as ad_id\n,NULL as ad_name\n,NULL as type\n,NULL as keword_id\n,NULL as keyword_name\n,NULL as device_brand\n,NULL as device_model\n,NULL as os_version\n,lead_arrival_date\nFROM segment_users AS su\n    LEFT JOIN dt_users dtu on su.user_id = dtu.external_user_id\n    LEFT JOIN segment_events.prod_segment_facebook_ads.ads ads on dtu.utm_term_ad_id = ads.id\n    LEFT JOIN segment_events.prod_segment_facebook_ads.ad_sets adsets on ads.adset_id = adsets.id\n    LEFT JOIN segment_events.prod_segment_facebook_ads.campaigns fbcamp on adsets.campaign_id = fbcamp.id\n    LEFT JOIN first_impression_date fid on dtu.external_user_id = fid.user_id\nWHERE dtu.rn = 1 AND fid.rn = 1 and ads.adset_id is not null\nUNION ALL\nSELECT coalesce(nullif(su.user_id,''),su.anonymous_id,dtu.user_id::varchar || coalesce('_a_' || dtu.id::varchar, '_u_'|| dtu.user_id::varchar) , dtu.id::varchar || '_a_' || dtu.id::varchar) AS user_id\n,first_impression_date as impression_dt\n,coalesce(su.install_date,dtu.install_date) AS install_dt\n,coalesce(country,'US') as country\n,su.platform\n,lower(source) as source\n,NULL as subpub_id\n,NULL as subpub_bundle_id\n,NULL as subpub_name\n,NULL as campaign_id\n,NULL as campaign_name\n,gocamps.id AS adgroup_id\n,gocamps.name AS adgroup_name\n,NULL as ad_id\n,NULL as ad_name\n,NULL as type\n,NULL as keword_id\n,NULL as keyword_name\n,NULL as device_brand\n,NULL as device_model\n,NULL as os_version\n,lead_arrival_date\nFROM segment_users AS su\n    LEFT JOIN dt_users dtu on su.user_id = dtu.external_user_id\n    LEFT JOIN segment_events.prod_segment_google_ads.ads gads on gads.original_id = split_part(dtu.utm_content, ' ', 2) AND dtu.utm_source = 'adwords' AND dtu.lead_arrival_date >= '2019-04-01' AND dtu.utm_content ilike '%kwd%'\n    LEFT JOIN segment_events.prod_segment_google_ads.ad_groups goadgroups on gads.ad_group_id = goadgroups.id\n    LEFT JOIN segment_events.prod_segment_google_ads.campaigns gocamps on goadgroups.campaign_id = gocamps.id\n    LEFT JOIN first_impression_date fid on dtu.external_user_id = fid.user_id\nWHERE dtu.rn = 1 AND fid.rn = 1 and gocamps.name is not null\nUNION ALL\nSELECT coalesce(nullif(su.user_id,''),su.anonymous_id,dtu.user_id::varchar || coalesce('_a_' || dtu.id::varchar, '_u_'|| dtu.user_id::varchar) , dtu.id::varchar || '_a_' || dtu.id::varchar) AS user_id\n,first_impression_date as impression_dt\n,coalesce(su.install_date,dtu.install_date) as install_dt\n,coalesce(country,'US') as country\n,su.platform\n,'organic' AS source\n,NULL as subpub_id\n,NULL as subpub_bundle_id\n,NULL as subpub_name\n,NULL AS campaign_id\n,NULL AS campaign_name\n,NULL AS adgroup_id\n,NULL AS adgroup_name\n,NULL as ad_id\n,NULL as ad_name\n,NULL as type\n,NULL as keword_id\n,NULL as keyword_name\n,NULL as device_brand\n,NULL as device_model\n,NULL as os_version\n,lead_arrival_date\nFROM segment_users AS su\n    LEFT JOIN dt_users dtu on su.user_id = dtu.external_user_id\n    LEFT JOIN first_impression_date fid on dtu.external_user_id = fid.user_id\nWHERE dtu.utm_source is null AND dtu.rn = 1 AND fid.rn = 1)\nfile_foramt = (type=csv)\nheader = true;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964519":{"id":2964519,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1632,"y":-160,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2964512],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{},"unconditionalConnectors":{"2964512":{"id":2964512,"sourceID":2964519,"targetID":2964518}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"2964516":{"id":2964516,"x":-1730,"y":-675,"width":568,"height":363,"text":"CSV file formatting:\n- Headers should be present\n- All field entries should be in double quotes\n- Lines terminated by \\r\\n\n- NULL text fields should be delivered as NULL(empty field)\n- Revenue fields should never be NULL. If NULL in your dataset, pass 0\n- Engagement/Transaction counts should never be NULL. If NULL pass 0\n- Any other numerical field can be passed as NULL\n- Date format for all dates should be: YYYY-MM-DD hh:mm:ss\n- All times are assumed as UTC\n-Install and transaction files should be free from duplicates\n\nFile names should be named consistently with the following format:\n{date}_install_{titlename/identifier}.csv\n{date}_transaction_{titlename/identifier}.csv\n{date}_engagement_{titlename/identifier}.csv\n\nExample, 2017-10-01_install_your_company_name.csv\nAll CSVs should be delivered daily around midnight to an s3 bucket that will be assigned to you","colour":"e6e63c"}},"variables":{"current_day":{"definition":{"name":"current_day","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"22"},"current_month":{"definition":{"name":"current_month","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"02"},"current_year":{"definition":{"name":"current_year","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"2018"},"file_date":{"definition":{"name":"file_date","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"target_s3_location":{"definition":{"name":"target_s3_location","type":"TEXT","scope":"TASKBATCH","description":"s3 bucket to drop csv output to","visibility":"PUBLIC"},"value":""}},"grids":{}},"info":{"name":"user_attribution","description":"User attribution contains details about users and includes a unique identifier to link a user to events/transactions,install date, demographics, and other descriptive variables.","type":"ORCHESTRATION","tag":"b220ebd3-f42c-4eba-af3b-2118e5e794e3"}}