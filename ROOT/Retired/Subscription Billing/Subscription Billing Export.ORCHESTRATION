{"job":{"components":{"2967502":{"id":2967502,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-704,"y":-384,"width":32,"height":32,"inputConnectorIDs":[2967507],"outputSuccessConnectorIDs":[2967506],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into file table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into etl.subscription_billing\n(batch_id, subscription_group, invoice_id, status, invoice_amount, invoice_ts, invoice_billing_interval, prn, \n galileo_account_id, galileo_file_name, galileo_file_record_number)\nwith cte_record_num as (\n  select staging_id,\n         lpad(row_number() over (order by prn desc nulls last)::varchar,6,'0') as galileo_file_record_number\n  from etl.subscription_billing_staging\n  where status = 'ready_for_export'\n) \nselect\n    '${batch_id}',\n    s.subscription_group,\n    s.invoice_id,\n    s.status,\n    s.invoice_amount,\n    s.invoice_ts,\n    s.invoice_billing_interval,\n    s.prn,\n    s.galileo_account_id,\n    case when s.status = 'ready_for_export'\n      then '${pp_file_name}'\n    end as galileo_file_name,  \n    rn.galileo_file_record_number\nfrom etl.subscription_billing_staging s\nleft join cte_record_num rn on s.staging_id = rn.staging_id;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967503":{"id":2967503,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1088,"y":-384,"width":32,"height":32,"inputConnectorIDs":[2967588],"outputSuccessConnectorIDs":[2967594],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"set variables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n# set file name\n\nimport uuid\nfrom datetime import datetime,timezone\nfrom dateutil import tz\nfrom_zone = tz.gettz('America/Los_Angeles')\ndateTimeObj = datetime.now()\ndateTimeObj = dateTimeObj.replace(tzinfo=timezone.utc).astimezone(tz=from_zone)\n#timestampStr = dateTimeObj.strftime(\"btrans_584_%Y%m%d_%H%M%S.txt\")\ntimestampStr = dateTimeObj.strftime(\"btrans_584_%Y%m%d_sub%H%M%S.txt\")\ncontext.updateVariable('pp_file_name', timestampStr)\ncontext.updateVariable('pp_full_file_path', pp_file_path + \"/\" + pp_file_name)\ncontext.updateVariable('s3_file_name', pp_full_file_path + '.gpg')\ncontext.updateVariable('batch_id', uuid.uuid1())\ncontext.updateVariable('pp_file_name_gpg', pp_file_name + '.gpg')\nprint (pp_full_file_path)\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967504":{"id":2967504,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":-832,"y":-384,"width":32,"height":32,"inputConnectorIDs":[2967598],"outputSuccessConnectorIDs":[2967507],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"get exportable count"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select count(*) as no_export_count\nfrom etl.issue_log \nwhere issue_program = 'Subscription Billing Export'\nand issue_description = 'No records to process after evaluating for data issues'\nand issue_identifier like '%${batch_id}%'\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"no_records_to_export_count"},"2":{"slot":2,"type":"STRING","value":"NO_EXPORT_COUNT"}}}},"visible":true},"4":{"slot":4,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"5":{"slot":5,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967505":{"id":2967505,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":-1330,"y":-382,"width":32,"height":32,"inputConnectorIDs":[2967596],"outputSuccessConnectorIDs":[2967593],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"get row count"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select count(*) as record_count\nfrom etl.subscription_billing_staging"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"records_to_process_count"},"2":{"slot":2,"type":"STRING","value":"RECORD_COUNT"}}}},"visible":true},"4":{"slot":4,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"5":{"slot":5,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967508":{"id":2967508,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":-1200,"y":-384,"width":32,"height":32,"inputConnectorIDs":[2967593],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[2967588],"outputFalseConnectorIDs":[2967590],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"proceed if records > 0"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"records_to_process_count"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Greater than"},"4":{"slot":4,"type":"STRING","value":"0"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"(${new Date().getHours()} >= 12 && ${new Date().getHours()} < 13) ||\n(${new Date().getHours()} >= 15 && ${new Date().getHours()} < 16) ||\n(${new Date().getHours()} >= 18 && ${new Date().getHours()} < 19) ||\n(${new Date().getHours()} >= 21 && ${new Date().getHours()} < 22) ||\n(${new Date().getHours()} >= 0 && ${new Date().getHours()} < 1) ||\n(${new Date().getHours()} >= 6 && ${new Date().getHours()} < 7)"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967509":{"id":2967509,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1712,"y":-384,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2967585],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967510":{"id":2967510,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1456,"y":-384,"width":32,"height":32,"inputConnectorIDs":[2967592],"outputSuccessConnectorIDs":[2967596],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log data issues"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--Log data issues\n\n--same invoice_id's were available to be billed\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\n--invoices already present in etl.subscription_billing\nselect\n       'Subscription Billing Export',\n       'invoice_id values already present in etl.subscription_billing' ||\n          ' - check whether backend missed importing statuses for invoices or Matillion refresh_web_db job has issues',\n       count(distinct s.invoice_id) as record_count,\n       'web_db.subscription_invoice',\n       'where status = open and invoice_id in (select invoice_id from etl.subscription_billing)',\n       'high'\nfrom web_db.subscription_invoice s\njoin etl.subscription_billing f on s.invoice_id = f.invoice_id\nwhere s.status = 'open'\nhaving record_count > 0;\n\n\n--missing account matches\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Subscription Billing Export',\n       'Invoice records without a match in bi.dt_accounts - research why',\n       count(*) as record_count,\n       'etl.subscription_billing',\n       'where status = research_no_account_match and batch_id = ${batch_id}',\n       'high'\nfrom etl.subscription_billing_staging\nwhere status = 'research_no_account_match'\nhaving record_count > 0;\n\n\n--missing status\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Subscription Billing Export',\n       'Invoice records missing a status - research why',\n       count(*) as record_count,\n       'etl.subscription_billing',\n       'where status = research_missing_status and batch_id = ${batch_id}',\n       'high'\nfrom etl.subscription_billing_staging\nwhere status = 'research_missing_status'\nhaving record_count > 0;\n\n\n--duplicate accounts\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier)\nselect\n       'Subscription Billing Export',\n       'Accounts occurring more than once in invoice data set' ||\n         ' research why.  These have not been billed.',\n       count(*) as record_count,\n       'etl.subscription_billing',\n       'where status = duplicate_account_id and batch_id = ${batch_id}'\nfrom etl.subscription_billing_staging\nwhere status = 'duplicate_account_id'\nhaving record_count > 0;\n\n\n--duplicate invoices\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Subscription Billing Export',\n       'invoice_id values occurring more than once in invoice data set' ||\n         ' research why.  These have not been billed.',\n       count(*) as record_count,\n       'etl.subscription_billing',\n       'where status = duplicate_account_id and batch_id = ${batch_id}',\n       'high'\nfrom etl.subscription_billing_staging\nwhere status = 'duplicate_invoice_id'\nhaving record_count > 0;\n\n--ready_for_export stauses from previous batch present\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Subscription Billing Export',\n       'ready_for_export stauses present in etl.subscription_billing before insert of new rows - research why.'\n        || ' Did previous run fail to update statuses?',\n        count(*) as record_count,\n        'etl.subscription_billing',\n        'where status = ready_for_export',\n        'high'\nfrom etl.subscription_billing\nwhere status = 'ready_for_export'\nand galileo_file_name <> '${pp_file_name}'\nhaving record_count > 0;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967511":{"id":2967511,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1584,"y":-384,"width":32,"height":32,"inputConnectorIDs":[2967585],"outputSuccessConnectorIDs":[2967592],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"get records to process"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--stage data to be billed, assign prn to be billed, assign statuses to invoices\n--indicating if they can be billed\n\ndrop table if exists etl.subscription_billing_staging;\ncreate table etl.subscription_billing_staging\n  (\n    staging_id bigint identity not null,\n    subscription_group varchar(50) not null,\n    invoice_id bigint not null,\n    status varchar(50) not null,\n    invoice_amount decimal(10,2) not null,\n    invoice_ts timestamp not null,\n    invoice_billing_interval varchar(30) not null,\n    galileo_account_id bigint null,\n    prn varchar(20) null\n  );\n\n--grant all on etl.subscription_billing_staging to group data_eng_group;\n--grant select on etl.subscription_billing_staging to group read_only_group;\n\ninsert into etl.subscription_billing_staging\n(subscription_group, invoice_id, status, invoice_amount, invoice_ts, invoice_billing_interval, prn, galileo_account_id)\nwith invoice as (\n  select si.invoice_id,\n         p.\"group\" as subscription_group,\n         --9.99 as invoice_amount,\n         si.amount_due / 100.0 as invoice_amount,\n         si.created_at as invoice_ts,\n         --'Monthly'::varchar as invoice_billing_interval,\n         case p.interval\n           when 'year' then 'Annual'\n           when 'month' then 'Monthly'\n         end as invoice_billing_interval, \n         a.galileo_account_id,\n         --703028::bigint as galileo_account_id,\n         --Select prn that has the funds to cover the invoice amount,\n         --starting with spend.  Do not zero out account, leave at least .01\n         --'223104386162'::varchar as prn --this is Dana - for a test account\n         case\n           when a.spend_current_balance - .01 >= si.amount_due / 100.0\n             then a.spend_galileo_prn\n           when a.save_current_balance - .01 >= si.amount_due / 100.0\n             then a.save_galileo_prn\n           else null\n          end as prn \n  from web_db.subscription_invoice si\n         join web_db.subscription s on si.subscription_id = s.subscription_id\n         join web_db.plan p on s.plan_id = p.plan_id\n         left join bi.dt_accounts a on s.account_id = a.galileo_account_id\n         left join etl.subscription_billing ppf on si.invoice_id = ppf.invoice_id\n  where ppf.invoice_id is null\n    --and si.subscription_id in (2) and si.invoice_id in (19) --for specific testing\n    --and extract(day from s.billing_cycle_anchor) in (9,10)\n    and si.status = 'open'\n),\nduplicate_accounts as (\n  select galileo_account_id,\n         count(*) as record_count\n  from invoice\n  group by 1\n  having count(*) > 1\n),\nduplicate_invoices as (\n  select invoice_id,\n         count(*) as record_count\n  from invoice\n  group by 1\n  having count(*) > 1\n)\nselect\n    i.subscription_group,\n    i.invoice_id,\n    case when da.galileo_account_id is not null then 'duplicate_account_id'\n         when di.invoice_id is not null then 'duplicate_invoice_id'\n         when i.galileo_account_id is not null and i.prn is null then 'insufficient_funds'\n         when i.galileo_account_id is null then 'research_no_account_match'\n         when i.prn is not null then 'ready_for_export'\n         else 'research_missing_status'\n    end as status,\n    i.invoice_amount,\n    i.invoice_ts,\n    i.invoice_billing_interval,\n    i.prn,\n    i.galileo_account_id\nfrom invoice i\nleft join duplicate_accounts da on i.galileo_account_id = da.galileo_account_id\nleft join duplicate_invoices di on i.invoice_id = di.invoice_id;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967512":{"id":2967512,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":-960,"y":0,"width":32,"height":32,"inputConnectorIDs":[2967599],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Success - records exported"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967513":{"id":2967513,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-832,"y":0,"width":32,"height":32,"inputConnectorIDs":[2967589],"outputSuccessConnectorIDs":[2967599],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log result"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log result\n\n--success\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Subscription Billing Export',\n       'File successfully exported to Galileo',\n       count(*) as record_count,\n       'etl.subscription_billing',\n       'galileo_file_name = ${pp_file_name}',\n       'low'\nfrom etl.subscription_billing f \nwhere galileo_file_name = '${pp_file_name}'\nand status = 'exported'\nhaving record_count > 0;\n\n--failure\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Subscription Billing Export',\n       'File failed to export to Galileo',\n       count(*) as record_count,\n       'etl.subscription_billing',\n       'galileo_file_name = ${pp_file_name}',\n       'high'\nfrom etl.subscription_billing f \nwhere galileo_file_name = '${pp_file_name}'\nand status = 'ready_for_export'\nhaving record_count > 0;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967514":{"id":2967514,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":-1200,"y":-192,"width":32,"height":32,"inputConnectorIDs":[2967595],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Success - no records"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967515":{"id":2967515,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-704,"y":0,"width":32,"height":32,"inputConnectorIDs":[2967597],"outputSuccessConnectorIDs":[2967589],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"transfer file to Galileo"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Subscription Billing Transfer Galileo Files"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"job_file_to_encrypt"},"2":{"slot":2,"type":"STRING","value":"${s3_path}/${pp_file_name}"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"job_s3_file_name"},"2":{"slot":2,"type":"STRING","value":"${pp_file_name_gpg}"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"job_s3_full_file_name"},"2":{"slot":2,"type":"STRING","value":"${s3_path}/${pp_file_name_gpg}"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"job_s3_file_path"},"2":{"slot":2,"type":"STRING","value":"${s3_path}"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"job_send_or_get"},"2":{"slot":2,"type":"STRING","value":"${send_or_get}"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"job_galileo_working_dir"},"2":{"slot":2,"type":"STRING","value":"${galileo_working_dir}"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"job_db_file_name"},"2":{"slot":2,"type":"STRING","value":"${pp_file_name}"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967516":{"id":2967516,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":-704,"y":-256,"width":32,"height":32,"inputConnectorIDs":[2967506],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[2967591],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"proceed if exportable records > 0"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"no_records_to_export_count"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"0"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"(${new Date().getHours()} >= 12 && ${new Date().getHours()} < 13) ||\n(${new Date().getHours()} >= 15 && ${new Date().getHours()} < 16) ||\n(${new Date().getHours()} >= 18 && ${new Date().getHours()} < 19) ||\n(${new Date().getHours()} >= 21 && ${new Date().getHours()} < 22) ||\n(${new Date().getHours()} >= 0 && ${new Date().getHours()} < 1) ||\n(${new Date().getHours()} >= 6 && ${new Date().getHours()} < 7)"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967517":{"id":2967517,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-704,"y":-128,"width":32,"height":32,"inputConnectorIDs":[2967591],"outputSuccessConnectorIDs":[2967597],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create file for Galileo"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--temp table to hold header/detail/trailer data\ndrop table if exists tmp_file;\ncreate temp table tmp_file\n(\n  file_id varchar(7),\n  file_row varchar(2000)\n);\n\n--header\ninsert into tmp_file (file_id, file_row)\nselect TOP 1 '000000',\n             'HHEADER' || rpad('454', 10, ' ') ||\n             rpad('584', 10, ' ') ||\n             rpad((galileo_file_name || '.gpg'), 50, ' ') ||\n             to_char(getdate(), 'MMDDYYYY')\nfrom etl.subscription_billing\nwhere status = 'ready_for_export'\nand galileo_file_name = '${pp_file_name}'\norder by created_at desc;\n\n--detail\ninsert into tmp_file (file_id, file_row)\nselect galileo_file_record_number,\n       'D' ||\n       galileo_file_record_number ||\n       'R' ||\n       rpad(prn,50,' ') ||\n       lpad('',21,' ') ||\n       --'AQ  ' ||\n       'F' ||\n       case when subscription_group = 'planet-protection' and invoice_billing_interval = 'Annual' then 'PAC'\n            when subscription_group = 'planet-protection' and invoice_billing_interval = 'Monthly' then 'PMC'\n       end || \n       rpad(invoice_amount,13,' ') ||\n       rpad((invoice_billing_interval || ' ' || initcap(replace('planet-protection','-',' ')) || ' Charge'),40,' ') ||\n       rpad(('SUB' || to_char(getdate(), 'YYMMDDHH24SS') || '-' || galileo_file_record_number),20,' ') as detail\nfrom etl.subscription_billing\nwhere status = 'ready_for_export'\nand galileo_file_name = '${pp_file_name}'\norder by galileo_file_record_number;\n\n--trailer\ninsert into tmp_file (file_id, file_row)\nselect '1000000',\n       'TTRAILER' || rpad(count(*),6,' ')\nfrom etl.subscription_billing\nwhere status = 'ready_for_export'\nand galileo_file_name = '${pp_file_name}';\n\n--export to S3\ncopy into '${pp_full_file_path}'\n     from (SELECT file_row FROM tmp_file ORDER BY file_id)\n     file_format =(format_name='ETL.PLAIN_TEXT' compression='none' FILE_EXTENSION = '')\n     single = true;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967518":{"id":2967518,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1200,"y":-288,"width":32,"height":32,"inputConnectorIDs":[2967590],"outputSuccessConnectorIDs":[2967595],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log no records to process"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log no records to process\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_priority)\nselect\n       'Subscription Billing Export',\n       'No records to process',\n       0 as record_count,\n       'low'\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967519":{"id":2967519,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-960,"y":-384,"width":32,"height":32,"inputConnectorIDs":[2967594],"outputSuccessConnectorIDs":[2967598],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Row Count","mapTo":"no_records_to_export_count"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log exportable records"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--no records to process after looking for issues\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Subscription Billing Export',\n       'No records to process after evaluating for data issues',\n       count(*) as record_count,\n       'etl.subscription_billing',\n       'where batch_id = ${batch_id}',\n       'low'\nfrom etl.subscription_billing_staging s\nleft join etl.subscription_billing f on s.invoice_id = f.invoice_id\nwhere s.status in ('ready_for_export')\nand f.invoice_id is null\nhaving count(*) = 0;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2967506":{"id":2967506,"sourceID":2967502,"targetID":2967516},"2967507":{"id":2967507,"sourceID":2967504,"targetID":2967502},"2967589":{"id":2967589,"sourceID":2967515,"targetID":2967513},"2967592":{"id":2967592,"sourceID":2967511,"targetID":2967510},"2967593":{"id":2967593,"sourceID":2967505,"targetID":2967508},"2967594":{"id":2967594,"sourceID":2967503,"targetID":2967519},"2967595":{"id":2967595,"sourceID":2967518,"targetID":2967514},"2967596":{"id":2967596,"sourceID":2967510,"targetID":2967505},"2967597":{"id":2967597,"sourceID":2967517,"targetID":2967515},"2967598":{"id":2967598,"sourceID":2967519,"targetID":2967504},"2967599":{"id":2967599,"sourceID":2967513,"targetID":2967512}},"failureConnectors":{},"unconditionalConnectors":{"2967585":{"id":2967585,"sourceID":2967509,"targetID":2967511}},"trueConnectors":{"2967588":{"id":2967588,"sourceID":2967508,"targetID":2967503},"2967591":{"id":2967591,"sourceID":2967516,"targetID":2967517}},"falseConnectors":{"2967590":{"id":2967590,"sourceID":2967508,"targetID":2967518}},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"batch_id":{"definition":{"name":"batch_id","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"abcde"},"db_name":{"definition":{"name":"db_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"web_db"},"galileo_working_dir":{"definition":{"name":"galileo_working_dir","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"/sftpdir/batch"},"leftover_count":{"definition":{"name":"leftover_count","type":"DECIMAL","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"0"},"no_records_to_export_count":{"definition":{"name":"no_records_to_export_count","type":"DECIMAL","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"0"},"pp_file_name":{"definition":{"name":"pp_file_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"none"},"pp_file_name_gpg":{"definition":{"name":"pp_file_name_gpg","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"none"},"pp_file_path":{"definition":{"name":"pp_file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@PUBLIC.ASPIRATION_PROD_DATA_PLANET_PROTECTION/subscription-billing/to-galileo"},"pp_full_file_path":{"definition":{"name":"pp_full_file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@PUBLIC.ASPIRATION_PROD_DATA_PLANET_PROTECTION/subscription-billing/to-galileo/serena_test.txt"},"rds_endpoint":{"definition":{"name":"rds_endpoint","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"prod-web-db-analytics.ctawxryivyva.us-west-2.rds.amazonaws.com:5432"},"records_to_process_count":{"definition":{"name":"records_to_process_count","type":"DECIMAL","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"0"},"s3_file_name":{"definition":{"name":"s3_file_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"s3_path":{"definition":{"name":"s3_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"s3://aspiration-prod-data-planet-protection/subscription-billing/to-galileo"},"send_or_get":{"definition":{"name":"send_or_get","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"send"}},"grids":{"export_variables":{"definition":{"name":"export_variables","scope":"BRANCH","definitions":[{"name":"job_file_to_encrypt","type":"TEXT"},{"name":"job_s3_file_path","type":"TEXT"},{"name":"job_s3_file_name","type":"TEXT"},{"name":"job_galileo_working_dir","type":"TEXT"},{"name":"job_send_or_get","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]}}},"info":{"name":"Subscription Billing Export","description":"Exports billing transactions to Galileo.  Initially for Planet Protection.","type":"ORCHESTRATION","tag":"06108a1b-c71b-47b1-9ffc-7fcac81a1a33"}}