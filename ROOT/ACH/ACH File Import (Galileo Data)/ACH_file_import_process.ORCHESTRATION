{"job":{"components":{"2968272":{"id":2968272,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":0,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2968325],"outputSuccessConnectorIDs":[2968329],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"decrypt ach file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\nimport boto3\n#python function to call lambda to decrypt s3 file from galileo\n\nbody = json.dumps(dict(operation='dec',file='${ach_full_file_path}',\n                       decrypted_file_path='${file_path}',\n                       extension='gpg'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:prod-python-encrypt-decrypt-manual',\n    InvocationType='RequestResponse',\n    LogType='Tail',\n    Payload=body\n    )\n\n    \nif __name__ == \"__main__\":\n    run_lambda()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968273":{"id":2968273,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-96,"y":16,"width":32,"height":32,"inputConnectorIDs":[2968324],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log no file to import"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log any files expected to be there but weren't\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'ACH File Import',\n       'Expected file ${ach_file_name}, but it was not present on Galileo sftp',\n        null,\n       'rdl.ach_galileo_file',\n       'file_name = ${ach_file_name}',\n       'high';"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968275":{"id":2968275,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":112,"y":16,"width":32,"height":32,"inputConnectorIDs":[2968330],"outputSuccessConnectorIDs":[2968274],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"load into staging"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists etl.ach_galileo_file_staging;\ncreate table etl.ach_galileo_file_staging\n(\n  trans_date varchar(50),\n  load_date varchar(50),\n  trans_type varchar(20),\n  amt decimal(38,2),\n  ext_trans_id varchar(300),\n  return_code varchar(20),\n  trace_no varchar(50),\n  return_trace_no varchar(50)\n);\n\n--on 7/26/2022, Galileo started including trace_no and return_trace_no\n--the statement below accounts for this file change\nCOPY INTO etl.ach_galileo_file_staging\nFROM\n( select\n      csv.$1\n     ,csv.$2\n     ,csv.$3\n     ,csv.$4\n     ,csv.$5\n     ,csv.$6\n     ,case when '${file_date}' < '2022-07-26' then null else csv.$7 end\n     ,case when '${file_date}' < '2022-07-26' then null else csv.$8 end\n  from '${copy_into_full_path}'\n       (file_format => CSV_SKIP_HEADER) csv )\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968276":{"id":2968276,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-192,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2968332],"outputSuccessConnectorIDs":[2968328],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"check for file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\nimport boto3\nimport botocore\n\ns3 = boto3.resource('s3')\n\ntry:\n    s3.Object(job_s3_bucket, \"file_processing/ach/ach-galileo-file/\" + ach_gpg_file_name).load()\nexcept botocore.exceptions.ClientError as e:\n       context.updateVariable('ach_file_exists', \"false\")\nelse:\n       context.updateVariable('ach_file_exists', \"true\")\n\nprint(\"ACH file exists: \" + ach_file_exists)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968277":{"id":2968277,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-387,"y":-84,"width":32,"height":32,"inputConnectorIDs":[2968327],"outputSuccessConnectorIDs":[2968335],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"set variables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\ncontext.updateVariable('s3_full_path', file_path + \"/\" + ach_file_name)\ncontext.updateVariable('ach_gpg_file_name', ach_file_name + '.gpg')\ncontext.updateVariable('ach_full_file_path', file_path + \"/\" + ach_gpg_file_name)\ncontext.updateVariable('copy_into_full_path', copy_into_path + \"/\" + ach_file_name)\nprint (s3_full_path)\n#print (copy_into_full_path)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968278":{"id":2968278,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":-96,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2968328],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[2968325],"outputFalseConnectorIDs":[2968324],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file exists"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"ach_file_exists"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"true"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968279":{"id":2968279,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-291,"y":-73,"width":32,"height":32,"inputConnectorIDs":[2968335],"outputSuccessConnectorIDs":[2968332],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"get ach file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\n#python function to call lambda to get galileo response file\n\nbody = json.dumps(dict(operation='get',working_dir='${response_file_path}',\n                       s3_output='${ach_full_file_path}',\n                       sftp_file_name='${ach_gpg_file_name}',\n                       #lambda_arn='${job_next_lambda}',\n                       db_file_name='${ach_file_name}'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:sftp-to-s3-python',\n    InvocationType='RequestResponse',\n    LogType='Tail',\n    Payload=body\n    )\n\n    \nif __name__ == \"__main__\":\n    run_lambda()\n    \n    "}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968280":{"id":2968280,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-160,"y":208,"width":32,"height":32,"inputConnectorIDs":[2968331],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log data imported"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log any files expected to be there but weren't\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'ACH File Import',\n       'Data import completed successfully - ${records_inserted} records inserted.',\n        ${records_inserted},\n       'rdl.ach_galileo_file',\n       'file_name = ${ach_file_name}',\n       'low';"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968281":{"id":2968281,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":110,"y":209,"width":32,"height":32,"inputConnectorIDs":[2968333],"outputSuccessConnectorIDs":[2968334],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into final table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Insert into rdl.ach_galileo_file\n(\n    file_name,\n    file_date,\n    transaction_date,\n    load_date,\n    transaction_type,\n    amount,\n    transaction_id,\n    return_code,\n    trace_no,\n    return_trace_no\n)\nselect\n    '${ach_file_name}',\n    '${file_date}',\n    to_timestamp_tz('20' || substring(to_date(left(trans_date,9)),3,8) || ' ' || substring(trans_date,11,8)),\n    to_timestamp_tz('20' || substring(to_date(left(load_date,9)),3,8) || ' ' || substring(load_date,11,8)),\n    trans_type,\n    amt,\n    nullif(trim(ext_trans_id),''),\n    nullif(trim(return_code),''),\n    trace_no,\n    return_trace_no    \nfrom etl.ach_galileo_file_staging;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968282":{"id":2968282,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-480,"y":-80,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2968327],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968283":{"id":2968283,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":-32,"y":208,"width":32,"height":32,"inputConnectorIDs":[2968334],"outputSuccessConnectorIDs":[2968331],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"get row count"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select count(*) as row_count\nfrom rdl.ach_galileo_file\nwhere file_name = '${ach_file_name}'\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"records_inserted"},"2":{"slot":2,"type":"STRING","value":"ROW_COUNT"}}}},"visible":true},"4":{"slot":4,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"5":{"slot":5,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968286":{"id":2968286,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":112,"y":112,"width":32,"height":32,"inputConnectorIDs":[2968274],"outputSuccessConnectorIDs":[2968333],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delete existing records for file"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delete from rdl.ach_galileo_file\nwhere file_name = '${ach_file_name}';"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968287":{"id":2968287,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":116,"y":-78,"width":32,"height":32,"inputConnectorIDs":[2968329],"outputSuccessConnectorIDs":[2968330],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delete gpg file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\nimport boto3\ns3_resource = boto3.resource(\"s3\")\n\n#move gpg file to archive-gpg\n#s3_resource.Object(job_s3_bucket, \n#                   \"file_processing/ach/ach-galileo-file/archive/\" + ach_gpg_file_name).copy_from(\n# CopySource = job_s3_bucket + \"/file_processing/ach/ach-galileo-file/\" + ach_gpg_file_name)\n\n#delete gpg from old location\ns3_resource.Object(job_s3_bucket, \n                   \"file_processing/ach/ach-galileo-file/\" + ach_gpg_file_name).delete()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2968274":{"id":2968274,"sourceID":2968275,"targetID":2968286},"2968328":{"id":2968328,"sourceID":2968276,"targetID":2968278},"2968329":{"id":2968329,"sourceID":2968272,"targetID":2968287},"2968330":{"id":2968330,"sourceID":2968287,"targetID":2968275},"2968331":{"id":2968331,"sourceID":2968283,"targetID":2968280},"2968332":{"id":2968332,"sourceID":2968279,"targetID":2968276},"2968333":{"id":2968333,"sourceID":2968286,"targetID":2968281},"2968334":{"id":2968334,"sourceID":2968281,"targetID":2968283},"2968335":{"id":2968335,"sourceID":2968277,"targetID":2968279}},"failureConnectors":{},"unconditionalConnectors":{"2968327":{"id":2968327,"sourceID":2968282,"targetID":2968277}},"trueConnectors":{"2968325":{"id":2968325,"sourceID":2968278,"targetID":2968272}},"falseConnectors":{"2968324":{"id":2968324,"sourceID":2968278,"targetID":2968273}},"iterationConnectors":{},"noteConnectors":{},"notes":{"2968284":{"id":2968284,"x":-325,"y":-147,"width":491,"height":105,"text":"If file ever needs to be reloaded from the beginning, **get ach** through **delete gpg** can be disabled.","colour":"e6e63c"}},"variables":{"ach_file_exists":{"definition":{"name":"ach_file_exists","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"true"},"ach_file_name":{"definition":{"name":"ach_file_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"Asp_ACH_Returns_Dtl_20220722.csv"},"ach_full_file_path":{"definition":{"name":"ach_full_file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"ach_gpg_file_name":{"definition":{"name":"ach_gpg_file_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"Asp_ACH_Returns_Dtl_20220722.csv.gpg"},"copy_into_full_path":{"definition":{"name":"copy_into_full_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@public.etl/file_processing/ach/ach-galileo-file/Asp_ACH_Returns_Dtl_20220722.csv"},"copy_into_path":{"definition":{"name":"copy_into_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@public.etl/file_processing/ach/ach-galileo-file"},"file_date":{"definition":{"name":"file_date","type":"DATETIME","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"2022-07-22"},"file_path":{"definition":{"name":"file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"s3://aspiration-etl-staging/file_processing/ach/ach-galileo-file"},"job_s3_bucket":{"definition":{"name":"job_s3_bucket","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"aspiration-etl-staging"},"records_inserted":{"definition":{"name":"records_inserted","type":"DECIMAL","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"13867"},"response_file_path":{"definition":{"name":"response_file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"/sftpdir"},"s3_full_path":{"definition":{"name":"s3_full_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""}},"grids":{}},"info":{"name":"ACH_file_import_process","description":null,"type":"ORCHESTRATION","tag":"b45ff29d-08f8-4b5d-8489-71c079e1fd15"}}