{"job":{"components":{"2966751":{"id":2966751,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":0,"y":208,"width":32,"height":32,"inputConnectorIDs":[2966820],"outputSuccessConnectorIDs":[2966824],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of extract entities"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\ncreate or replace file format UNIT21_JSON_FORMAT \n  type = 'JSON'\n  comment = 'JSON format for unit21 export files'\n;\n\n\ncopy into @public.DATATEAM/dump/jchen/unit21/daily_load/entity_extract_daily_${current_year}${current_month}${current_day}.json\nfrom (\n\nwith email_data as (\n    select USER_ID,\n           array_agg(EMAIL) as emails\n    from WEB_DB.USER_EMAIL\n    where 1 = 1\n    group by USER_ID\n)\n, phone_data as (\n    select USER_ID,\n           array_agg('+1' || PHONE_NUMBER) as phone_numbers\n    from WEB_DB.USER_PROFILE\n    where 1 = 1\n    group by USER_ID\n)\n, address_data as (\n    select up.USER_ID,\n           array_agg(\n                   object_construct(\n                           'street_name', left(a.STREET1 || COALESCE(a.STREET2, ''), 128),\n                           'city', a.CITY,\n                           'state', s.CODE,\n                           'postal_code', a.ZIP_OR_POSTAL_CODE,\n                           'country', c.CODE\n                       )\n               ) as address_json_array\n    from WEB_DB.ADDRESS a\n             join WEB_DB.USER_PROFILE up on (up.ADDRESS_ID = a.ID or up.MAILING_ADDRESS_ID = a.ID)\n             join WEB_DB.STATE s on a.STATE_ID = s.ID\n             join WEB_DB.COUNTRY c on a.COUNTRY_ID = c.ID\n    where 1 = 1\n--   and up.USER_ID = 605772\n--   and up.USER_ID=1111966\n    group by up.USER_ID\n)\n, application_ip_addresses_raw as (\n    select USER_ID,\n           row_number() over (partition by USER_ID order by DATE_CREATED) as rn,\n           IP_ADDRESS,\n           DATE_CREATED\n    from WEB_DB.USER_PRODUCT_APPLICATION\n    where 1 = 1\n--       and USER_ID = 2192747\n)\n\n, application_ip_addresses as (\n    select USER_ID,\n           array_agg(\n                   object_construct(\n                           'ip_address', IP_ADDRESS,\n                           'first_seen', DATE_PART(EPOCH_SECOND, CONVERT_TIMEZONE('America/Los_Angeles', 'UTC',\n                                                                                  DATE_CREATED::timestamp)),\n                           'last_seen', DATE_PART(EPOCH_SECOND, CONVERT_TIMEZONE('America/Los_Angeles', 'UTC',\n                                                                                 DATE_CREATED::timestamp))\n                       )\n               ) as ip_addresses\n    from application_ip_addresses_raw\n    where 1 = 1\n      and rn = 1\n      and IP_ADDRESS is not null\n    group by USER_ID\n)\n\nselect\narray_agg(objs) from (\n        select\n            object_construct(\n                'general_data', object_construct(\n                    'entity_id', u.UUID,\n                    'entity_type', 'user',\n                    'entity_subtype', '',\n                    'status', case\n                        when u.ENABLED then 'active'\n                        else 'suspended' end,\n                    'registered_at', DATE_PART(EPOCH_SECOND, CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', u.DATE_CREATED::timestamp ))\n                )\n                ,'user_data', object_construct(\n                    'first_name', up.FIRST_NAME,\n                    'middle_name', up.MIDDLE_NAME,\n                    'last_name', up.LAST_NAME,\n--                     'date_of_birth', up.DATE_OF_BIRTH,\n                    'day_of_birth', DATE_PART(DAY, up.DATE_OF_BIRTH),\n                    'month_of_birth', DATE_PART(MONTH, up.DATE_OF_BIRTH),\n                    'year_of_birth', DATE_PART(YEAR, up.DATE_OF_BIRTH),\n                    'gender', case\n                        when up.GENDER_TYPE=1 then 'male'\n                        when up.GENDER_TYPE=2 then 'female'\n                        else 'other' end,\n                    'ssn', substr(TAX_IDENTIFICATION_NUMBER, 1, 3) || '-' || substr(TAX_IDENTIFICATION_NUMBER, 4, 2) || '-' || substr(TAX_IDENTIFICATION_NUMBER, 6, 4)\n                )\n                ,'communication_data', object_construct(\n                    'email_addresses', ed.emails,\n                    'phone_numbers', pd.phone_numbers\n                )\n                , 'location_data', ad.address_json_array\n                , 'digital_data', object_construct(\n                    'ip_addresses', aia.ip_addresses\n                )\n            ) as objs\n        from WEB_DB._USER u\n        join WEB_DB.USER_PROFILE up on u.id=up.USER_ID\n        join email_data ed on u.id=ed.USER_ID\n        join phone_data pd on u.id=pd.USER_ID\n        join PCI.USER_PROFILE upsin on u.id=upsin.USER_ID and upsin.TAX_IDENTIFICATION_NUMBER is not null and upsin.TAX_IDENTIFICATION_NUMBER != ''\n        left join address_data ad on u.id=ad.USER_ID\n        left join application_ip_addresses aia on u.id=aia.USER_ID\n        where 1=1\n--           and u.UUID='df0c40c91dc645b0a06c266c247f8448'\n--           and u.id in (605772, 1111966)\n--           and u.id=2449314  -- hacked client\n          and date_trunc('day',up.DATE_CREATED)='${current_year}-${current_month}-${current_day}'\n    )\n\n)\nfile_format = (format_name = UNIT21_JSON_FORMAT, compression = NONE)\nSINGLE=true\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966768":{"id":2966768,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":336,"y":256,"width":32,"height":32,"inputConnectorIDs":[2966823],"outputSuccessConnectorIDs":[2966827],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract wire txns"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\ncreate or replace file format UNIT21_JSON_FORMAT \n  type = 'JSON'\n  comment = 'JSON format for unit21 export files'\n;\n\n\ncopy into @public.DATATEAM/dump/jchen/unit21/daily_load/wire_transaction_external_extract_daily_${current_year}${current_month}${current_day}.json\nfrom (\n\nselect\narray_agg(objs) from (\n        select\n            object_construct(\n                'general_data', object_construct(\n                    'event_id', 'p' || pt.ID,\n                    'event_type', 'transaction',\n                    'event_subtype', gl.DESCRIPTION,\n                    'event_time', DATE_PART(EPOCH_SECOND, pt.TRANSACTION_DATE::timestamp),\n                    'status', 'complete'\n                ),\n                'custom_data', object_construct(\n                    'description', replace(pt.DESCRIPTION, ':', ','),\n                    'post_date', pt.POST_DATE\n                ),\n                'transaction_data',\n                    case when amount < 0 then\n                        object_construct(\n                            'sent_amount', -pt.AMOUNT,\n                            'sender_entity_id', u.UUID,\n                            'sender_entity_type', 'user',\n                            'sender_source', 'internal',\n                            'sender_instrument_id', upa.ACCOUNT_NUMBER,\n--                             'received_amount', -ddt.AMOUNT,\n--                             'receiver_entity_id', ee.external_entity_id,\n--                             'receiver_entity_type', 'business',\n--                             'receiver_source', 'external',\n                            'amount', -pt.AMOUNT\n                        )\n                    else object_construct(\n                            'received_amount', pt.AMOUNT,\n                            'receiver_entity_id', u.UUID,\n                            'receiver_entity_type', 'user',\n                            'receiver_source', 'internal',\n                            'receiver_instrument_id', upa.ACCOUNT_NUMBER,\n--                             'sent_amount', ddt.AMOUNT,\n--                             'sender_entity_id', ee.external_entity_id,\n--                             'sender_entity_type', 'business',\n--                             'sender_source', 'external',\n                            'amount', pt.AMOUNT\n                        )\n                    end\n            ) as objs\n        from WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n        join WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\n        join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n        join WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\n        join WEB_DB.USER_PAYMENT_ACCOUNT upa on d.ID = upa.DEPOSITORY_ID\n        join WEB_DB._USER u on ua.USER_ID=u.id\n        JOIN web_db.galileo_lookup gl\n          ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n--         join unit21.instrument_mapping im on im.INSTRUMENT_TYPE=ittm.INSTRUMENT and im.user_id=ua.USER_ID\n        where 1=1\n--           and u.UUID='df0c40c91dc645b0a06c266c247f8448'\n--           and u.id in (605772, 1111966)\n\n--           and ua.USER_ID=2192747    -- debit card test user\n          and ittm.INSTRUMENT='wire'\n          and pt.POST_DATE='${current_year}-${current_month}-${current_day}'\n\n    )\n\n)\nfile_format = (format_name = UNIT21_JSON_FORMAT, compression = NONE)\nSINGLE=true\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966769":{"id":2966769,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":0,"y":512,"width":32,"height":32,"inputConnectorIDs":[2966817],"outputSuccessConnectorIDs":[2966823],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract ach transfer txns - external originated"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\ncreate or replace file format UNIT21_JSON_FORMAT \n  type = 'JSON'\n  comment = 'JSON format for unit21 export files'\n;\n\n\ncopy into @public.DATATEAM/dump/jchen/unit21/daily_load/ach_transaction_external_extract_daily_${current_year}${current_month}${current_day}.json\nfrom (\n\nselect\narray_agg(objs) from (\n        select\n            object_construct(\n                'general_data', object_construct(\n                    'event_id', 'p' || pt.ID,\n                    'event_type', 'transaction',\n                    'event_subtype', gl.DESCRIPTION,\n                    'event_time', DATE_PART(EPOCH_SECOND, pt.TRANSACTION_DATE::timestamp),\n                    'status', 'complete'\n                ),\n                'custom_data', object_construct(\n                    'description', replace(pt.DESCRIPTION, ':', ','),\n                    'post_date', pt.POST_DATE\n                ),\n                'transaction_data',\n                    case when pt.amount < 0 then\n                        object_construct(\n--                             'sent_amount', -ddt.AMOUNT,\n                            'sender_entity_id', u.UUID,\n                            'sender_entity_type', 'user',\n                            'sender_source', 'internal',\n                            'sender_instrument_id', upa.ACCOUNT_NUMBER,\n--                             'received_amount', -ddt.AMOUNT,\n--                             'receiver_entity_id', eea.external_entity_id,\n--                             'receiver_entity_type', 'business',\n--                             'receiver_source', 'external',\n--                             'receiver_instrument_id', eia.INSTRUMENT_ID,\n                            'amount', -pt.AMOUNT\n                        )\n                    else object_construct(\n--                             'received_amount', ddt.AMOUNT,\n                            'receiver_entity_id', u.UUID,\n                            'receiver_entity_type', 'user',\n                            'receiver_source', 'internal',\n                            'receiver_instrument_id', upa.ACCOUNT_NUMBER,\n--                             'sent_amount', ddt.AMOUNT,\n--                             'sender_entity_id', eea.external_entity_id,\n--                             'sender_entity_type', 'business',\n--                             'sender_source', 'external',\n--                             'sender_instrument_id', eia.INSTRUMENT_ID,\n                            'amount', pt.AMOUNT\n                        )\n                    end\n            ) as objs\n        from WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n        join WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\n        join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n        join WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\n        join WEB_DB.USER_PAYMENT_ACCOUNT upa on d.ID = upa.DEPOSITORY_ID\n        join WEB_DB._USER u on ua.USER_ID=u.id\n        JOIN web_db.galileo_lookup gl\n          ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n        where 1=1\n          and ittm.INSTRUMENT='ach'\n--           and im.USER_PAYMENT_ACCOUNT_ID is null\n          and gl.DESCRIPTION in ('Coastal ACH Debit', 'Coastal ACH Deposit')\n          and pt.POST_DATE='2021-06-19'\n\n    )\n\n)\nfile_format = (format_name = UNIT21_JSON_FORMAT, compression = NONE)\nSINGLE=true\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966770":{"id":2966770,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-208,"y":96,"width":32,"height":32,"inputConnectorIDs":[2966819],"outputSuccessConnectorIDs":[2966821],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"adhoc"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table unit21.debit_card_txns_load_status;\n\ncreate table unit21.debit_card_txns_load_status (\n  POSTED_TRANSACTION_ID numeric(38),\n  POST_DATE date,\n  FILENAME varchar(255),\n  etl_load_date timestamp_tz default current_timestamp not null\n)\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966771":{"id":2966771,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":336,"y":384,"width":32,"height":32,"inputConnectorIDs":[2966827],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract check txns"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\ncreate or replace file format UNIT21_JSON_FORMAT \n  type = 'JSON'\n  comment = 'JSON format for unit21 export files'\n;\n\n\ncopy into @public.DATATEAM/dump/jchen/unit21/daily_load/check_transaction_external_extract_daily_${current_year}${current_month}${current_day}.json\nfrom (\n\nselect\narray_agg(objs) from (\n        select\n            object_construct(\n                'general_data', object_construct(\n                    'event_id', 'p' || pt.ID,\n                    'event_type', 'transaction',\n                    'event_subtype', gl.DESCRIPTION,\n                    'event_time', DATE_PART(EPOCH_SECOND, pt.TRANSACTION_DATE::timestamp),\n                    'status', 'complete'\n                ),\n                'custom_data', object_construct(\n                    'description', replace(pt.DESCRIPTION, ':', ','),\n                    'post_date', pt.POST_DATE\n                ),\n                'transaction_data',\n                    case when amount < 0 then\n                        object_construct(\n                            'sent_amount', -pt.AMOUNT,\n                            'sender_entity_id', u.UUID,\n                            'sender_entity_type', 'user',\n                            'sender_source', 'internal',\n                            'sender_instrument_id', upa.ACCOUNT_NUMBER,\n--                             'received_amount', -ddt.AMOUNT,\n--                             'receiver_entity_id', ee.external_entity_id,\n--                             'receiver_entity_type', 'business',\n--                             'receiver_source', 'external',\n                            'amount', -pt.AMOUNT\n                        )\n                    else object_construct(\n                            'received_amount', pt.AMOUNT,\n                            'receiver_entity_id', u.UUID,\n                            'receiver_entity_type', 'user',\n                            'receiver_source', 'internal',\n                            'receiver_instrument_id', upa.ACCOUNT_NUMBER,\n--                             'sent_amount', ddt.AMOUNT,\n--                             'sender_entity_id', ee.external_entity_id,\n--                             'sender_entity_type', 'business',\n--                             'sender_source', 'external',\n                            'amount', pt.AMOUNT\n                        )\n                    end\n            ) as objs\n        from WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n        join WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\n        join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n        join WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\n        join WEB_DB.USER_PAYMENT_ACCOUNT upa on d.ID = upa.DEPOSITORY_ID\n        join WEB_DB._USER u on ua.USER_ID=u.id\n        JOIN web_db.galileo_lookup gl\n          ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n--         join unit21.instrument_mapping im on im.INSTRUMENT_TYPE=ittm.INSTRUMENT and im.user_id=ua.USER_ID\n        where 1=1\n--           and u.UUID='df0c40c91dc645b0a06c266c247f8448'\n--           and u.id in (605772, 1111966)\n\n--           and ua.USER_ID=2192747    -- debit card test user\n          and ittm.INSTRUMENT='check'\n          and pt.POST_DATE='${current_year}-${current_month}-${current_day}'\n\n    )\n\n)\nfile_format = (format_name = UNIT21_JSON_FORMAT, compression = NONE)\nSINGLE=true\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966772":{"id":2966772,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1155583855,"x":400,"y":112,"width":32,"height":32,"inputConnectorIDs":[2966825],"outputSuccessConnectorIDs":[2966822],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Get all dates to process"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true},"3":{"slot":3,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"4":{"slot":4,"name":"Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"galileo_interest_accrual"}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file_date"}}}},"visible":false},"7":{"slot":7,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select\n--     count(1)\n    distinct POST_DATE, FILENAME\nfrom unit21.DEBIT_CARD_TXNS_LOAD_STATUS\nwhere 1=1\n  and POST_DATE='2021-06-21'\n"}}}},"visible":true},"8":{"slot":8,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file_names"}}}},"visible":true},"9":{"slot":9,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"FILENAME"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"POST_DATE"}}}},"visible":true},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"20":{"slot":20,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"rdl"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966773":{"id":2966773,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-304,"y":144,"width":32,"height":32,"inputConnectorIDs":[2966821],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of fix permission"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GRANT USAGE ON SCHEMA ADW.UNIT21 TO DATA_ENGINEERING_GROUP;\n\nGRANT SELECT ON ALL TABLES IN SCHEMA ADW.UNIT21 TO DATA_ENGINEERING_GROUP;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966774":{"id":2966774,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":575,"y":155,"width":32,"height":16,"inputConnectorIDs":[2966822],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Grid Iterator 0"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file_names"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file_name"},"2":{"slot":2,"type":"STRING","value":"current_filename"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"post_date"},"2":{"slot":2,"type":"STRING","value":"current_post_date"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Sequential"}}}},"visible":true},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[2966845],"inputIterationConnectorIDs":[]},"2966775":{"id":2966775,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":208,"y":64,"width":32,"height":32,"inputConnectorIDs":[2966816],"outputSuccessConnectorIDs":[2966825],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert debit card txns load status"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delete from unit21.debit_card_txns_load_status\nwhere 1=1\n  and post_date='${current_year}-${current_month}-${current_day}'\n;\n\ninsert into unit21.debit_card_txns_load_status\n(POSTED_TRANSACTION_ID, POST_DATE, FILENAME)\nwith a as (\n    select pt.id,\n           pt.POST_DATE,\n           row_number() over (order by pt.ID)                                                as row_num,\n           ceil(row_num / 20000)                                                               as page_number,\n           'debit_card_transaction_extract_daily_${current_year}-${current_month}-${current_day}_page_' || page_number || '.json' as filename\n        from WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n        join WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\n        join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n        JOIN web_db.galileo_lookup gl\n          ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n    where 1 = 1\n      and pt.POST_DATE = '${current_year}-${current_month}-${current_day}'\n      and ittm.INSTRUMENT='debit_card'\n)\nselect \n    id,\n    POST_DATE,\n    filename\nfrom a\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966778":{"id":2966778,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":575,"y":155,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract_debit_card_txns_page"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract_debit_card_txns_page"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"current_filename"},"2":{"slot":2,"type":"STRING","value":"${current_filename}"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"current_post_date"},"2":{"slot":2,"type":"STRING","value":"${current_post_date}"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[2966845]},"2966828":{"id":2966828,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":0,"y":320,"width":32,"height":32,"inputConnectorIDs":[2966824],"outputSuccessConnectorIDs":[2966826],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract internal instrument"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\ncreate or replace file format UNIT21_JSON_FORMAT \n  type = 'JSON'\n  comment = 'JSON format for unit21 export files'\n;\n\n\ncopy into @public.DATATEAM/dump/jchen/unit21/daily_load/internal_instrument_extract_daily_${current_year}${current_month}${current_day}.json\nfrom (\n\nwith entity_data as (\n    select u.id                as user_id,\n           array_agg(\n                   object_construct(\n                           'entity_id', u.UUID,\n                           'entity_type', 'user'\n                       )\n               )               as entity_json,\n           min(u.DATE_CREATED) as DATE_CREATED\n    from WEB_DB._USER u\n    where 1 = 1\n--       and u.id = 2192747\n    group by u.id\n)\nselect\narray_agg(objs) from (\n        select\n            object_construct(\n                'instrument_id', upa.ACCOUNT_NUMBER,\n                'instrument_type', upa.NAME,\n                'source', 'internal',\n                'status', 'active',\n                'registered_at', DATE_PART(EPOCH_SECOND, CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', upa.DATE_CREATED::timestamp )),\n                'entities', ed.entity_json\n            ) as objs\n        from WEB_DB.USER_PAYMENT_ACCOUNT upa\n        join WEB_DB.USER_PROFILE up on upa.USER_ID=up.USER_ID\n        left join entity_data ed on upa.USER_ID=ed.user_id\n        where 1=1\n          and upa.DEPOSITORY_ID is not null\n          and upa.name in ('Aspiration Spend', 'Aspiration Save')\n          and date_trunc('day',up.DATE_CREATED)='${current_year}-${current_month}-${current_day}'\n\n\n    )\n\n)\nfile_format = (format_name = UNIT21_JSON_FORMAT, compression = NONE)\nSINGLE=true\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966829":{"id":2966829,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2966816,2966818,2966819],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966830":{"id":2966830,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":0,"y":96,"width":32,"height":32,"inputConnectorIDs":[2966818],"outputSuccessConnectorIDs":[2966820],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"check variables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nfrom datetime import datetime\nfrom datetime import timedelta\nfrom dateutil.relativedelta import relativedelta\nfrom pytz import timezone\n\n# print 'current time in PST: ', datetime.now(timezone('US/Pacific'))\n\n# today=datetime.now(timezone('US/Pacific')).strftime(\"%Y-%m-%d\")\n# print 'today: ', today\n\nprint '${current_year}-${current_month}-${current_day}'\n\n#context.updateVariable('file_date', file_date)\n\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966831":{"id":2966831,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":0,"y":416,"width":32,"height":32,"inputConnectorIDs":[2966826],"outputSuccessConnectorIDs":[2966817],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract debit card txns - post_date"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\ncreate or replace file format UNIT21_JSON_FORMAT \n  type = 'JSON'\n  comment = 'JSON format for unit21 export files'\n;\n\n\ncopy into @public.DATATEAM/dump/jchen/unit21/daily_load/debit_card_transaction_extract_daily_${current_year}${current_month}${current_day}.json\nfrom (\n\nselect\narray_agg(objs) from (\n        select\n            object_construct(\n                'general_data', object_construct(\n                    'event_id', 'p' || pt.ID,\n                    'event_type', 'transaction',\n                    'event_subtype', gl.DESCRIPTION,\n                    'event_time', DATE_PART(EPOCH_SECOND, pt.TRANSACTION_DATE::timestamp),\n                    'status', 'complete'\n                ),\n                'custom_data', object_construct(\n                    'description', replace(pt.DESCRIPTION, ':', ','),\n                    'post_date', pt.POST_DATE\n                ),\n                'transaction_data',\n                    case when amount < 0 then\n                        object_construct(\n                            'sent_amount', -pt.AMOUNT,\n                            'sender_entity_id', u.UUID,\n                            'sender_entity_type', 'user',\n                            'sender_source', 'internal',\n                            'sender_instrument_id', upa.ACCOUNT_NUMBER,\n--                             'received_amount', -ddt.AMOUNT,\n--                             'receiver_entity_id', ee.external_entity_id,\n--                             'receiver_entity_type', 'business',\n--                             'receiver_source', 'external',\n                            'amount', -pt.AMOUNT\n                        )\n                    else object_construct(\n                            'received_amount', pt.AMOUNT,\n                            'receiver_entity_id', u.UUID,\n                            'receiver_entity_type', 'user',\n                            'receiver_source', 'internal',\n                            'receiver_instrument_id', upa.ACCOUNT_NUMBER,\n--                             'sent_amount', ddt.AMOUNT,\n--                             'sender_entity_id', ee.external_entity_id,\n--                             'sender_entity_type', 'business',\n--                             'sender_source', 'external',\n                            'amount', pt.AMOUNT\n                        )\n                    end\n            ) as objs\n        from WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n        join WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\n        join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n        join WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\n        join WEB_DB.USER_PAYMENT_ACCOUNT upa on d.ID = upa.DEPOSITORY_ID\n        join WEB_DB._USER u on ua.USER_ID=u.id\n        JOIN web_db.galileo_lookup gl\n          ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n--         join unit21.instrument_mapping im on im.INSTRUMENT_TYPE=ittm.INSTRUMENT and im.user_id=ua.USER_ID\n        where 1=1\n--           and u.UUID='df0c40c91dc645b0a06c266c247f8448'\n--           and u.id in (605772, 1111966)\n\n--           and ua.USER_ID=2192747    -- debit card test user\n          and ittm.INSTRUMENT='debit_card'\n          and pt.POST_DATE='${current_year}-${current_month}-${current_day}'\n\n        limit 20000\n    )\n\n)\nfile_format = (format_name = UNIT21_JSON_FORMAT, compression = NONE)\nSINGLE=true\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2966817":{"id":2966817,"sourceID":2966831,"targetID":2966769},"2966820":{"id":2966820,"sourceID":2966830,"targetID":2966751},"2966821":{"id":2966821,"sourceID":2966770,"targetID":2966773},"2966822":{"id":2966822,"sourceID":2966772,"targetID":2966774},"2966823":{"id":2966823,"sourceID":2966769,"targetID":2966768},"2966824":{"id":2966824,"sourceID":2966751,"targetID":2966828},"2966825":{"id":2966825,"sourceID":2966775,"targetID":2966772},"2966826":{"id":2966826,"sourceID":2966828,"targetID":2966831},"2966827":{"id":2966827,"sourceID":2966768,"targetID":2966771}},"failureConnectors":{},"unconditionalConnectors":{"2966816":{"id":2966816,"sourceID":2966829,"targetID":2966775},"2966818":{"id":2966818,"sourceID":2966829,"targetID":2966830},"2966819":{"id":2966819,"sourceID":2966829,"targetID":2966770}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{"2966845":{"id":2966845,"sourceID":2966774,"targetID":2966778}},"noteConnectors":{},"notes":{},"variables":{"current_day":{"definition":{"name":"current_day","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"21"},"current_filename":{"definition":{"name":"current_filename","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"current_month":{"definition":{"name":"current_month","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"06"},"current_post_date":{"definition":{"name":"current_post_date","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"current_year":{"definition":{"name":"current_year","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"2021"}},"grids":{"file_names":{"definition":{"name":"file_names","scope":"BRANCH","definitions":[{"name":"file_name","type":"TEXT"},{"name":"post_date","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]}}},"info":{"name":"unit21_daily_load_day_backup_20210624","description":"","type":"ORCHESTRATION","tag":"f24d7483-2ef0-478c-9e6d-e18f99e5f0c1"}}