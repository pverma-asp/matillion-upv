{"job":{"components":{"2968544":{"id":2968544,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2968526,2968527],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968545":{"id":2968545,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-112,"y":112,"width":32,"height":32,"inputConnectorIDs":[2968526],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of insert to history"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into etl.GALILEO_ENROLLMENT_BATCH_DETAIL_HISTORY\n    (FILENAME, RECORD_TYPE, RECORD_NUMBER, PRODUCT_ID, PRIMARY_CARDHOLDER_FIRST_NAME, PRIMARY_CARDHOLDER_MIDDLE_NAME, PRIMARY_CARDHOLDER_LAST_NAME, ADDRESS_LINE_1, ADDRESS_LINE_2, CITY, STATE, ZIP_CODE, COUNTRY, PRIMARY_PHONE_NUMBER, SECONDARY_PHONE_NUMBER, EMAIL, ID_1_TYPE, ID_1_VALUE, ID_2_TYPE, ID_2_VALUE, DATE_OF_BIRTH, EXTERNAL_ID, EXPRESS_MAIL, LOAD_AMOUNT, LOAD_TYPE, LOAD_DESCRIPTION, HIT_ID, SOURCE, WEB_UID, WEB_PWD, SECRET_QUESTION, SECRET_ANSWER, MOBILE_PHONE_NUMBER, CARRIER_ID, EMBOSS_LINE_2)\nselect\n    '${galileo_filename}', record_type, record_number, product_id, primary_cardholder_first_name, primary_cardholder_middle_name, primary_cardholder_last_name, address_line_1, address_line_2, city, state, zip_code, country, primary_phone_number, secondary_phone_number, email, id_1_type, '*********', id_2_type, id_2_value, date_of_birth, external_id, express_mail, load_amount, load_type, load_description, hit_id, source, web_uid, web_pwd, secret_question, secret_answer, mobile_phone_number, carrier_id, emboss_line_2\nfrom etl.GALILEO_ENROLLMENT_BATCH_DETAIL\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968546":{"id":2968546,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":128,"y":64,"width":32,"height":32,"inputConnectorIDs":[2968527],"outputSuccessConnectorIDs":[2968525],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"load csv"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE if exists etl.ato_users_20210812;\n\nCREATE TABLE if not exists etl.ato_users_20210812 (\n  user_id varchar(255),\n  uuid varchar(255),\n  user_email varchar(255),\n  first_name varchar(255),\n  last_name varchar(255)\n)\n;\n\ncopy into etl.ato_users_20210812\n\tfrom @public.datateam/dump/jchen/promotions/20210810_ato_users.csv\nfile_format = (type ='CSV'\n    field_DELIMITER = ','\n    ESCAPE = '\\\\'\n    SKIP_HEADER = 1\n    )\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968547":{"id":2968547,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":160,"y":288,"width":32,"height":32,"inputConnectorIDs":[2968524],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Send_BEnrollment_File_to_Galileo 0"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Send_BEnrollment_File_to_Galileo"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"galileo_filename"},"2":{"slot":2,"type":"STRING","value":"${galileo_filename}"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2968550":{"id":2968550,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":160,"y":176,"width":32,"height":32,"inputConnectorIDs":[2968525],"outputSuccessConnectorIDs":[2968524],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create galileo enrollment table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"UPDATE etl.galileo_enrollment_batch_header\nSET file_name = '${galileo_filename}.gpg',\n       file_transmit_date = '${file_transmit_date}'\nWHERE record_type = 'H'\n;\n\ndelete from etl.galileo_enrollment_batch_detail;\ninsert into ETL.GALILEO_ENROLLMENT_BATCH_DETAIL\n    (RECORD_TYPE, RECORD_NUMBER, PRODUCT_ID, PRIMARY_CARDHOLDER_FIRST_NAME, PRIMARY_CARDHOLDER_MIDDLE_NAME, PRIMARY_CARDHOLDER_LAST_NAME, ADDRESS_LINE_1, ADDRESS_LINE_2, CITY, STATE, ZIP_CODE, COUNTRY, PRIMARY_PHONE_NUMBER, SECONDARY_PHONE_NUMBER, EMAIL, ID_1_TYPE, ID_1_VALUE, ID_2_TYPE, ID_2_VALUE, DATE_OF_BIRTH, EXTERNAL_ID, EXPRESS_MAIL, LOAD_AMOUNT, LOAD_TYPE, LOAD_DESCRIPTION, HIT_ID, SOURCE, WEB_UID, WEB_PWD, SECRET_QUESTION, SECRET_ANSWER, MOBILE_PHONE_NUMBER, CARRIER_ID, EMBOSS_LINE_2)\n\nwith aplus_users as (\n    select ua.USER_ID\n--     distinct PLAN_ID\n    from WEB_DB.SUBSCRIPTION s\n             join WEB_DB.USER_ACCOUNT ua on s.ACCOUNT_ID = ua.ACCOUNT_ID\n    where 1 = 1\n      and plan_id ILIKE 'planet%protection%'\n      and status = 'active'\n)\n, pids as (\nselect\n    da.USER_ID,\n    da.INCEPTION_DATE::date as inception_date,\n    datediff('day', da.INCEPTION_DATE, current_date()) as days_since_inception,\n    ap.USER_ID is not null as is_aplus_user,\n    case\n        when ap.USER_ID is null and days_since_inception < 30 then 6540     -- non aplus\n        when ap.USER_ID is null and days_since_inception >=30 then 6635     -- non aplus\n        when ap.USER_ID is not null and days_since_inception < 30 then 6541 -- aplus\n        when ap.USER_ID is not null and days_since_inception >=30 then 6542 -- aplus\n    end as pid\nfrom bi.DT_ACCOUNTS da\n-- join etl.ATO_USERS_LIST_20210602 atou on da.USER_ID=atou.USER_ID\nleft join aplus_users ap on da.USER_ID=ap.USER_ID\nwhere 1=1\n  and da.ACCOUNT_TYPE='Checking'\n  and da.TERMINATION_DATE is null\n  and da.IS_JOINT_ACCOUNT = false\n)\nselect\n--     pids.USER_ID,\n--     ue.EMAIL,\n    'D' as record_type\n    ,row_number() over (order by ue.USER_ID) as recordnumber\n    ,pids.pid::varchar as product_id\n    ,left(up.FIRST_NAME, 20)\n    ,left(COALESCE(up.MIDDLE_NAME, ''), 20)  -- can be null\n    ,left(up.LAST_NAME, 20)\n    ,left(a.STREET1, 30)\n    ,COALESCE(a.street2, '')  -- can be null\n    ,left(a.CITY, 20)\n    ,s.CODE\n    ,replace(a.ZIP_OR_POSTAL_CODE, '-', '')\n    ,'USA' as country\n    ,replace(up.PHONE_NUMBER, '-', '')\n    ,'' -- secondary phone number\n    ,ue.EMAIL\n    ,'2' -- ID 1 type\n    ,upsin.TAX_IDENTIFICATION_NUMBER -- sin number\n    ,'' -- ID 2 type\n    ,''\n    ,to_char(up.DATE_OF_BIRTH, 'MM/DD/YYYY')  -- date of birth\n    ,to_char(current_date(), 'YYYYMMDD') || '_' || to_char(current_time(), 'HH24MISS') || '_' || lpad(recordnumber, 6, '0') -- external id\n    ,case when pids.pid in (6541, 6542) then 'Y' else 'N' end  -- express mail\n    ,''  -- load amount\n    ,''  -- load type\n    ,''  -- load desc\n    ,''  -- hit id\n    ,''  -- source\n    ,''  -- web uid\n    ,''  -- web pwd\n    ,''  -- secret q\n    ,''  -- secret a\n    ,''  -- mobile phone\n    ,''  -- carrier id\n    ,''  -- emboss line 2\nfrom pids\njoin WEB_DB.user_profile up on pids.USER_ID=up.USER_ID\njoin WEB_DB.USER_EMAIL ue on up.USER_ID=ue.USER_ID and ue.IS_PRIMARY = true\njoin WEB_DB.ADDRESS a on up.ADDRESS_ID=a.id\njoin WEB_DB.STATE s on a.STATE_ID=s.ID\njoin PCI.USER_PROFILE upsin on upsin.USER_ID=up.USER_ID\nwhere 1=1\n  and ue.user_id in (\n    select user_id from etl.ATO_USERS_20210812\n    )\n;\n\n\n--trailer data\nUPDATE etl.galileo_enrollment_batch_trailer\n   SET \"count\" = (select count(*) from etl.galileo_enrollment_batch_detail)\nWHERE record_type = 'T';\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2968524":{"id":2968524,"sourceID":2968550,"targetID":2968547},"2968525":{"id":2968525,"sourceID":2968546,"targetID":2968550}},"failureConnectors":{},"unconditionalConnectors":{"2968526":{"id":2968526,"sourceID":2968544,"targetID":2968545},"2968527":{"id":2968527,"sourceID":2968544,"targetID":2968546}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"2968548":{"id":2968548,"x":255,"y":-9,"width":332,"height":337,"text":"make a copy of this job for any new task\n\nChange the 2 varialbes\n- filename\n- filedate\n\nand change the user ids in the 'create galileo table' component'\n\nrun the job, the file will show up in this s3 folder:\n\n\nand then populate the history table (GALILEO_ENROLLMENT_BATCH_DETAIL_HISTORY).\nhttps://s3.console.aws.amazon.com/s3/buckets/aspiration-datateam?region=us-west-2&prefix=dump/jchen/galileo_snowflake/&state=hashArgs%23\n\nThen run this job to parse the response file to populate the response table.\nGet_BEnrollment_response_File_from_Galileo_jchen_adhoc\n\nand run query to populate the google sheet the next day when the new galileo card data file (which have the galileo_account_ids) arrives.","colour":"e6e63c"}},"variables":{"file_transmit_date":{"definition":{"name":"file_transmit_date","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"08132021"},"galileo_filename":{"definition":{"name":"galileo_filename","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"benroll_584_20210813_001.txt"}},"grids":{}},"info":{"name":"20210813_batch_create_accounts_test","description":"","type":"ORCHESTRATION","tag":"6e8b352d-023f-4f6d-8e06-031db03abc1c"}}