{"job":{"components":{"2963101":{"id":2963101,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":-832,"y":-320,"width":32,"height":32,"inputConnectorIDs":[2963140,2963142,2963143],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2963146],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963120":{"id":2963120,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1785670938,"x":-1024,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963144],"outputSuccessConnectorIDs":[2963145],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Begin 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963121":{"id":2963121,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-544,"y":-64,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table ${Pnl_schema}.${Target_table};\n--truncate table ${Pnl_schema}.${Target_table}\n\n--delete from ${Pnl_schema}.${Target_table}\n--where \n--date_part(year, cast(${Pnl_schema}.${Target_table}.date as date)) = date_part(year, current_date)\n--and\n--date_part(month, cast(${Pnl_schema}.${Target_table}.date as date)) = date_part(month, current_date) - 1;\n--delete from ${Pnl_schema}.${Consolidated_table}\n--where \n--date_part(year, cast(${Pnl_schema}.${Consolidated_table}.date as date)) = date_part(year, current_date)\n--and\n--date_part(month, cast(${Pnl_schema}.${Consolidated_table}.date as date)) = date_part(month, current_date) - 1"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963122":{"id":2963122,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1540940111,"x":-736,"y":-368,"width":32,"height":32,"inputConnectorIDs":[2963146],"outputSuccessConnectorIDs":[2963102],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Rollback 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963123":{"id":2963123,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":977205684,"x":-640,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963149],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Commit 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963124":{"id":2963124,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":-1280,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963103],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[2963144],"outputFalseConnectorIDs":[2963147],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"If"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Exist_check_Target_table"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"1"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963125":{"id":2963125,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-928,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963145],"outputSuccessConnectorIDs":[2963150],"outputFailureConnectorIDs":[2963142],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Delete -1 month"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delete from edw.${Target_table}\nwhere \ndate_part(year, cast(edw.${Target_table}.date as date)) = date_part(year, dateadd(month, -1, current_date))\nand\ndate_part(month, cast(edw.${Target_table}.date as date)) = date_part(month, dateadd(month, -1, current_date))"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963126":{"id":2963126,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-1120,"y":-160,"width":32,"height":32,"inputConnectorIDs":[2963147],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_interest_expense"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_interest_expense"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963127":{"id":2963127,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1376,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963141],"outputSuccessConnectorIDs":[2963103],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Target table check"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\ncursor = context.cursor()\ntry:\n\tcursor.execute('select convert (integer, (select exists (select * from edw.'+Target_table+' limit 1)))')\n\tresult = cursor.fetchone()[0]\n\tcontext.updateVariable('Exist_check_Target_table', result)\nexcept:\n  \tcontext.updateVariable('Exist_check_Target_table', '0')\n    \nprint ('Variable value: '+str(Exist_check_Target_table))"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963128":{"id":2963128,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-832,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963150],"outputSuccessConnectorIDs":[2963148],"outputFailureConnectorIDs":[2963143],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Execution -1 month"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SET timezone = 'America/Los_Angeles';\n\nINSERT INTO edw.${Target_table}(execution,\n                                 User_id,\n                                 Account_id,\n                                 Depository_id,\n                                 Investment_id,\n                                 Account_type,\n                                 Product_type,\n                                 --Account_product_type_id,\n                                 --Account_product_type_name,\n                                 --Account_product_id,\n                                 --Account_product_name,\n                                 Non_customer,\n                                 Category,\n                                 Item,\n                                 Date,\n                                 Value,\n                                 Value_type)\n\nWITH\n\n  codes AS (\n    SELECT DISTINCT code\n    FROM web_db.galileo_lookup\n    WHERE description IN ('Interest', 'Interest Paid', 'Interest Posting', 'Interest Payment')\n  ),\n\n  interest_transactions AS (\n    SELECT ua.user_id AS User_id,\n           ua.account_id AS Account_id,\n           dep.id AS Depository_id,\n           'Depository'::text AS Account_type,\n           (CASE\n              WHEN dep.product_id = 3 THEN 'Summit'::text\n              WHEN dep.product_id = 4 THEN 'Spend'::text\n              WHEN dep.product_id = 5 THEN 'Save'::text\n              ELSE ''::text\n             END) AS Product_type,\n--            2 AS Account_product_type_id,\n--            'Depository'::text AS Account_product_type_name,\n--            dep.product_id AS Account_product_id,\n--            (CASE\n--               WHEN Account_product_id = 3 THEN 'Summit'::text\n--               WHEN Account_product_id = 4 THEN 'Spend'::text\n--               WHEN Account_product_id = 5 THEN 'Save'::text\n--               ELSE ''::text\n--              END) AS Account_product_name,\n           'Direct'::text AS Category,\n           'Interest Expense'::text AS Item,\n           'Cost'::text AS Value_type,\n           gpt.galileo_account_id::bigint AS Galileo_account_id,\n           pt.last_updated AS Transaction_date,\n           pt.amount AS Transaction_value\n    FROM web_db.posted_transaction AS pt\n           INNER JOIN web_db.galileo_posted_transaction gpt ON pt.id = gpt.posted_transaction_id\n           INNER JOIN web_db.depository AS dep ON pt.depository_id = dep.id\n           INNER JOIN edw.view_unique_user_accounts AS ua ON dep.account_id = ua.account_id\n           INNER JOIN web_db.account AS acc ON acc.id = ua.account_id\n    WHERE gpt.transaction_code_type IN (SELECT code FROM codes)\n      AND DATE_TRUNC('month', pt.last_updated) = DATE_TRUNC('month', current_date)\n      AND acc.product_type = 2\n      AND dep.product_id in (3, 5)\n  ),\n\n  list_of_accounts AS (\n    SELECT DISTINCT galileo_account_id::bigint AS Galileo_account_id\n    FROM rdl.raw_galileo_customer_master_data\n    ORDER BY galileo_account_id DESC\n  ),\n\n  date_gen AS (\n    SELECT DATEADD('day', i.i - 1, DATE_TRUNC('month', DATEADD(month, -1, current_date))) AS Date\n    FROM (\n           SELECT ROW_NUMBER() OVER(ORDER BY SEQ4()) i\n           FROM TABLE ( \n                GENERATOR(\n                        ROWCOUNT => 31\n                    )\n               )\n         ) i\n    WHERE DATE_TRUNC('month', Date) = DATE_TRUNC('month', DATEADD(month, -1, current_date))\n  ),\n\n  galileo_accounts_all_dates AS (\n    SELECT acc.Galileo_account_id, qd.date FROM list_of_accounts acc\n                                                  CROSS JOIN date_gen qd\n  ),\n\n  current_balances AS (\n    SELECT galileo_account_id::bigint,\n           (CASE WHEN available_balance_sign != '-' THEN available_balance::float\n                 ELSE 0 END) AS current_balance,\n           file_date\n    FROM rdl.raw_galileo_customer_master_data\n    WHERE DATE_TRUNC('month', file_date) = DATE_TRUNC('month', DATEADD(month, -1, current_date))\n    ORDER BY galileo_account_id, file_date\n  ),\n\n  last_known_value AS (\n    SELECT galileo_account_id::bigint,\n\n           (CASE WHEN available_balance_sign != '-' THEN available_balance::float\n                 ELSE 0 END) AS current_balance,\n\n           DATE_TRUNC('month', DATEADD(month, -1, current_date)) - 1 AS Date,\n           ROW_NUMBER() OVER (PARTITION BY galileo_account_id::bigint ORDER BY file_date DESC) AS num\n\n    FROM rdl.raw_galileo_customer_master_data\n    WHERE file_date < DATE_TRUNC('month', DATEADD(month, -1, current_date))\n  ),\n\n  combined AS (\n    SELECT ad.Galileo_account_id, cb.current_balance, ad.date\n    FROM current_balances cb\n           RIGHT JOIN galileo_accounts_all_dates ad\n                      ON ad.date = cb.file_date AND ad.Galileo_account_id = cb.galileo_account_id\n    UNION\n    SELECT l.galileo_account_id, l.current_balance, l.date FROM last_known_value l\n    WHERE num = 1\n  ),\n\n  combined_with_filled_values AS (\n    SELECT Galileo_account_id,\n           (CASE\n              WHEN combined.current_balance IS NULL\n                THEN FIRST_VALUE(combined.current_balance::float IGNORE NULLS) OVER\n                (PARTITION BY Galileo_account_id ORDER BY Date DESC, Galileo_account_id DESC\n                ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n              WHEN combined.current_balance IS NOT NULL\n                THEN combined.current_balance::float END) AS cb_last,\n           Date\n    FROM combined ORDER BY Galileo_account_id, Date\n  ),\n\n  sums_for_month AS (\n    SELECT Galileo_account_id AS id, sum(cb_last) AS msum\n    FROM combined_with_filled_values\n    WHERE DATE_TRUNC('month', date) = DATE_TRUNC('month', DATEADD(month, -1, current_date))\n    GROUP BY Galileo_account_id\n  ),\n\n  combined_by_monthly_percentage AS (\n    SELECT Galileo_account_id,\n           cb_last,\n           (CASE WHEN cb_last IS NULL THEN 0\n                 WHEN cb_last IS NOT NULL THEN cb_last END) AS Current_balance,\n           (SELECT s.msum FROM sums_for_month s WHERE s.id = Galileo_account_id) AS Month_sum,\n           (CASE WHEN month_sum IS NULL THEN 0\n                 WHEN month_sum = 0 THEN 0\n                 WHEN month_sum > 0 THEN Current_balance / Month_sum END) AS Day_share,\n           Date\n    FROM combined_with_filled_values\n    WHERE DATE_TRUNC('month', date) = DATE_TRUNC('month', dateadd(month, -1, current_date))\n  ),\n\n  group_interest_expense AS (\n    SELECT it.User_id,\n           it.Account_id,\n           it.Depository_id,\n           it.Account_type,\n           it.Product_type,\n           --        it.Account_product_type_id, it.Account_product_type_name,\n           --        it.Account_product_id, it.Account_product_name,\n           FALSE AS Non_customer,\n           Category,\n           Item,\n           c.Date,\n           -SUM(it.Transaction_value * c.Day_share) AS Value,\n           Value_type\n    FROM interest_transactions it\n           INNER JOIN combined_by_monthly_percentage c ON it.Galileo_account_id = c.Galileo_account_id\n    GROUP BY User_id, Account_id, Depository_id,\n             Account_type, Product_type,\n             --          Account_product_type_id, Account_product_type_name,\n             --          Account_product_id, Account_product_name,\n             Non_customer, Category, Item, c.Date, Value_type\n  )\n\nSELECT CURRENT_DATE() AS execution,\n       User_id,\n       Account_id,\n       Depository_id,\n       NULL AS Investment_id,\n       Account_type,\n       Product_type,\n       FALSE AS Non_customer,\n       Category,\n       Item,\n       Date,\n       Value,\n       Value_type\nFROM group_interest_expense;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963129":{"id":2963129,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1472,"y":-240,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2963141],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963130":{"id":2963130,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-736,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963148],"outputSuccessConnectorIDs":[2963149],"outputFailureConnectorIDs":[2963140],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Consolidated"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"-- Delete existing data\nDELETE FROM edw.${Consolidated_table} \nWHERE Item = ${Item_name} \n\tand\ndate_part(year, cast(edw.${Consolidated_table}.date as date)) = date_part(year, dateadd(month, -1, current_date))\nand\ndate_part(month, cast(edw.${Consolidated_table}.date as date)) = date_part(month, dateadd(month, -1, current_date));\n\n-- Insert updated data\n\nINSERT INTO edw.${Consolidated_table}(execution,\n                                 User_id,\n                                 Account_id,\n                                 Depository_id,\n                                 Investment_id,\n                                 Account_type,\n                                 Product_type,\n                                 --Account_product_type_id,\n                                 --Account_product_type_name,\n                                 --Account_investment_type_id,\n                                 --Account_investment_type_name,\n                                 --Account_type_id,\n                                 --Account_type_name,\n                                 --Account_product_id,\n                                 --Account_product_name,\n                                 Non_customer,\n                                 Category,\n                                 Item,\n                                 Value_type,\n                                 Value,\n                                 Date)\n(SELECT execution,\n       User_id,\n       Account_id,\n       Depository_id,\n       Investment_id,\n       Account_type,\n       Product_type,\n       --Account_product_type_id,\n       --Account_product_type_name,\n       --Account_investment_type_id,\n       --Account_investment_type_name,\n       --Account_type_id,\n       --Account_type_name,\n       --Account_product_id,\n       --Account_product_name,\n       Non_customer,\n       Category,\n       Item,\n       Value_type,\n       Value,\n       Date\nFROM edw.${Target_table}\nwhere\t\ndate_part(year, cast(edw.${Target_table}.date as date)) = date_part(year, dateadd(month, -1, current_date))\nand\ndate_part(month, cast(edw.${Target_table}.date as date)) = date_part(month, dateadd(month, -1, current_date)));"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963131":{"id":2963131,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-544,"y":-128,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GRANT"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"idudkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"idudkin.ctr\";"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963134":{"id":2963134,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":-656,"y":-368,"width":32,"height":32,"inputConnectorIDs":[2963102],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2963102":{"id":2963102,"sourceID":2963122,"targetID":2963134},"2963103":{"id":2963103,"sourceID":2963127,"targetID":2963124},"2963145":{"id":2963145,"sourceID":2963120,"targetID":2963125},"2963148":{"id":2963148,"sourceID":2963128,"targetID":2963130},"2963149":{"id":2963149,"sourceID":2963130,"targetID":2963123},"2963150":{"id":2963150,"sourceID":2963125,"targetID":2963128}},"failureConnectors":{"2963140":{"id":2963140,"sourceID":2963130,"targetID":2963101},"2963142":{"id":2963142,"sourceID":2963125,"targetID":2963101},"2963143":{"id":2963143,"sourceID":2963128,"targetID":2963101}},"unconditionalConnectors":{"2963141":{"id":2963141,"sourceID":2963129,"targetID":2963127},"2963146":{"id":2963146,"sourceID":2963101,"targetID":2963122}},"trueConnectors":{"2963144":{"id":2963144,"sourceID":2963124,"targetID":2963120}},"falseConnectors":{"2963147":{"id":2963147,"sourceID":2963124,"targetID":2963126}},"iterationConnectors":{},"noteConnectors":{},"notes":{"2963135":{"id":2963135,"x":-587,"y":-168,"width":87,"height":140,"text":"for development","colour":"d60000"}},"variables":{"Consolidated_table":{"definition":{"name":"Consolidated_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"consolidated_pnl"},"Exist_check_Target_table":{"definition":{"name":"Exist_check_Target_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":null},"Item_name":{"definition":{"name":"Item_name","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"'Interest Expense'"},"Month_iterator":{"definition":{"name":"Month_iterator","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"Pnl_schema":{"definition":{"name":"Pnl_schema","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"edw"},"Target_table":{"definition":{"name":"Target_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":"interest_expense"}},"grids":{}},"info":{"name":"pnl_exec_interest_expense","description":"Script for updating item on regular basis","type":"ORCHESTRATION","tag":"c2ab9af9-8343-488c-8a14-4e31f17e1d79"}}