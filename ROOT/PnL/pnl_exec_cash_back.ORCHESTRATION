{"job":{"components":{"2963264":{"id":2963264,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1376,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963280],"outputSuccessConnectorIDs":[2963291],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Target table check"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\ncursor = context.cursor()\ntry:\n\tcursor.execute('select convert (integer, (select exists (select * from edw.'+Target_table+' limit 1)))')\n\tresult = cursor.fetchone()[0]\n\tcontext.updateVariable('Exist_check_Target_table', result)\nexcept:\n  \tcontext.updateVariable('Exist_check_Target_table', '0')\n    \nprint ('Variable value: '+str(Exist_check_Target_table))"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963265":{"id":2963265,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":-1280,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963291],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[2963286],"outputFalseConnectorIDs":[2963281],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"If"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Exist_check_Target_table"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"1"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963266":{"id":2963266,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-544,"y":-64,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table ${Pnl_schema}.${Target_table};\n--truncate table ${Pnl_schema}.${Consolidated_table}\n\n--delete from ${Pnl_schema}.${Target_table}\n--where \n--date_part(year, cast(${Pnl_schema}.${Target_table}.date as date)) = date_part(year, current_date)\n--and\n--date_part(month, cast(${Pnl_schema}.${Target_table}.date as date)) = date_part(month, current_date) - 1;\n--delete from ${Pnl_schema}.${Consolidated_table}\n--where \n--date_part(year, cast(${Pnl_schema}.${Consolidated_table}.date as date)) = date_part(year, current_date)\n--and\n--date_part(month, cast(${Pnl_schema}.${Consolidated_table}.date as date)) = date_part(month, current_date) - 1"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963267":{"id":2963267,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-1120,"y":-160,"width":32,"height":32,"inputConnectorIDs":[2963281],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_cash_back"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_cash_back"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963268":{"id":2963268,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-544,"y":-128,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GRANT"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"idudkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"idudkin.ctr\";"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963269":{"id":2963269,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-832,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963288],"outputSuccessConnectorIDs":[2963290],"outputFailureConnectorIDs":[2963282],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Execution -1 month"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SET timezone TO 'America/Los_Angeles';\n\nINSERT INTO edw.cash_back(execution,\n                          User_id,\n                          Account_id,\n                          Depository_id,\n                          Investment_id,\n                          Account_type,\n                          Product_type,\n--                           Account_product_type_id,\n--                           Account_product_type_name,\n--                           Account_product_id,\n--                           Account_product_name,\n                          Non_customer,\n                          Category,\n                          Item,\n                          Date,\n                          Value,\n                          Value_type)\n\nWITH\n  month_dates AS (\n    SELECT DATE_TRUNC('month', DATEADD(month, -1, current_date))::date AS prev_month_first,\n           LAST_DAY(prev_month_first) AS prev_month_last,\n           DATE_TRUNC('month', prev_month_last + 1) AS cur_month_first\n  ),\n\n  cashback_reward_code AS (\n    SELECT DISTINCT code\n    FROM web_db.galileo_lookup\n    WHERE description = 'Cashback Rewards'\n  ),\n\n  monthly_cashback_rewards AS (\n    SELECT dep.id AS Account_dep_inv_id,\n           SUM(pt.amount) AS Month_amount\n    FROM web_db.galileo_posted_transaction gpt\n           INNER JOIN web_db.posted_transaction pt ON gpt.posted_transaction_id = pt.id\n           INNER JOIN web_db.depository dep ON pt.depository_id = dep.id\n    WHERE gpt.transaction_code_type IN (SELECT code FROM cashback_reward_code)\n      AND DATE_TRUNC('month', pt.post_date) = (SELECT cur_month_first FROM month_dates)\n      AND dep.product_id IN (3, 4, 5)\n    GROUP BY dep.id\n  ),\n\n  list_of_accounts AS (\n    SELECT DISTINCT dep.id AS Account_dep_inv_id\n    FROM web_db.depository dep\n    ORDER BY Account_dep_inv_id DESC\n  ),\n\n  date_gen AS (\n    SELECT DATE_ADD('day', i.i - 1, DATE_TRUNC('month', DATEADD(month, -1, current_date))) AS Date\n    FROM (\n           SELECT ROW_NUMBER() OVER() i\n           FROM stl_scan\n           LIMIT 31\n         ) i\n    WHERE DATE_TRUNC('month', Date) = DATE_TRUNC('month', DATEADD(month, -1, current_date))\n  ),\n\n  all_deposits_all_dates AS (\n    SELECT deps.Account_dep_inv_id, qd.date FROM list_of_accounts AS deps\n                                                   CROSS JOIN date_gen AS qd\n  ),\n\n  card_daily_payments AS (\n    SELECT dep.id AS Account_dep_inv_id,\n           pt.post_date::date AS Date,\n           SUM(cpt.amount) AS Daily_payment\n    FROM web_db.depository dep\n           INNER JOIN web_db.posted_transaction pt ON pt.depository_id = dep.id\n           INNER JOIN web_db.galileo_posted_transaction gpt ON gpt.posted_transaction_id = pt.id\n           INNER JOIN web_db.cashback_posted_transaction cpt ON cpt.posted_transaction_id = pt.id\n    WHERE DATE_TRUNC('month', pt.post_date) = DATE_TRUNC('month', DATEADD(month, -1, current_date))\n    GROUP BY Account_dep_inv_id, pt.post_date\n  ),\n\n  combined AS (\n    SELECT ad.Account_dep_inv_id,\n           ad.Date,\n           (CASE WHEN cdp.Daily_payment IS NULL THEN 0\n                 ELSE cdp.Daily_payment END) AS Daily_payment\n    FROM card_daily_payments cdp\n           RIGHT JOIN all_deposits_all_dates ad\n                      ON cdp.Date = ad.Date AND cdp.Account_dep_inv_id = ad.Account_dep_inv_id\n  ),\n\n  sums_for_month AS (\n    SELECT Account_dep_inv_id AS id, sum(Daily_payment) AS msum\n    FROM combined\n    GROUP BY id\n  ),\n\n  combined_by_monthly_percentage AS (\n    SELECT Account_dep_inv_id,\n           Daily_payment,\n           (SELECT s.msum FROM sums_for_month s WHERE s.id = Account_dep_inv_id) AS Month_sum,\n           (CASE WHEN Month_sum = 0 THEN 0\n                 ELSE Daily_payment::float / Month_sum::float END) AS Day_share,\n           Date\n    FROM combined\n  ),\n\n  combined_total AS (\n    SELECT mc.Account_dep_inv_id,\n           SUM(c.Day_share) * MAX(mc.Month_amount) AS interchange_reward_by_day,\n           c.Date\n    FROM combined_by_monthly_percentage c\n           INNER JOIN monthly_cashback_rewards mc ON mc.Account_dep_inv_id = c.Account_dep_inv_id\n    GROUP BY mc.Account_dep_inv_id, c.Date\n  )\n\nSELECT getdate() AS execution,\n       ua.user_id AS User_id,\n       ua.account_id AS Account_id,\n       ct.Account_dep_inv_id AS Depository_id,\n       NULL AS Investment_id,\n       'Depository'::text AS Account_type,\n       (CASE\n          WHEN dep.product_id = 3 THEN 'Summit'::text\n          WHEN dep.product_id = 4 THEN 'Spend'::text\n          WHEN dep.product_id = 5 THEN 'Save'::text\n          ELSE ''::text\n         END) AS Product_type,\n--        2 AS Account_product_type_id,\n--        'Depository'::text AS Account_product_type_name,\n--        dep.product_id AS Account_product_id,\n--        (CASE\n--           WHEN Account_product_id = 3 THEN 'Summit'::text\n--           WHEN Account_product_id = 4 THEN 'Spend'::text\n--           WHEN Account_product_id = 5 THEN 'Save'::text\n--           ELSE ''::text\n--          END) AS Account_product_name,\n       FALSE AS Non_customer,\n       'Direct'::text AS Category,\n       'Cash Back'::text AS Item,\n       ct.Date,\n       -ct.interchange_reward_by_day AS Value,\n       'Cost'::text AS Value_type\nFROM combined_total ct\n       INNER JOIN web_db.depository dep ON ct.Account_dep_inv_id = dep.id\n       INNER JOIN edw.view_unique_user_accounts ua ON ua.account_id = dep.account_id;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963270":{"id":2963270,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-928,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963287],"outputSuccessConnectorIDs":[2963288],"outputFailureConnectorIDs":[2963341],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Delete -1 month"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delete from edw.${Target_table}\nwhere \ndate_part(year, cast(edw.${Target_table}.date as date)) = date_part(year, dateadd(month, -1, current_date))\nand\ndate_part(month, cast(edw.${Target_table}.date as date)) = date_part(month, dateadd(month, -1, current_date))"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963271":{"id":2963271,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-736,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963290],"outputSuccessConnectorIDs":[2963284],"outputFailureConnectorIDs":[2963340],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Consolidated"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"-- Delete existing data\nDELETE FROM edw.${Consolidated_table} \nWHERE Item = ${Item_name} \n\tand\ndate_part(year, cast(edw.${Consolidated_table}.date as date)) = date_part(year, dateadd(month, -1, current_date))\nand\ndate_part(month, cast(edw.${Consolidated_table}.date as date)) = date_part(month, dateadd(month, -1, current_date));\n\n-- Insert updated data\n\nINSERT INTO edw.${Consolidated_table}(execution,\n                                 User_id,\n                                 Account_id,\n                                 Depository_id,\n                          \t\t Investment_id,\n                                 Account_type,\n                                 Product_type,\n                                 --Account_product_type_id,\n                                 --Account_product_type_name,\n                                 --Account_investment_type_id,\n                                 --Account_investment_type_name,\n                                 --Account_type_id,\n                                 --Account_type_name,\n                                 --Account_product_id,\n                                 --Account_product_name,\n                                 Non_customer,\n                                 Category,\n                                 Item,\n                                 Value_type,\n                                 Value,\n                                 Date)\n(SELECT execution,\n       User_id,\n       Account_id,\n       Depository_id,\n       Investment_id,\n       Account_type,\n       Product_type,\n       --Account_product_type_id,\n       --Account_product_type_name,\n       --Account_investment_type_id,\n       --Account_investment_type_name,\n       --Account_type_id,\n       --Account_type_name,\n       --Account_product_id,\n       --Account_product_name,\n       Non_customer,\n       Category,\n       Item,\n       Value_type,\n       Value,\n       Date\nFROM edw.${Target_table}\nwhere\t\ndate_part(year, cast(edw.${Target_table}.date as date)) = date_part(year, dateadd(month, -1, current_date))\nand\ndate_part(month, cast(edw.${Target_table}.date as date)) = date_part(month, dateadd(month, -1, current_date)));"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963274":{"id":2963274,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1472,"y":-240,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2963280],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963289":{"id":2963289,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":-656,"y":-368,"width":32,"height":32,"inputConnectorIDs":[2963285],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963292":{"id":2963292,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":977205684,"x":-640,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963284],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Commit 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963293":{"id":2963293,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1785670938,"x":-1024,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963286],"outputSuccessConnectorIDs":[2963287],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Begin 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963294":{"id":2963294,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":-832,"y":-320,"width":32,"height":32,"inputConnectorIDs":[2963282,2963340,2963341],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2963283],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963295":{"id":2963295,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1540940111,"x":-736,"y":-368,"width":32,"height":32,"inputConnectorIDs":[2963283],"outputSuccessConnectorIDs":[2963285],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Rollback 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2963284":{"id":2963284,"sourceID":2963271,"targetID":2963292},"2963285":{"id":2963285,"sourceID":2963295,"targetID":2963289},"2963287":{"id":2963287,"sourceID":2963293,"targetID":2963270},"2963288":{"id":2963288,"sourceID":2963270,"targetID":2963269},"2963290":{"id":2963290,"sourceID":2963269,"targetID":2963271},"2963291":{"id":2963291,"sourceID":2963264,"targetID":2963265}},"failureConnectors":{"2963282":{"id":2963282,"sourceID":2963269,"targetID":2963294},"2963340":{"id":2963340,"sourceID":2963271,"targetID":2963294},"2963341":{"id":2963341,"sourceID":2963270,"targetID":2963294}},"unconditionalConnectors":{"2963280":{"id":2963280,"sourceID":2963274,"targetID":2963264},"2963283":{"id":2963283,"sourceID":2963294,"targetID":2963295}},"trueConnectors":{"2963286":{"id":2963286,"sourceID":2963265,"targetID":2963293}},"falseConnectors":{"2963281":{"id":2963281,"sourceID":2963265,"targetID":2963267}},"iterationConnectors":{},"noteConnectors":{},"notes":{"2963275":{"id":2963275,"x":-587,"y":-168,"width":87,"height":140,"text":"for development","colour":"d60000"}},"variables":{"Consolidated_table":{"definition":{"name":"Consolidated_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"consolidated_pnl"},"Exist_check_Target_table":{"definition":{"name":"Exist_check_Target_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":null},"Item_name":{"definition":{"name":"Item_name","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"'Cash Back'"},"Month_iterator":{"definition":{"name":"Month_iterator","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"Pnl_schema":{"definition":{"name":"Pnl_schema","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"edw"},"Target_table":{"definition":{"name":"Target_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":"cash_back"}},"grids":{}},"info":{"name":"pnl_exec_cash_back","description":"Script for updating item on regular basis","type":"ORCHESTRATION","tag":"e5a20749-ce78-415d-a94a-495db5324284"}}