{"job":{"components":{"2963968":{"id":2963968,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1648,"y":-240,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2963961],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963970":{"id":2963970,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-544,"y":-128,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GRANT"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"idudkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"idudkin.ctr\";"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963971":{"id":2963971,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-848,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963987],"outputSuccessConnectorIDs":[2963986],"outputFailureConnectorIDs":[2963957],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Execution -1 quarter"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SET timezone = 'America/Los_Angeles';\n\nINSERT INTO edw.${Target_table}(execution,\n                                      User_id,\n                                      Account_id,\n                                      Depository_id,\n                                      Investment_id,\n                                      Account_type,\n                                      Product_type,\n--                                       Account_product_type_id,\n--                                       Account_product_type_name,\n--                                       Account_product_id,\n--                                       Account_product_name,\n                                      Non_customer,\n                                      Category,\n                                      Item,\n                                      Date,\n                                      Value,\n                                      Value_type)\n\nWITH\n    quarter_dates AS (\n      SELECT DATE_TRUNC('quarter', DATEADD('quarter', 0, current_date)) AS cur_quart_first,\n             cur_quart_first - 1 AS prev_quart_last,\n             DATE_TRUNC('quarter', prev_quart_last) AS prev_quart_first,\n             DATEDIFF(day, prev_quart_first, cur_quart_first) AS days_in_quart\n    ),\n\n    date_gen AS (\n        SELECT DATEADD('day', i.i - 1, DATE_TRUNC('quarter', (SELECT prev_quart_first FROM quarter_dates) - 1)) AS Date\n        FROM (\n             SELECT ROW_NUMBER() OVER(ORDER BY i) i\n             FROM etl.numbers_1000\n             LIMIT 200\n           ) i\n        WHERE DATE_TRUNC('quarter', Date) = (SELECT prev_quart_first FROM quarter_dates)\n    ),\n\n    count_depositories AS (\n        SELECT dep.product_id,\n               COUNT(CASE WHEN dep.product_id = 5 THEN 1 END) AS save_cnt,\n               COUNT(CASE WHEN dep.product_id = 4 THEN 1 END) AS spend_cnt,\n               (CASE WHEN dep.product_id = 5\n                 THEN (SELECT save_portion::float FROM edw.etl_coastal_quarterly_fee\n                       WHERE DATE_TRUNC('quarter', date) = (SELECT prev_quart_first FROM quarter_dates)) / save_cnt\n                 ELSE (SELECT spend_portion::float FROM edw.etl_coastal_quarterly_fee\n                       WHERE DATE_TRUNC('quarter', date) = (SELECT prev_quart_first FROM quarter_dates)) / spend_cnt\n                 END) AS coastal_avg_quart\n            FROM web_db.depository dep\n                INNER JOIN edw.view_unique_user_accounts uau ON uau.account_id = dep.account_id\n                INNER JOIN edw.view_accounts_termination_dates atd ON atd.account_id = dep.account_id\n            WHERE dep.product_id IN (4, 5)\n            AND dep.inception_date <= (SELECT prev_quart_last FROM quarter_dates)\n            AND (atd.termination_date IS NULL\n                OR (atd.termination_date::date >= (SELECT prev_quart_first FROM quarter_dates)\n                    AND dep.inception_date <= atd.termination_date))\n            GROUP BY dep.product_id\n    ),\n\n    coastal_save_fee AS (\n       SELECT coastal_avg_quart\n       FROM count_depositories\n       WHERE product_id = 5\n    ),\n\n    coastal_spend_fee AS (\n      SELECT coastal_avg_quart\n      FROM count_depositories\n      WHERE product_id = 4\n    ),\n\n    coastal_fee_by_depository AS (\n      SELECT uau.user_id AS User_id,\n             uau.account_id AS Account_id,\n             dep.id AS Depository_id,\n             dep.product_id AS Account_product_id,\n             DATEDIFF(day, (SELECT prev_quart_first FROM quarter_dates), dep.inception_date::date) AS start_diff,\n             (CASE WHEN start_diff IS NULL THEN 0\n                   WHEN start_diff < 0 THEN 0\n                   ELSE start_diff END) AS adj_start_diff,\n             DATEDIFF(day, atd.termination_date::date, (SELECT prev_quart_last FROM quarter_dates)) AS stop_diff,\n             (CASE WHEN stop_diff IS NULL THEN 0\n                   WHEN stop_diff < 0 THEN 0\n                   ELSE stop_diff END) AS adj_stop_diff,\n             (SELECT days_in_quart FROM quarter_dates) - adj_start_diff - adj_stop_diff AS days_dep_existed_in_quart,\n             qd.Date,\n             (CASE WHEN Account_product_id = 5 THEN (SELECT coastal_avg_quart FROM coastal_save_fee) / days_dep_existed_in_quart\n                   WHEN Account_product_id = 4 THEN (SELECT coastal_avg_quart FROM coastal_spend_fee) / days_dep_existed_in_quart\n               END) AS avg_val,\n             (CASE WHEN dep.inception_date > qd.Date THEN 0\n                   WHEN atd.termination_date < qd.Date THEN 0\n                   ELSE avg_val END) AS Value\n\n      FROM web_db.depository dep\n             INNER JOIN edw.view_unique_user_accounts uau ON uau.account_id = dep.account_id\n             INNER JOIN edw.view_accounts_termination_dates atd ON atd.account_id = dep.account_id\n             CROSS JOIN date_gen qd\n      WHERE dep.product_id IN (4, 5)\n        AND dep.inception_date <= (SELECT prev_quart_last FROM quarter_dates)\n        AND (atd.termination_date IS NULL\n          OR (atd.termination_date::date >= (SELECT prev_quart_first FROM quarter_dates)\n              AND dep.inception_date <= atd.termination_date))\n    )\n\nSELECT getdate() AS execution,\n       User_id,\n       Account_id,\n       Depository_id,\n       NULL AS Investment_id,\n       'Depository'::text AS Account_type,\n       (CASE\n          WHEN Account_product_id = 4 THEN 'Spend'::text\n          WHEN Account_product_id = 5 THEN 'Save'::text\n          ELSE ''::text\n         END) AS Product_type,\n--        2 AS Account_product_type_id,\n--        'Depository'::text AS Account_product_type_name,\n--        Account_product_id,\n--        (CASE\n--           WHEN Account_product_id = 3 THEN 'Summit'::text\n--           WHEN Account_product_id = 4 THEN 'Spend'::text\n--           WHEN Account_product_id = 5 THEN 'Save'::text\n--           ELSE ''::text\n--          END) AS Account_product_name,\n       FALSE AS Non_customer,\n       'Indirect'::text AS Category,\n       'Coastal Quarterly Fee'::text AS Item,\n       Date,\n       -cfd.Value AS Value,\n       'Cost'::text AS Value_type\nFROM coastal_fee_by_depository cfd;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963988":{"id":2963988,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":-848,"y":-320,"width":32,"height":32,"inputConnectorIDs":[2963957,2963962,2963963],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2963960],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963989":{"id":2963989,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1540940111,"x":-736,"y":-368,"width":32,"height":32,"inputConnectorIDs":[2963960],"outputSuccessConnectorIDs":[2963965],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Rollback 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963990":{"id":2963990,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-1200,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963967],"outputSuccessConnectorIDs":[2963964],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_etl_email"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_etl_email"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963991":{"id":2963991,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":-656,"y":-368,"width":32,"height":32,"inputConnectorIDs":[2963965],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963992":{"id":2963992,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-544,"y":-64,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table ${Pnl_schema}.${Target_table};\n\n\n--delete from ${Pnl_schema}.${Target_table}\n--where \n--date_part(year, cast(${Pnl_schema}.${Target_table}.date as date)) = date_part(year, current_date)\n--and\n--date_part(month, cast(${Pnl_schema}.${Target_table}.date as date)) = date_part(month, current_date) - 1;\n--delete from ${Pnl_schema}.${Consolidated_table}\n--where \n--date_part(year, cast(${Pnl_schema}.${Consolidated_table}.date as date)) = date_part(year, current_date)\n--and\n--date_part(month, cast(${Pnl_schema}.${Consolidated_table}.date as date)) = date_part(month, current_date) - 1"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963993":{"id":2963993,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-1200,"y":-128,"width":32,"height":32,"inputConnectorIDs":[2963966],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_coastal_quarterly_fee"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_coastal_quarterly_fee"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963994":{"id":2963994,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":977205684,"x":-640,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963951],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Commit 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963995":{"id":2963995,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1785670938,"x":-1072,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963964],"outputSuccessConnectorIDs":[2963984],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Begin 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963996":{"id":2963996,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-960,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963984],"outputSuccessConnectorIDs":[2963987],"outputFailureConnectorIDs":[2963962],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Delete -1 quarter"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delete from edw.${Target_table}\nwhere \ndate_part(year, cast(edw.${Target_table}.date as date)) = date_part(year, dateadd(quarter, -1, current_date))\nand\ndate_part(quarter, cast(edw.${Target_table}.date as date)) = date_part(quarter, dateadd(quarter, -1, current_date))"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963997":{"id":2963997,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-736,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963986],"outputSuccessConnectorIDs":[2963951],"outputFailureConnectorIDs":[2963963],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Consolidated"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"-- Delete existing data\nDELETE FROM edw.${Consolidated_table} \nWHERE Item = ${Item_name} \n\tand\ndate_part(year, cast(edw.${Consolidated_table}.date as date)) = date_part(year, dateadd(quarter, -1, current_date))\nand\ndate_part(quarter, cast(edw.${Consolidated_table}.date as date)) = date_part(quarter, dateadd(quarter, -1, current_date));\n\n-- Insert updated data\n\nINSERT INTO edw.${Consolidated_table}(execution,\n                                 User_id,\n                                 Account_id,\n                                 Depository_id,\n                                 Investment_id,\n                                 Account_type,\n                                 Product_type,\n                                 --Account_product_type_id,\n                                 --Account_product_type_name,\n                                 --Account_investment_type_id,\n                                 --Account_investment_type_name,\n                                 --Account_type_id,\n                                 --Account_type_name,\n                                 --Account_product_id,\n                                 --Account_product_name,\n                                 Non_customer,\n                                 Category,\n                                 Item,\n                                 Value_type,\n                                 Value,\n                                 Date)\n(SELECT execution,\n       User_id,\n       Account_id,\n       Depository_id,\n       Investment_id,\n       Account_type,\n       Product_type,\n       --Account_product_type_id,\n       --Account_product_type_name,\n       --Account_investment_type_id,\n       --Account_investment_type_name,\n       --Account_type_id,\n       --Account_type_name,\n       --Account_product_id,\n       --Account_product_name,\n       Non_customer,\n       Category,\n       Item,\n       Value_type,\n       Value,\n       Date\nFROM edw.${Target_table}\nwhere\t\ndate_part(year, cast(edw.${Target_table}.date as date)) = date_part(year, dateadd(quarter, -1, current_date))\nand\ndate_part(quarter, cast(edw.${Target_table}.date as date)) = date_part(quarter, dateadd(quarter, -1, current_date)));"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963998":{"id":2963998,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1552,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963961],"outputSuccessConnectorIDs":[2963985],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Target table check"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\ncursor = context.cursor()\ntry:\n\tcursor.execute('select convert (integer, (select exists (select * from edw.'+Target_table+' limit 1)))')\n\tresult = cursor.fetchone()[0]\n\tcontext.updateVariable('Exist_check_Target_table', result)\nexcept:\n  \tcontext.updateVariable('Exist_check_Target_table', '0')\n    \nprint ('Variable value: '+str(Exist_check_Target_table))"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963999":{"id":2963999,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":-1440,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963985],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[2963967],"outputFalseConnectorIDs":[2963966],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"If"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Exist_check_Target_table"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"1"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2963951":{"id":2963951,"sourceID":2963997,"targetID":2963994},"2963964":{"id":2963964,"sourceID":2963990,"targetID":2963995},"2963965":{"id":2963965,"sourceID":2963989,"targetID":2963991},"2963984":{"id":2963984,"sourceID":2963995,"targetID":2963996},"2963985":{"id":2963985,"sourceID":2963998,"targetID":2963999},"2963986":{"id":2963986,"sourceID":2963971,"targetID":2963997},"2963987":{"id":2963987,"sourceID":2963996,"targetID":2963971}},"failureConnectors":{"2963957":{"id":2963957,"sourceID":2963971,"targetID":2963988},"2963962":{"id":2963962,"sourceID":2963996,"targetID":2963988},"2963963":{"id":2963963,"sourceID":2963997,"targetID":2963988}},"unconditionalConnectors":{"2963960":{"id":2963960,"sourceID":2963988,"targetID":2963989},"2963961":{"id":2963961,"sourceID":2963968,"targetID":2963998}},"trueConnectors":{"2963967":{"id":2963967,"sourceID":2963999,"targetID":2963990}},"falseConnectors":{"2963966":{"id":2963966,"sourceID":2963999,"targetID":2963993}},"iterationConnectors":{},"noteConnectors":{},"notes":{"2963969":{"id":2963969,"x":-587,"y":-168,"width":87,"height":140,"text":"for development","colour":"d60000"}},"variables":{"Consolidated_table":{"definition":{"name":"Consolidated_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"consolidated_pnl"},"Exist_check_Target_table":{"definition":{"name":"Exist_check_Target_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":null},"Item_name":{"definition":{"name":"Item_name","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"'Coastal Quarterly Fee'"},"Month_iterator":{"definition":{"name":"Month_iterator","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"Pnl_schema":{"definition":{"name":"Pnl_schema","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"edw"},"Target_table":{"definition":{"name":"Target_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":"coastal_quarterly_fee"}},"grids":{}},"info":{"name":"pnl_exec_coastal_quarterly_fee","description":"Script for updating item on regular basis","type":"ORCHESTRATION","tag":"1d8cadcd-a4bd-489d-8103-ad142bcfef1d"}}