{"job":{"components":{"2964351":{"id":2964351,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":-816,"y":-272,"width":32,"height":16,"inputConnectorIDs":[2964429],"outputSuccessConnectorIDs":[2964428],"outputFailureConnectorIDs":[2964426],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Grid Iterator 0"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Months"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Month"},"2":{"slot":2,"type":"STRING","value":"Month_iterator"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Sequential"}}}},"visible":true},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[2964421],"inputIterationConnectorIDs":[]},"2964368":{"id":2964368,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":-657,"y":-112,"width":32,"height":32,"inputConnectorIDs":[2964448],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964370":{"id":2964370,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1104,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2964424],"outputSuccessConnectorIDs":[2964450],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Months"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\nimport datetime\nimport math\nfrom dateutil.relativedelta import relativedelta\n\nnow = datetime.datetime.today() \nstart = datetime.datetime(2019, 1, 1)\n\ntotal_months = lambda dt: dt.month + 12 * dt.year\nmlist = []\nfor tot_m in xrange(total_months(start), total_months(now)):\n y, m = divmod(tot_m, 12)\n mlist.append([datetime.datetime(y, m+1, 1).strftime(\"'%Y-%m-%d'\")])\nlenl = len(mlist)\n\ncontext.updateGridVariable('Months', mlist)  \nprint Months\n\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964371":{"id":2964371,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-1312,"y":-288,"width":32,"height":32,"inputConnectorIDs":[2964425],"outputSuccessConnectorIDs":[2964402],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_etl_email"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_etl_email"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964404":{"id":2964404,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":977205684,"x":-708,"y":-237,"width":32,"height":32,"inputConnectorIDs":[2964428],"outputSuccessConnectorIDs":[2964403],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Commit 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964405":{"id":2964405,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1540940111,"x":-752,"y":-112,"width":32,"height":32,"inputConnectorIDs":[2964431],"outputSuccessConnectorIDs":[2964448],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Rollback 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964407":{"id":2964407,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":-864,"y":-112,"width":32,"height":32,"inputConnectorIDs":[2964426,2964427],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2964431],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964408":{"id":2964408,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":235671163,"x":-1184,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2964402,2964406],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2964424],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964409":{"id":2964409,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-1312,"y":-176,"width":32,"height":32,"inputConnectorIDs":[2964430],"outputSuccessConnectorIDs":[2964406],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_view_unique_user_accounts"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_view_unique_user_accounts"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964410":{"id":2964410,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1785670938,"x":-1008,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2964450],"outputSuccessConnectorIDs":[2964449],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Begin 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964411":{"id":2964411,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-480,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2964403],"outputSuccessConnectorIDs":[2964401],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_consolidated_pnl"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_consolidated_pnl"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Source_table"},"2":{"slot":2,"type":"STRING","value":"${Target_table}"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Item_name"},"2":{"slot":2,"type":"STRING","value":"${Item_name}"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964412":{"id":2964412,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-816,"y":-240,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Execution"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"set timezone = 'America/Los_Angeles';\n\nDELETE FROM edw.${Target_table}\nWHERE Date BETWEEN (SELECT period_start\n                    FROM edw.etl_nottingham_fee\n                    WHERE fund_name = 'Redwood'\n                    AND period_end < dateadd('day', 15, ${Month_iterator})\n                    ORDER BY period_end DESC\n                   \tLIMIT 1)\n              AND (SELECT period_end\n                   FROM edw.etl_nottingham_fee\n                   WHERE fund_name = 'Redwood'\n                   AND period_end < dateadd('day', 15, ${Month_iterator})\n                   ORDER BY period_end DESC\n                   LIMIT 1);\n\n\nINSERT INTO edw.${Target_table}(execution,\n                                       User_id,\n                                       Account_id,\n                                       Depository_id,\n                                       Investment_id,\n                                       Account_type,\n                                       Product_type,\n  --                             Account_product_type_id,\n  --                             Account_product_type_name,\n  --                             Account_product_id,\n  --                             Account_product_name,\n                                       Non_customer,\n                                       Category,\n                                       Item,\n                                       Date,\n                                       Value,\n                                       Value_type)\n\nWITH period_amount AS (\n        SELECT id,\n               period_start,\n               period_end,\n               DATEDIFF(day, period_start, period_end) + 1 AS days_in_period,\n               totals - custody_fees_2 AS amount\n        FROM edw.etl_nottingham_fee\n        WHERE fund_name = 'Redwood'\n        AND period_end < dateadd('day', 15, ${Month_iterator})\n        ORDER BY period_end DESC\n  \t\tLIMIT 1\n      ),\n\n     date_gen AS (\n       SELECT dateadd('day', i.i - 1, (SELECT period_start FROM period_amount) - 1) AS Date\n       FROM (\n              SELECT ROW_NUMBER() OVER(order by seq4()) i\n              FROM table(\n                    generator(\n                            rowcount => 60\n                        )\n                  )\n            ) i\n       WHERE Date BETWEEN (SELECT period_start FROM period_amount)\n               AND (SELECT period_end FROM period_amount)\n     ),\n\n     count_investments AS (\n       SELECT inv.fund_id,\n              COUNT(inv.id) AS cnt,\n              (SELECT amount::float FROM period_amount) / cnt AS amount_by_inv_count\n       FROM web_db.investment AS inv\n              INNER JOIN web_db.account AS acc ON acc.id = inv.account_id\n       WHERE inv.fund_id = 2 -- 'Redwood'\n         AND inv.inception_date::date <= (SELECT period_end FROM period_amount)\n         AND (acc.termination_date IS NULL\n         OR (acc.termination_date::date >= (SELECT period_start FROM period_amount)\n           AND inv.inception_date <= acc.termination_date))\n       GROUP BY inv.fund_id\n     ),\n\n     amount_by_investment AS (\n       SELECT uau.user_id AS User_id,\n              uau.account_id AS Account_id,\n              inv.id AS Investment_id,\n              acc.account_type_id AS Account_type_id,\n              DATEDIFF(day, (SELECT period_start FROM period_amount), inv.inception_date::date) AS start_diff,\n              (CASE WHEN start_diff IS NULL THEN 0\n                    WHEN start_diff < 0 THEN 0\n                    ELSE start_diff END) AS adj_start_diff,\n              DATEDIFF(day, acc.termination_date::date, (SELECT period_end FROM period_amount)) AS stop_diff,\n              (CASE WHEN stop_diff IS NULL THEN 0\n                    WHEN stop_diff < 0 THEN 0\n                    ELSE stop_diff END) AS adj_stop_diff,\n              (SELECT days_in_period FROM period_amount) - adj_start_diff - adj_stop_diff AS days_in_period_existed,\n              dg.Date,\n              (SELECT amount_by_inv_count FROM count_investments) / days_in_period_existed AS avg_val,\n              (CASE WHEN inv.inception_date > dg.Date THEN 0\n                    WHEN acc.termination_date < dg.Date THEN 0\n                    ELSE avg_val END) AS Value\n\n       FROM web_db.investment inv\n              INNER JOIN edw.view_unique_user_accounts uau ON uau.account_id = inv.account_id\n              INNER JOIN web_db.account acc ON acc.id = inv.account_id\n              CROSS JOIN date_gen dg\n       WHERE inv.fund_id = 2 -- 'Redwood'\n         AND inv.inception_date::date <= (SELECT period_end FROM period_amount)\n         AND (acc.termination_date IS NULL\n         OR (acc.termination_date::date >= (SELECT period_start FROM period_amount)\n           AND inv.inception_date <= acc.termination_date))\n     )\n\nSELECT current_date() AS execution,\n       User_id,\n       Account_id,\n       NULL AS Depository_id,\n       Investment_id,\n       'Investment'::text AS Account_type,\n       (CASE\n          WHEN Account_type_id = 2 -- 'Individual'\n            THEN 'Redwood Individual'::text\n          WHEN Account_type_id = 3 -- 'IRA'\n            THEN 'Redwood IRA'::text\n         END) AS Product_type,\n       FALSE AS Non_customer,\n       'Indirect'::text AS Category,\n       'Redwood Nottingham Fee'::text AS Item,\n       Date,\n       -Value AS Value,\n       'Cost'::text AS Value_type\nFROM amount_by_investment;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[2964421]},"2964413":{"id":2964413,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1456,"y":-240,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2964425,2964430],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964414":{"id":2964414,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-928,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2964449],"outputSuccessConnectorIDs":[2964429],"outputFailureConnectorIDs":[2964427],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create\\Truncate"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"CREATE TABLE IF NOT EXISTS edw.${Target_table}(\n                                             id bigint identity(1, 1),\n                                             execution timestamp with time zone,\n                                             User_id bigint not null,\n                                             Account_id bigint not null,\n                                             Depository_id bigint,\n                                             Investment_id bigint,\n  \t\t\t\t\t\t\t\t\t\t\t Account_type varchar(50),\n    \t\t\t\t\t\t\t\t\t\t Product_type  varchar(50),\n                                             --Account_product_type_id int, --account.product_type\n                                             --Account_product_type_name varchar(50), --1 = investment, 2 = depository\n                                             --Account_product_id int, --<depository.product_id>\n                                             --Account_product_name varchar(50), --3 = Summit , 4 = Spend, 5 = Save\n                                             --Account_type_id int, --<account.account_type_id>\n                                             --Account_type_name varchar(50), --2 = Individual, 3 = IRA\n                                             --Account_investment_type_id int, --<investment.fund_id>\n                                             --Account_investment_type_name varchar(50), --1 = Flagship, 2 = Redwood\n                                             Non_customer boolean, -- True for ZenDesk/False for others\n                                             Category varchar(50) not null,\n                                             Item varchar(50) not null,\n                                             Date timestamp with time zone,\n                                             Value numeric(38,8) not null,\n                                             Value_type varchar(50),\n                                             primary key(id));\n                                                \nTRUNCATE edw.${Target_table}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964415":{"id":2964415,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-352,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2964401],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"TMP"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"idudkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"idudkin.ctr\";"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2964401":{"id":2964401,"sourceID":2964411,"targetID":2964415},"2964402":{"id":2964402,"sourceID":2964371,"targetID":2964408},"2964403":{"id":2964403,"sourceID":2964404,"targetID":2964411},"2964406":{"id":2964406,"sourceID":2964409,"targetID":2964408},"2964428":{"id":2964428,"sourceID":2964351,"targetID":2964404},"2964429":{"id":2964429,"sourceID":2964414,"targetID":2964351},"2964448":{"id":2964448,"sourceID":2964405,"targetID":2964368},"2964449":{"id":2964449,"sourceID":2964410,"targetID":2964414},"2964450":{"id":2964450,"sourceID":2964370,"targetID":2964410}},"failureConnectors":{"2964426":{"id":2964426,"sourceID":2964351,"targetID":2964407},"2964427":{"id":2964427,"sourceID":2964414,"targetID":2964407}},"unconditionalConnectors":{"2964424":{"id":2964424,"sourceID":2964408,"targetID":2964370},"2964425":{"id":2964425,"sourceID":2964413,"targetID":2964371},"2964430":{"id":2964430,"sourceID":2964413,"targetID":2964409},"2964431":{"id":2964431,"sourceID":2964407,"targetID":2964405}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{"2964421":{"id":2964421,"sourceID":2964351,"targetID":2964412}},"noteConnectors":{},"notes":{"2964369":{"id":2964369,"x":-394,"y":-281,"width":91,"height":90,"text":"for development","colour":"d60000"}},"variables":{"Consolidated_table":{"definition":{"name":"Consolidated_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"consolidated_pnl"},"Item_name":{"definition":{"name":"Item_name","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"'Redwood Nottingham Fee'"},"Month_iterator":{"definition":{"name":"Month_iterator","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"Pnl_schema":{"definition":{"name":"Pnl_schema","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"edw"},"Target_table":{"definition":{"name":"Target_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"redwood_nottingham_fee"}},"grids":{"Months":{"definition":{"name":"Months","scope":"BRANCH","definitions":[{"name":"Month","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]}}},"info":{"name":"pnl_init_redwood_nottingham_fee","description":"Initialization of Item in PnL Report schema and load all data incl historical","type":"ORCHESTRATION","tag":"a95d669d-5bf1-4150-a507-5b9ac7f2111f"}}