{"job":{"components":{"2964469":{"id":2964469,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-96,"y":0,"width":32,"height":32,"inputConnectorIDs":[2964468],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create rdl.plaid_bank_account_json_parsed"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists rdl.plaid_bank_account_json_parsed_new;\ncreate table rdl.plaid_bank_account_json_parsed_new as\nwith upa as (\n    select distinct USER_PAYMENT_ACCOUNT_ID\n    from rdl.PLAID_IDENTITIES_ARRAY\n)\n,name as (\n    select USER_PAYMENT_ACCOUNT_ID,\n           upper(trim(replace(ARRAY_VALUE,'\"',''))) as name\n    from rdl.PLAID_IDENTITIES_ARRAY\n    where FIELD_NAME = 'name'\n)\n,email as (\n    select USER_PAYMENT_ACCOUNT_ID,\n           --upper(trim(replace(parse_json(ARRAY_VALUE): data,'\"',''))) as email\n           max(case when ARRAY_VALUE like '%type%primary%' then upper(trim(replace(parse_json(ARRAY_VALUE): data, '\"', ''))) else null end) as primary_email,\n           max(case when ARRAY_VALUE like '%type%secondary%' then upper(trim(replace(parse_json(ARRAY_VALUE): data, '\"', ''))) else null end) as secondary_email,\n           max(case when ARRAY_VALUE like '%type%other%' then upper(trim(replace(parse_json(ARRAY_VALUE): data, '\"', ''))) else null end) as other_email\n    from rdl.PLAID_IDENTITIES_ARRAY\n    where FIELD_NAME = 'email'\n    group by 1\n)\n,address as (\n    select USER_PAYMENT_ACCOUNT_ID,\n           upper(trim(replace(parse_json(ARRAY_VALUE): street, '\"', ''))) as street,\n           upper(trim(replace(parse_json(ARRAY_VALUE): city, '\"', '')))   as city,\n           upper(trim(replace(parse_json(ARRAY_VALUE): state, '\"', '')))  as state,\n           upper(trim(replace(parse_json(ARRAY_VALUE): zip, '\"', '')))    as zip\n    from rdl.PLAID_IDENTITIES_ARRAY\n    where FIELD_NAME = 'address'\n)\n,phone as (\n    select USER_PAYMENT_ACCOUNT_ID,\n           max(case when ARRAY_VALUE like '%type%mobile%' then upper(trim(replace(parse_json(ARRAY_VALUE): data, '\"', ''))) else null end) as primary_mobile_phone_number,\n           max(case when ARRAY_VALUE like '%type%home%' then upper(trim(replace(parse_json(ARRAY_VALUE): data, '\"', ''))) else null end) as primary_home_phone_number,\n           max(case when ARRAY_VALUE like '%type%work%' then upper(trim(replace(parse_json(ARRAY_VALUE): data, '\"', ''))) else null end) as primary_work_phone_number\n    from rdl.PLAID_IDENTITIES_ARRAY\n    where FIELD_NAME = 'phone_number'\n    group by 1\n)\nselect\n    u.user_payment_account_id as plaid_linked_bank_account_id,\n    listagg(distinct n.name, ', ') within group (order by n.name) as name,\n    listagg(distinct coalesce(e.primary_email, e.secondary_email, e.other_email), ', ') within group (order by coalesce(e.primary_email, e.secondary_email, e.other_email)) as email,\n    listagg(distinct a.street, ', ') within group (order by a.street) as street,\n    listagg(distinct a.city, ', ') within group (order by a.city) as city,\n    listagg(distinct a.state, ', ') within group (order by a.state) as state,\n    listagg(distinct a.zip, ', ') within group (order by a.zip) as zip,\n    listagg(distinct p.primary_mobile_phone_number, ', ') within group (order by p.primary_mobile_phone_number) as primary_mobile_phone_number,\n    listagg(distinct p.primary_home_phone_number, ', ') within group (order by p.primary_home_phone_number) as primary_home_phone_number,\n    listagg(distinct p.primary_work_phone_number, ', ') within group (order by p.primary_work_phone_number) as primary_work_phone_number\nfrom upa u\nleft join name n on u.USER_PAYMENT_ACCOUNT_ID = n.USER_PAYMENT_ACCOUNT_ID\nleft join email e on u.USER_PAYMENT_ACCOUNT_ID = e.USER_PAYMENT_ACCOUNT_ID\nleft join address a on u.USER_PAYMENT_ACCOUNT_ID = a.USER_PAYMENT_ACCOUNT_ID\nleft join phone p on u.USER_PAYMENT_ACCOUNT_ID = p.USER_PAYMENT_ACCOUNT_ID\ngroup by 1\n;\n\nalter table rdl.plaid_bank_account_json_parsed rename to rdl.plaid_bank_account_json_parsed_old;\n\nalter table rdl.plaid_bank_account_json_parsed_new rename to rdl.plaid_bank_account_json_parsed;\n\ndrop table if exists rdl.plaid_bank_account_json_parsed_old;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964474":{"id":2964474,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-304,"y":0,"width":32,"height":32,"inputConnectorIDs":[2964471],"outputSuccessConnectorIDs":[2964468],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"parse plaid identity"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists  rdl.plaid_identities_array_1;\ncreate table rdl.plaid_identities_array_1  as (\nwith temp as (\n    select user_payment_account_id,\n           original_plaid_data,\n           parse_json(original_plaid_data): accounts               as accounts,\n           parse_json(original_plaid_data): identity:addresses     as addresses,\n           parse_json(original_plaid_data): identity:emails        as emails,\n           parse_json(original_plaid_data): identity:names         as names,\n           parse_json(original_plaid_data): identity:phone_numbers as phone_numbers,\n           parse_json(original_plaid_data):error                   as error\n    from web_db.bank_account_plaid_identity_info\n    where 1 = 1\n--      and user_payment_account_id = 713993\n--       and user_payment_account_id = 1348534\n--     limit 50\n)\n-- select *\n-- from temp;\n, v1 as (\n    select\n    user_payment_account_id,\n    'account' as field_name,\n--     accounts,\n    VALUE as array_value\n    from temp\n        , lateral flatten(input => parse_json(accounts), outer => true)\n    union all\n    select\n    user_payment_account_id,\n    'name' as field_name,\n--     accounts,\n    VALUE as array_value\n    from temp\n        , lateral flatten(input => parse_json(names), outer => true)\n    union all\n    select\n    user_payment_account_id,\n    'phone_number' as field_name,\n--     accounts,\n    VALUE as array_value\n    from temp\n        , lateral flatten(input => parse_json(phone_numbers), outer => true)\n    union all\n    select\n    user_payment_account_id,\n    'address' as field_name,\n--     accounts,\n    VALUE : data as array_value\n    from temp\n        , lateral flatten(input => parse_json(addresses), outer => true)\n    union all\n    select\n    user_payment_account_id,\n    'email' as field_name,\n--     accounts,\n    VALUE as array_value\n    from temp\n        , lateral flatten(input => parse_json(emails), outer => true)\n    where 1=1\n    union all\n    select\n    user_payment_account_id,\n    'error' as field_name,\n--     accounts,\n    error as array_value\n    from temp\n    where 1=1\n    and error is not null\n    )\nselect *\nfrom v1\nwhere 1=1\n  and array_value is not null\n);\n\n\nalter table rdl.plaid_identities_array rename to rdl.plaid_identities_array_old;\n\nalter table rdl.plaid_identities_array_1 rename to rdl.plaid_identities_array;\n\ndrop table rdl.plaid_identities_array_old;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2964475":{"id":2964475,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-480,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2964471],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2964468":{"id":2964468,"sourceID":2964474,"targetID":2964469}},"failureConnectors":{},"unconditionalConnectors":{"2964471":{"id":2964471,"sourceID":2964475,"targetID":2964474}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{},"grids":{}},"info":{"name":"plaid identity parsing","description":"","type":"ORCHESTRATION","tag":"bf4f88c2-af3a-4f0e-a3ad-4aeb6cff73c0"}}