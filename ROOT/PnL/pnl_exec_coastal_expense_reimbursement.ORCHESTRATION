{"job":{"components":{"2963872":{"id":2963872,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-544,"y":-64,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table ${Pnl_schema}.${Target_table};\n--truncate table ${Pnl_schema}.${Consolidated_table}\n\n--delete from ${Pnl_schema}.${Target_table}\n--where \n--date_part(year, cast(${Pnl_schema}.${Target_table}.date as date)) = date_part(year, current_date)\n--and\n--date_part(month, cast(${Pnl_schema}.${Target_table}.date as date)) = date_part(month, current_date) - 1;\n--delete from ${Pnl_schema}.${Consolidated_table}\n--where \n--date_part(year, cast(${Pnl_schema}.${Consolidated_table}.date as date)) = date_part(year, current_date)\n--and\n--date_part(month, cast(${Pnl_schema}.${Consolidated_table}.date as date)) = date_part(month, current_date) - 1"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963873":{"id":2963873,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-1120,"y":-160,"width":32,"height":32,"inputConnectorIDs":[2963851],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_coastal_expense_reimbursement"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_coastal_expense_reimbursement"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963874":{"id":2963874,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":977205684,"x":-640,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963891],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Commit 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963875":{"id":2963875,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1785670938,"x":-1040,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963853],"outputSuccessConnectorIDs":[2963852],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Begin 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963878":{"id":2963878,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1376,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963868],"outputSuccessConnectorIDs":[2963890],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Target table check"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\ncursor = context.cursor()\ntry:\n\tcursor.execute('select convert (integer, (select exists (select * from edw.'+Target_table+' limit 1)))')\n\tresult = cursor.fetchone()[0]\n\tcontext.updateVariable('Exist_check_Target_table', result)\nexcept:\n  \tcontext.updateVariable('Exist_check_Target_table', '0')\n    \nprint ('Variable value: '+str(Exist_check_Target_table))"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963879":{"id":2963879,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1488,"y":-240,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2963868],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963892":{"id":2963892,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-752,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963889],"outputSuccessConnectorIDs":[2963891],"outputFailureConnectorIDs":[2963871],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Consolidated"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"-- Delete existing data\nDELETE FROM edw.${Consolidated_table} \nWHERE Item = ${Item_name} \n\tand\ndate_part(year, cast(edw.${Consolidated_table}.date as date)) = date_part(year, dateadd(month, -1, current_date))\nand\ndate_part(month, cast(edw.${Consolidated_table}.date as date)) = date_part(month, dateadd(month, -1, current_date));\n\n-- Insert updated data\n\nINSERT INTO edw.${Consolidated_table}(execution,\n                                 User_id,\n                                 Account_id,\n                                 Depository_id,\n                                 Investment_id,\n                                 Account_type,\n                                 Product_type,\n                                 --Account_product_type_id,\n                                 --Account_product_type_name,\n                                 --Account_investment_type_id,\n                                 --Account_investment_type_name,\n                                 --Account_type_id,\n                                 --Account_type_name,\n                                 --Account_product_id,\n                                 --Account_product_name,\n                                 Non_customer,\n                                 Category,\n                                 Item,\n                                 Value_type,\n                                 Value,\n                                 Date)\n(SELECT execution,\n       User_id,\n       Account_id,\n       Depository_id,\n       Investment_id,\n       Account_type,\n       Product_type,\n       --Account_product_type_id,\n       --Account_product_type_name,\n       --Account_investment_type_id,\n       --Account_investment_type_name,\n       --Account_type_id,\n       --Account_type_name,\n       --Account_product_id,\n       --Account_product_name,\n       Non_customer,\n       Category,\n       Item,\n       Value_type,\n       Value,\n       Date\nFROM edw.${Target_table}\nwhere\t\ndate_part(year, cast(edw.${Target_table}.date as date)) = date_part(year, dateadd(month, -1, current_date))\nand\ndate_part(month, cast(edw.${Target_table}.date as date)) = date_part(month, dateadd(month, -1, current_date)));"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963893":{"id":2963893,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-544,"y":-128,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GRANT"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"idudkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"idudkin.ctr\";"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963894":{"id":2963894,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":-1280,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963890],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[2963854],"outputFalseConnectorIDs":[2963851],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"If"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Exist_check_Target_table"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"1"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963895":{"id":2963895,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-944,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963852],"outputSuccessConnectorIDs":[2963855],"outputFailureConnectorIDs":[2963870],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Delete -1 month"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delete from edw.${Target_table}\nwhere \ndate_part(year, cast(edw.${Target_table}.date as date)) = date_part(year, dateadd(month, -1, current_date))\nand\ndate_part(month, cast(edw.${Target_table}.date as date)) = date_part(month, dateadd(month, -1, current_date))"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963896":{"id":2963896,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":-656,"y":-368,"width":32,"height":32,"inputConnectorIDs":[2963888],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963897":{"id":2963897,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":-848,"y":-320,"width":32,"height":32,"inputConnectorIDs":[2963865,2963870,2963871],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2963869],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963898":{"id":2963898,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-848,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963855],"outputSuccessConnectorIDs":[2963889],"outputFailureConnectorIDs":[2963865],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Execution -1 month"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"set timezone to 'America/Los_Angeles';\n\nINSERT INTO edw.${Target_table}(execution,\n                                              User_id,\n                                              Account_id,\n                                              Depository_id,\n                                              Investment_id,\n                                              Account_type,\n                                              Product_type,\n--                                               Account_product_type_id,\n--                                               Account_product_type_name,\n--                                               Account_product_id,\n--                                               Account_product_name,\n                                              Non_customer,\n                                              Category,\n                                              Item,\n                                              Date,\n                                              Value,\n                                              Value_type)\n\n-- now only septembers information is done\n-- then -3 should be changed to -1\nWITH month_of_interest AS (\n        SELECT DATE_TRUNC('month', dateadd('month', -1, current_date))::date AS first_day,\n               last_day(first_day) AS last_day,\n               datediff('day', first_day, last_day)+1 AS days_count\n      ),\n\n     rest_expense_reimb AS (\n       SELECT frb_services +\n              fis_al_transport_vpn +\n              pacific_coast_bankers_invoice +\n              salary_reimbursement +\n              visa_invoice +\n              online_banking_monthly_expense +\n              postage +\n              ccb_service_fee AS sum\n       FROM edw.etl_coastal_expense_reimbursement\n       WHERE date BETWEEN (SELECT first_day FROM month_of_interest)\n                      AND (SELECT last_day FROM month_of_interest)\n     ),\n\n     required_accounts AS (\n       SELECT uau.user_id AS User_id,\n              acc.id AS Account_id,\n              dep.id AS dep_id,\n              acc.product_type AS Account_product_type_id,\n              dep.product_id AS Account_product_id,\n              dep.inception_date AS dep_inception_date,\n              atd.termination_date AS acc_termination_date,\n              datediff('day', (SELECT first_day FROM month_of_interest), dep_inception_date::date) AS start_diff,\n              (CASE WHEN start_diff IS NULL THEN 0\n                    WHEN start_diff < 0 THEN 0\n                    ELSE start_diff END) AS adj_start_diff,\n              datediff('day', acc_termination_date::date, (SELECT last_day FROM month_of_interest)) AS stop_diff,\n              (CASE WHEN stop_diff IS NULL THEN 0\n                    WHEN stop_diff < 0 THEN 0\n                    ELSE stop_diff END) AS adj_stop_diff,\n              (SELECT days_count FROM month_of_interest) - adj_start_diff - adj_stop_diff AS dep_exist_days\n       FROM web_db.depository AS dep\n              INNER JOIN web_db.account AS acc ON dep.account_id = acc.id\n              INNER JOIN edw.view_unique_user_accounts AS uau ON uau.account_id = acc.id\n              INNER JOIN edw.view_accounts_termination_dates AS atd ON atd.account_id = acc.id\n       WHERE acc.product_type = 2\n         AND dep.product_id IN (4, 5)\n         AND dep_inception_date <= (SELECT last_day FROM month_of_interest)\n         AND (acc_termination_date IS NULL\n            OR (acc_termination_date >= (SELECT first_day FROM month_of_interest)\n            AND acc_termination_date >= dep_inception_date))\n     ),\n\n     split_rest_expense_reimb_on_depos AS (\n       SELECT COUNT(DISTINCT dep_id) AS count_dep_id,\n              (SELECT sum FROM rest_expense_reimb) AS sum,\n              sum / count_dep_id AS rest_part\n       FROM required_accounts\n     ),\n\n     rdc_codes AS (\n       SELECT DISTINCT code\n       FROM web_db.galileo_lookup\n       WHERE description = 'RDC Other Check Deposit'\n     ),\n\n     rdc_transactions AS (\n       SELECT pt.depository_id AS dep_id, COUNT(pt.amount) AS transact_count\n       FROM web_db.galileo_posted_transaction AS gpt\n              INNER JOIN web_db.posted_transaction AS pt ON gpt.posted_transaction_id = pt.id\n       WHERE gpt.transaction_code_type IN (SELECT code FROM rdc_codes)\n         AND date_trunc('month', pt.post_date)::date = (SELECT first_day FROM month_of_interest)\n         AND dep_id IN (SELECT DISTINCT dep_id FROM required_accounts)\n       GROUP BY pt.depository_id\n     ),\n\n     rdc_month_amount AS (\n       SELECT fis_image_capture\n       FROM edw.etl_coastal_expense_reimbursement\n       WHERE date BETWEEN (SELECT first_day FROM month_of_interest)\n                      AND (SELECT last_day FROM month_of_interest)\n     ),\n\n     split_rdc_on_depos AS (\n       SELECT (SELECT SUM(transact_count) FROM rdc_transactions) AS total_transact_count,\n              (SELECT fis_image_capture\n               FROM rdc_month_amount) AS fis_image_capture,\n              dep_id,\n              COALESCE((fis_image_capture / total_transact_count * transact_count), 0) AS rdc_part\n       FROM rdc_transactions\n     ),\n\n     dep_monthly_value AS (\n       SELECT rest.dep_id,\n              COALESCE(rdc.rdc_part, 0) +\n              (SELECT rest_part FROM split_rest_expense_reimb_on_depos) AS monthly_value,\n              monthly_value / rest.dep_exist_days AS daily_value\n       FROM required_accounts AS rest\n              LEFT JOIN split_rdc_on_depos AS rdc ON rest.dep_id = rdc.dep_id\n     ),\n\n     date_gen AS (\n       SELECT DATE_ADD('day', i.i - 1, (SELECT first_day FROM month_of_interest)) AS date_of_month\n       FROM (\n              SELECT ROW_NUMBER() OVER() i\n              FROM stl_scan\n              LIMIT 31\n            ) i\n       WHERE DATE_TRUNC('month', date_of_month) = (SELECT first_day FROM month_of_interest)\n     )\n\nSELECT getdate() AS execution,\n       ra.User_id,\n       ra.Account_id,\n       ra.dep_id AS Depository_id,\n       NULL AS Investment_id,\n       (CASE\n          WHEN ra.Account_product_type_id = 2 THEN 'Depository'::text\n          ELSE ''::text\n         END) AS Account_type,\n       (CASE\n          WHEN ra.Account_product_id = 4 THEN 'Spend'::text\n          WHEN ra.Account_product_id = 5 THEN 'Save'::text\n          ELSE ''::text\n         END) AS Product_type,\n--        ra.Account_product_type_id,\n--        'Depository'::text AS Account_product_type_name,\n--        ra.Account_product_id,\n--        (CASE\n--           WHEN Account_product_id = 4 THEN 'Spend'::text\n--           WHEN Account_product_id = 5 THEN 'Save'::text\n--           ELSE ''::text\n--          END) AS Account_product_name,\n       FALSE AS Non_customer,\n       'Indirect'::text AS Category,\n       'Coastal Expense Reimbursement'::text AS Item,\n       dg.date_of_month AS Date,\n       (CASE\n          WHEN Date < ra.dep_inception_date THEN 0\n          WHEN Date > ra.acc_termination_date THEN 0\n          ELSE -dmv.daily_value\n         END) AS Value,\n       'Cost'::text AS Value_type\nFROM required_accounts AS ra\n  INNER JOIN dep_monthly_value AS dmv ON ra.dep_id = dmv.dep_id\n  CROSS JOIN date_gen AS dg;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963899":{"id":2963899,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-1152,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963854],"outputSuccessConnectorIDs":[2963853],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_etl_email"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_etl_email"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963900":{"id":2963900,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1540940111,"x":-736,"y":-368,"width":32,"height":32,"inputConnectorIDs":[2963869],"outputSuccessConnectorIDs":[2963888],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Rollback 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2963852":{"id":2963852,"sourceID":2963875,"targetID":2963895},"2963853":{"id":2963853,"sourceID":2963899,"targetID":2963875},"2963855":{"id":2963855,"sourceID":2963895,"targetID":2963898},"2963888":{"id":2963888,"sourceID":2963900,"targetID":2963896},"2963889":{"id":2963889,"sourceID":2963898,"targetID":2963892},"2963890":{"id":2963890,"sourceID":2963878,"targetID":2963894},"2963891":{"id":2963891,"sourceID":2963892,"targetID":2963874}},"failureConnectors":{"2963865":{"id":2963865,"sourceID":2963898,"targetID":2963897},"2963870":{"id":2963870,"sourceID":2963895,"targetID":2963897},"2963871":{"id":2963871,"sourceID":2963892,"targetID":2963897}},"unconditionalConnectors":{"2963868":{"id":2963868,"sourceID":2963879,"targetID":2963878},"2963869":{"id":2963869,"sourceID":2963897,"targetID":2963900}},"trueConnectors":{"2963854":{"id":2963854,"sourceID":2963894,"targetID":2963899}},"falseConnectors":{"2963851":{"id":2963851,"sourceID":2963894,"targetID":2963873}},"iterationConnectors":{},"noteConnectors":{},"notes":{"2963876":{"id":2963876,"x":-587,"y":-168,"width":87,"height":140,"text":"for development","colour":"d60000"}},"variables":{"Consolidated_table":{"definition":{"name":"Consolidated_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"consolidated_pnl"},"Exist_check_Target_table":{"definition":{"name":"Exist_check_Target_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":null},"Item_name":{"definition":{"name":"Item_name","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"'Coastal Expense Reimbursement'"},"Month_iterator":{"definition":{"name":"Month_iterator","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"Pnl_schema":{"definition":{"name":"Pnl_schema","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"edw"},"Target_table":{"definition":{"name":"Target_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":"coastal_expense_reimbursement"}},"grids":{}},"info":{"name":"pnl_exec_coastal_expense_reimbursement","description":"Script for updating item on regular basis","type":"ORCHESTRATION","tag":"032f1117-fc58-4e73-b5bc-60575a4dcd9c"}}