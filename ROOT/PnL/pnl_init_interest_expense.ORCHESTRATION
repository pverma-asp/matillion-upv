{"job":{"components":{"2963056":{"id":2963056,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":-657,"y":-112,"width":32,"height":32,"inputConnectorIDs":[2963108],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963057":{"id":2963057,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":-864,"y":-112,"width":32,"height":32,"inputConnectorIDs":[2963106,2963107],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2963110],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963058":{"id":2963058,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1104,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963104],"outputSuccessConnectorIDs":[2963114],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Months"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport datetime\nimport math\n\nnow = datetime.datetime.today() \nstart = datetime.datetime(2019, 1, 1)\n\ndelta = now - start\n\nmonthslist = []\n\nmonthq = ((start.year - now.year) * 12 + start.month - now.month)\n\nprint(monthq)\n\ni = monthq\nwhile i < 0:\n monthslist.append([i])\n i = i + 1\ncontext.updateGridVariable('Months', monthslist)\nprint Months\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963059":{"id":2963059,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-1312,"y":-160,"width":32,"height":32,"inputConnectorIDs":[2963111],"outputSuccessConnectorIDs":[2963109],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_view_accounts_termination_dates"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_view_accounts_termination_dates"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963060":{"id":2963060,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1785670938,"x":-1008,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963114],"outputSuccessConnectorIDs":[2963113],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Begin 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963061":{"id":2963061,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-480,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963115],"outputSuccessConnectorIDs":[2963119],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_consolidated_pnl"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_consolidated_pnl"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Source_table"},"2":{"slot":2,"type":"STRING","value":"${Target_table}"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Item_name"},"2":{"slot":2,"type":"STRING","value":"${Item_name}"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963062":{"id":2963062,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":977205684,"x":-708,"y":-237,"width":32,"height":32,"inputConnectorIDs":[2963112],"outputSuccessConnectorIDs":[2963115],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Commit 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963063":{"id":2963063,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSACTION","implementationID":-1540940111,"x":-752,"y":-112,"width":32,"height":32,"inputConnectorIDs":[2963110],"outputSuccessConnectorIDs":[2963108],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Rollback 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963064":{"id":2963064,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-928,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963113],"outputSuccessConnectorIDs":[2963116],"outputFailureConnectorIDs":[2963106],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create\\Truncate"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"CREATE TABLE IF NOT EXISTS edw.${Target_table}(\n                                                 id bigint identity(1, 1),\n                                                 execution timestamp with time zone,\n                                                 User_id bigint not null,\n                                                 Account_id bigint not null,\n                                                 Depository_id bigint,\n                                                 Investment_id bigint,\n  \t\t\t\t\t\t\t\t\t\t\t \t Account_type varchar(50),\n    \t\t\t\t\t\t\t\t\t\t \t Product_type  varchar(50),\n                                                 --Account_product_type_id int, -- account.product_type\n                                                 --Account_product_type_name varchar(50), -- 1 = Investment, 2 = Depository\n                                                 --Account_product_id int, --<depository.product_id>\n                                                 --Account_product_name varchar(50), --3 = Summit , 4 = Spend, 5 = Save\n                                                 --Account_type_id int, --<account.account_type_id>\n                                                 --Account_type_name varchar(50), -- 2 = Individual, 3 = IRA\n                                                 --Account_investment_type_id int, -- <investment.fund_id>\n                                                 --Account_investment_type_name varchar(50), -- 1 = Flagship, 2 = Redwood\n                                                 Non_customer boolean not null, -- True for ZenDesk/False for others\n                                                 Category varchar(50) not null,\n                                                 Item varchar(50) not null,\n                                                 Date timestamp with time zone,\n                                                 Value numeric(38,8) not null,\n                                                 Value_type varchar(50),\n                                                 primary key(id));\nTRUNCATE edw.${Target_table}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963065":{"id":2963065,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-352,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963119],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"TMP"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"GRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Target_table} TO \"idudkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"spashchenko.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"ashumakov.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"vfigurkin.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"opetrova.ctr\";\nGRANT SELECT ON ${Pnl_schema}.${Consolidated_table} TO \"idudkin.ctr\";"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963066":{"id":2963066,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":235671163,"x":-1184,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963109,2963118],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2963104],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963067":{"id":2963067,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-1312,"y":-240,"width":32,"height":32,"inputConnectorIDs":[2963105],"outputSuccessConnectorIDs":[2963118],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_view_unique_user_accounts"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnl_init_view_unique_user_accounts"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963070":{"id":2963070,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-816,"y":-240,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Execution"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SET timezone = 'America/Los_Angeles';\n\nINSERT INTO edw.${Target_table}(execution,\n                                 User_id,\n                                 Account_id,\n                                 Depository_id,\n                                 Investment_id,\n                            \t Account_type,\n                            \t Product_type,\n                                 --Account_product_type_id,\n                                 --Account_product_type_name,\n                                 --Account_product_id,\n                                 --Account_product_name,\n                                 Non_customer,\n                                 Category,\n                                 Item,\n                                 Date,\n                                 Value,\n                                 Value_type)\n\nWITH\n\n  codes AS (\n    SELECT DISTINCT code\n    FROM web_db.galileo_lookup\n    WHERE description IN ('Interest', 'Interest Paid', 'Interest Posting', 'Interest Payment')\n  ),\n\n  interest_transactions AS (\n    SELECT ua.user_id AS User_id,\n           ua.account_id AS Account_id,\n           dep.id AS Depository_id,\n           'Depository'::text AS Account_type,\n           (CASE\n              WHEN dep.product_id = 3 THEN 'Summit'::text\n              WHEN dep.product_id = 4 THEN 'Spend'::text\n              WHEN dep.product_id = 5 THEN 'Save'::text\n              ELSE ''::text\n             END) AS Product_type,\n--            2 AS Account_product_type_id,\n--            'Depository'::text AS Account_product_type_name,\n--            dep.product_id AS Account_product_id,\n--            (CASE\n--               WHEN Account_product_id = 3 THEN 'Summit'::text\n--               WHEN Account_product_id = 4 THEN 'Spend'::text\n--               WHEN Account_product_id = 5 THEN 'Save'::text\n--               ELSE ''::text\n--              END) AS Account_product_name,\n           'Direct'::text AS Category,\n           'Interest Expense'::text AS Item,\n           'Cost'::text AS Value_type,\n           gpt.galileo_account_id::bigint AS Galileo_account_id,\n           pt.last_updated AS Transaction_date,\n           pt.amount AS Transaction_value\n    FROM web_db.posted_transaction AS pt\n           INNER JOIN web_db.galileo_posted_transaction gpt ON pt.id = gpt.posted_transaction_id\n           INNER JOIN web_db.depository AS dep ON pt.depository_id = dep.id\n           INNER JOIN edw.view_unique_user_accounts AS ua ON dep.account_id = ua.account_id\n           INNER JOIN web_db.account AS acc ON acc.id = ua.account_id\n    WHERE gpt.transaction_code_type IN (SELECT code FROM codes)\n      AND DATE_TRUNC('month', pt.last_updated) = DATE_TRUNC('month', DATEADD(month, ${Month_iterator}+1, current_date))\n      AND acc.product_type = 2\n      AND dep.product_id in (3, 5) \n  ),\n\n  list_of_accounts AS (\n    SELECT DISTINCT galileo_account_id::bigint AS Galileo_account_id\n    FROM rdl.raw_galileo_customer_master_data\n    ORDER BY galileo_account_id DESC\n  ),\n\n  date_gen AS (\n    SELECT DATEADD('day', i.i - 1, DATE_TRUNC('month', DATEADD(month, ${Month_iterator}, current_date))) AS Date\n    FROM (\n           SELECT ROW_NUMBER() OVER(ORDER BY SEQ4()) i\n           FROM TABLE (\n                    GENERATOR(\n                            ROWCOUNT => 31\n                        )\n               )\n         ) i\n    WHERE DATE_TRUNC('month', Date) = DATE_TRUNC('month', DATEADD(month, ${Month_iterator}, current_date))\n  ),\n\n  galileo_accounts_all_dates AS (\n    SELECT acc.Galileo_account_id, qd.date FROM list_of_accounts acc\n                                                  CROSS JOIN date_gen qd\n  ),\n\n  current_balances AS (\n    SELECT galileo_account_id::bigint cb_galileo_account_id,\n           (CASE WHEN available_balance_sign != '-' THEN available_balance::float\n                 ELSE 0 END) AS current_balance,\n           file_date\n    FROM rdl.raw_galileo_customer_master_data\n    WHERE DATE_TRUNC('month', file_date) = DATE_TRUNC('month', DATEADD(month, ${Month_iterator}, current_date))\n    ORDER BY galileo_account_id, file_date\n  ),\n\n  last_known_value AS (\n    SELECT galileo_account_id::bigint as lkv_galileo_account_id,\n\n           (CASE WHEN available_balance_sign != '-' THEN available_balance::float\n                 ELSE 0 END) AS current_balance,\n\n           DATE_TRUNC('month', DATEADD(month, ${Month_iterator}, current_date)) - 1 AS Date,\n           ROW_NUMBER() OVER (PARTITION BY galileo_account_id::bigint ORDER BY file_date DESC) AS num\n\n    FROM rdl.raw_galileo_customer_master_data\n    WHERE file_date < DATE_TRUNC('month', DATEADD(month, ${Month_iterator}, current_date))\n  ),\n\n  combined AS (\n    SELECT ad.Galileo_account_id, cb.current_balance, ad.date\n    FROM current_balances cb\n           RIGHT JOIN galileo_accounts_all_dates ad\n                      ON ad.date = cb.file_date AND ad.Galileo_account_id = cb.cb_galileo_account_id\n    UNION\n    SELECT l.lkv_galileo_account_id, l.current_balance, l.date FROM last_known_value l\n    WHERE num = 1\n  ),\n\n  combined_with_filled_values AS (\n    SELECT Galileo_account_id,\n           (CASE\n              WHEN combined.current_balance IS NULL\n                THEN FIRST_VALUE(combined.current_balance::float IGNORE NULLS) OVER\n                (PARTITION BY Galileo_account_id ORDER BY Date DESC, Galileo_account_id DESC\n                ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n              WHEN combined.current_balance IS NOT NULL\n                THEN combined.current_balance::float END) AS cb_last,\n           Date\n    FROM combined ORDER BY Galileo_account_id, Date\n  ),\n\n  sums_for_month AS (\n    SELECT Galileo_account_id AS id, sum(cb_last) AS msum\n    FROM combined_with_filled_values\n    WHERE DATE_TRUNC('month', date) = DATE_TRUNC('month', DATEADD(month, ${Month_iterator}, current_date))\n    GROUP BY Galileo_account_id\n  ),\n\n  combined_by_monthly_percentage AS (\n    SELECT Galileo_account_id,\n           cb_last,\n           (CASE WHEN cb_last IS NULL THEN 0\n                 WHEN cb_last IS NOT NULL THEN cb_last END) AS Current_balance,\n           s.msum as month_sum,\n           (CASE WHEN month_sum IS NULL THEN 0\n                 WHEN month_sum = 0 THEN 0\n                 WHEN month_sum > 0 THEN Current_balance / Month_sum END) AS Day_share,\n           Date\n    FROM combined_with_filled_values\n    LEFT JOIN sums_for_month s on s.id = combined_with_filled_values.Galileo_account_id\n    WHERE DATE_TRUNC('month', date) = DATE_TRUNC('month', DATEADD(month, ${Month_iterator}, current_date))\n  ),\n\n  group_interest_expense AS (\n    SELECT it.User_id,\n           it.Account_id,\n           it.Depository_id,\n           it.Account_type,\n           it.Product_type,\n           --        it.Account_product_type_id, it.Account_product_type_name,\n           --        it.Account_product_id, it.Account_product_name,\n           FALSE AS Non_customer,\n           Category,\n           Item,\n           c.Date,\n           -SUM(it.Transaction_value * c.Day_share) AS Value,\n           Value_type\n    FROM interest_transactions it\n           INNER JOIN combined_by_monthly_percentage c ON it.Galileo_account_id = c.Galileo_account_id\n    GROUP BY User_id, Account_id, Depository_id,\n             Account_type, Product_type,\n             --          Account_product_type_id, Account_product_type_name,\n             --          Account_product_id, Account_product_name,\n             Non_customer, Category, Item, c.Date, Value_type\n  )\n\nSELECT current_date() AS execution,\n       User_id,\n       Account_id,\n       Depository_id,\n       NULL AS Investment_id,\n       Account_type,\n       Product_type,\n       FALSE AS Non_customer,\n       Category,\n       Item,\n       Date,\n       Value,\n       Value_type\nFROM group_interest_expense;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[2963133]},"2963071":{"id":2963071,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1456,"y":-240,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2963105,2963111],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2963117":{"id":2963117,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":-816,"y":-272,"width":32,"height":16,"inputConnectorIDs":[2963116],"outputSuccessConnectorIDs":[2963112],"outputFailureConnectorIDs":[2963107],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Grid Iterator 0"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Months"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Month"},"2":{"slot":2,"type":"STRING","value":"Month_iterator"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Sequential"}}}},"visible":true},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[2963133],"inputIterationConnectorIDs":[]}},"successConnectors":{"2963108":{"id":2963108,"sourceID":2963063,"targetID":2963056},"2963109":{"id":2963109,"sourceID":2963059,"targetID":2963066},"2963112":{"id":2963112,"sourceID":2963117,"targetID":2963062},"2963113":{"id":2963113,"sourceID":2963060,"targetID":2963064},"2963114":{"id":2963114,"sourceID":2963058,"targetID":2963060},"2963115":{"id":2963115,"sourceID":2963062,"targetID":2963061},"2963116":{"id":2963116,"sourceID":2963064,"targetID":2963117},"2963118":{"id":2963118,"sourceID":2963067,"targetID":2963066},"2963119":{"id":2963119,"sourceID":2963061,"targetID":2963065}},"failureConnectors":{"2963106":{"id":2963106,"sourceID":2963064,"targetID":2963057},"2963107":{"id":2963107,"sourceID":2963117,"targetID":2963057}},"unconditionalConnectors":{"2963104":{"id":2963104,"sourceID":2963066,"targetID":2963058},"2963105":{"id":2963105,"sourceID":2963071,"targetID":2963067},"2963110":{"id":2963110,"sourceID":2963057,"targetID":2963063},"2963111":{"id":2963111,"sourceID":2963071,"targetID":2963059}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{"2963133":{"id":2963133,"sourceID":2963117,"targetID":2963070}},"noteConnectors":{},"notes":{"2963068":{"id":2963068,"x":-394,"y":-281,"width":91,"height":90,"text":"for development","colour":"d60000"}},"variables":{"Consolidated_table":{"definition":{"name":"Consolidated_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"consolidated_pnl"},"Item_name":{"definition":{"name":"Item_name","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"'Interest Expense'"},"Month_iterator":{"definition":{"name":"Month_iterator","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"-1"},"Pnl_schema":{"definition":{"name":"Pnl_schema","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"edw"},"Target_table":{"definition":{"name":"Target_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"interest_expense"}},"grids":{"Months":{"definition":{"name":"Months","scope":"BRANCH","definitions":[{"name":"Month","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]}}},"info":{"name":"pnl_init_interest_expense","description":"Initialization of Item in PnL Report schema and load all data incl historical","type":"ORCHESTRATION","tag":"178b1f81-592f-48fb-a262-fad7c8feef96"}}