{"job":{"components":{"2966351":{"id":2966351,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-112,"y":128,"width":32,"height":32,"inputConnectorIDs":[2966362],"outputSuccessConnectorIDs":[2966358],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"update status"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"update PROMOTIONS.THANK_YOU_PROGRAM\nset status = 'exported',\n    updated_at = current_timestamp\nwhere GALILEO_FILE_NAME = '${pp_file_name}';"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966364":{"id":2966364,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-240,"y":128,"width":32,"height":32,"inputConnectorIDs":[2966358],"outputSuccessConnectorIDs":[2966360],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log result"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log result\n\n--success\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Thank You Program Promotion',\n       'File successfully exported to Galileo',\n       count(*) as record_count,\n       'PROMOTIONS.THANK_YOU_PROGRAM',\n       'galileo_file_name = ${pp_file_name}',\n       'low'\nfrom PROMOTIONS.THANK_YOU_PROGRAM f \nwhere galileo_file_name = '${pp_file_name}'\nand status = 'exported'\nhaving record_count > 0;\n\n--failure\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Thank You Program Promotion',\n       'File failed to export to Galileo',\n       count(*) as record_count,\n       'PROMOTIONS.THANK_YOU_PROGRAM',\n       'galileo_file_name = ${pp_file_name}',\n       'high'\nfrom PROMOTIONS.THANK_YOU_PROGRAM f \nwhere galileo_file_name = '${pp_file_name}'\nand status = 'ready_for_export'\nhaving record_count > 0;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966365":{"id":2966365,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":208,"y":32,"width":32,"height":32,"inputConnectorIDs":[2966356],"outputSuccessConnectorIDs":[2966353],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"archive sent gpg file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"### archive gpg file\nimport boto3\ns3_resource = boto3.resource(\"s3\")\n\n#move gpg file to archive-gpg\ns3_resource.Object(s3_bucket, \n                   \"promotions/thank-you-program/to-galileo/archive-gpg/\" + pp_file_name + '.gpg').copy_from(\n CopySource = s3_bucket + \"/promotions/thank-you-program/to-galileo/\" + pp_file_name + '.gpg')\n\n#delete gpg from old location\ns3_resource.Object(s3_bucket, \n                   \"promotions/thank-you-program/to-galileo/\" + pp_file_name + '.gpg').delete()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966366":{"id":2966366,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":16,"y":32,"width":32,"height":32,"inputConnectorIDs":[2966363],"outputSuccessConnectorIDs":[2966357],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"encrypt_file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"#python function to call lambda to encrypt s3 file to send to galileo\nimport boto3\nimport time\n\nbody = json.dumps(dict(operation='enc',file='${s3_path}/${pp_file_name}',\n                       encrypted_file_path='${s3_path}/',\n                       gpg_key='galileo_public_key',\n                       extension='gpg'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:prod-python-encrypt-decrypt-manual',\n    InvocationType='RequestResponse',\n    LogType='Tail',\n    Payload=body\n    )\n    print(response['Payload'].read())\n\n\nrun_lambda()\n\n#print (body)\n\n#delay before sending file\ntime.sleep(5)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966367":{"id":2966367,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":-240,"y":224,"width":32,"height":32,"inputConnectorIDs":[2966360],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"end success - records exported"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966384":{"id":2966384,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-448,"y":-128,"width":32,"height":32,"inputConnectorIDs":[2966441],"outputSuccessConnectorIDs":[2966444],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"set variables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n# set file name\n\nimport uuid\nfrom datetime import datetime,timezone\nfrom dateutil import tz\nfrom_zone = tz.gettz('America/Los_Angeles')\ndateTimeObj = datetime.now()\ndateTimeObj = dateTimeObj.replace(tzinfo=timezone.utc).astimezone(tz=from_zone)\ntimestampStr = dateTimeObj.strftime(\"btrans_584_%Y%m%d_typ%H%M%S.txt\")\ncontext.updateVariable('pp_file_name', timestampStr)\ncontext.updateVariable('pp_full_file_path', pp_file_path + \"/\" + pp_file_name)\n#context.updateVariable('s3_file_name', pp_full_file_path + '.gpg')\ncontext.updateVariable('batch_id', uuid.uuid1())\n#context.updateVariable('pp_file_name_gpg', pp_file_name + '.gpg')\nprint (pp_full_file_path)\nprint (batch_id)\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966385":{"id":2966385,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-560,"y":-32,"width":32,"height":32,"inputConnectorIDs":[2966440],"outputSuccessConnectorIDs":[2966445],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log no records to process"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log no payments to process\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_priority)\nselect\n       'Thank You Program Promotion',\n       'No payments to process',\n       0 as record_count,\n       'low'\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966386":{"id":2966386,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":208,"y":128,"width":32,"height":32,"inputConnectorIDs":[2966353],"outputSuccessConnectorIDs":[2966354],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of send delay"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport time\ntime.sleep(15)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966387":{"id":2966387,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":112,"y":32,"width":32,"height":32,"inputConnectorIDs":[2966357],"outputSuccessConnectorIDs":[2966356],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"send delay"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport time\ntime.sleep(15)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966388":{"id":2966388,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":16,"y":-48,"width":32,"height":32,"inputConnectorIDs":[2966446],"outputSuccessConnectorIDs":[2966363],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create file for Galileo"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--temp table to hold header/detail/trailer data\ndrop table if exists tmp_file;\ncreate temp table tmp_file\n(\n  file_id varchar(7),\n  file_row varchar(2000)\n);\n\n--header\ninsert into tmp_file (file_id, file_row)\nselect TOP 1 '000000',\n             'HHEADER' || rpad('454', 10, ' ') ||\n             rpad('584', 10, ' ') ||\n             rpad((galileo_file_name || '.gpg'), 50, ' ') ||\n             to_char(current_date, 'MMDDYYYY')\n             --to_char(convert_timezone('UTC','America/Los_Angeles',current_date)::date, 'MMDDYYYY')\nfrom PROMOTIONS.THANK_YOU_PROGRAM\nwhere status = 'ready_for_export'\nand galileo_file_name = '${pp_file_name}'\norder by created_at desc;\n\n--detail\ninsert into tmp_file (file_id, file_row)\nselect galileo_file_record_number,\n       'D' ||\n       galileo_file_record_number ||\n       'R' ||\n       rpad(prn,50,' ') ||\n       lpad('',21,' ') ||\n        'A' ||\n        'PA ' ||\n       rpad(-PAYMENT_AMOUNT,13,' ') ||\n       rpad('Aspiration Thank You Program Credit',40,' ') ||\n       rpad(('TYP' || to_char(convert_timezone('UTC','America/Los_Angeles',current_date)::date, 'YYMMDDHH24SS') || '-'\n              || galileo_file_record_number),20,' ') as detail\nfrom PROMOTIONS.THANK_YOU_PROGRAM\nwhere status = 'ready_for_export'\nand galileo_file_name = '${pp_file_name}'\norder by galileo_file_record_number;\n\n--trailer\ninsert into tmp_file (file_id, file_row)\nselect '1000000',\n       'TTRAILER' || rpad(count(*),6,' ')\nfrom PROMOTIONS.THANK_YOU_PROGRAM\nwhere status = 'ready_for_export'\nand galileo_file_name = '${pp_file_name}';\n\n--export to S3\ncopy into '${pp_full_file_path}'\n     from (SELECT file_row FROM tmp_file ORDER BY file_id)\n     file_format =(format_name='ETL.PLAIN_TEXT' compression='none' FILE_EXTENSION = '')\n     single = true overwrite = true;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966389":{"id":2966389,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":16,"y":-128,"width":32,"height":32,"inputConnectorIDs":[2966361],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[2966446],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"proceed if exportable records > 0"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"no_records_to_export_count"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"0"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"(${new Date().getHours()} >= 12 && ${new Date().getHours()} < 13) ||\n(${new Date().getHours()} >= 15 && ${new Date().getHours()} < 16) ||\n(${new Date().getHours()} >= 18 && ${new Date().getHours()} < 19) ||\n(${new Date().getHours()} >= 21 && ${new Date().getHours()} < 22) ||\n(${new Date().getHours()} >= 0 && ${new Date().getHours()} < 1) ||\n(${new Date().getHours()} >= 6 && ${new Date().getHours()} < 7)"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966390":{"id":2966390,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":-256,"y":-128,"width":32,"height":32,"inputConnectorIDs":[2966355],"outputSuccessConnectorIDs":[2966359],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"exportable count"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select count(*) as no_export_count\nfrom etl.issue_log \nwhere issue_program = 'Thank You Program Promotion'\nand issue_description = 'No records to process after evaluating for data issues'\nand issue_identifier like '%${batch_id}%'\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"no_records_to_export_count"},"2":{"slot":2,"type":"STRING","value":"NO_EXPORT_COUNT"}}}},"visible":true},"4":{"slot":4,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"5":{"slot":5,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966391":{"id":2966391,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-352,"y":-128,"width":32,"height":32,"inputConnectorIDs":[2966444],"outputSuccessConnectorIDs":[2966355],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log data issues"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--Log data issues\n\n--bad prn's\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Thank You Program Promotion',\n       'Bad PRNs - investigate',\n       count(distinct user_id) as record_count,\n       'etl.thank_you_promo_staging',\n       'where status = bad_prn',\n       'high'\nfrom etl.thank_you_promo_staging f\nwhere status = 'bad_prn'\nhaving record_count > 0;\n\n--duplicate records\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Thank You Program Promotion',\n       'Duplicates in data set - investigate',\n       count(distinct user_id) as record_count,\n       'etl.thank_you_promo_staging',\n       'where status = duplicate_record',\n       'high'\nfrom etl.thank_you_promo_staging f\nwhere status = 'duplicate_record'\nhaving record_count > 0;\n\n--users already processed\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Thank You Program Promotion',\n       'Users already processed - they will not be reprocessed',\n       count(distinct user_id) as record_count,\n       'etl.thank_you_promo_staging',\n       'where status = user_already_processed',\n       'high'\nfrom etl.thank_you_promo_staging f\nwhere status = 'user_already_processed'\nhaving record_count > 0;\n\n--no records to process after looking for issues\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Thank You Program Promotion',\n       'No records to process after evaluating for data issues',\n       count(*) as record_count,\n       'etl.thank_you_promo_staging',\n       'where batch_id = ${batch_id}',\n       'low'\nfrom etl.thank_you_promo_staging\nwhere status in ('ready_for_export')\nhaving count(*) = 0;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966392":{"id":2966392,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-864,"y":-128,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2966443],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966393":{"id":2966393,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":-672,"y":-128,"width":32,"height":32,"inputConnectorIDs":[2966352],"outputSuccessConnectorIDs":[2966447],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"row count"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select count(*) as record_count\nfrom etl.thank_you_promo_staging"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"records_to_process_count"},"2":{"slot":2,"type":"STRING","value":"RECORD_COUNT"}}}},"visible":true},"4":{"slot":4,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"5":{"slot":5,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966394":{"id":2966394,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":16,"y":128,"width":32,"height":32,"inputConnectorIDs":[2966354],"outputSuccessConnectorIDs":[2966362],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"send file to Galileo"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\n#python function to call lambda to encrypt s3 file to send to galileo\n\nbody = json.dumps(dict(operation='put',working_dir='/sftpdir/batch',\n                       s3_output='${s3_path}/archive-gpg/${pp_file_name}.gpg',\n                       sftp_file_name='${pp_file_name}.gpg',\n                       lambda_arn='None'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:sftp-to-s3-python',\n    InvocationType='Event',\n    LogType='Tail',\n    Payload=body\n    )\n\n    \nrun_lambda()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966395":{"id":2966395,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-144,"y":-128,"width":32,"height":32,"inputConnectorIDs":[2966359],"outputSuccessConnectorIDs":[2966361],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into file table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into PROMOTIONS.THANK_YOU_PROGRAM\n(\n BATCH_ID, USER_ID, UNIQUE_ACCOUNT_ID, EMAIL, PRN, MKTG_EMAIL_DATE_PT, PAYMENT_DATE, PAYMENT_AMOUNT, STATUS,\n GALILEO_FILE_NAME, GALILEO_FILE_RECORD_NUMBER, CREATED_AT, UPDATED_AT\n)\nwith cte_record_num as (\n  select staging_id,\n         lpad(row_number() over (order by prn desc nulls last)::varchar,6,'0') as galileo_file_record_number\n  from etl.thank_you_promo_staging\n  where status = 'ready_for_export'\n) \nselect\n    '${batch_id}',\n    s.user_id,\n    s.UNIQUE_ACCOUNT_ID,\n    s.email,\n    s.PRN,\n    s.MKTG_EMAIL_DATE_PT,\n    current_timestamp,\n    5, \n    s.status,\n    case when s.status = 'ready_for_export'\n      then '${pp_file_name}'\n    end as galileo_file_name,  \n    rn.galileo_file_record_number,\n    current_timestamp,\n    current_timestamp\nfrom etl.thank_you_promo_staging s\nleft join cte_record_num rn on s.staging_id = rn.staging_id;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966396":{"id":2966396,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":-560,"y":-128,"width":32,"height":32,"inputConnectorIDs":[2966447],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[2966441],"outputFalseConnectorIDs":[2966440],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"proceed if records > 0"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"records_to_process_count"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Greater than"},"4":{"slot":4,"type":"STRING","value":"0"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"(${new Date().getHours()} >= 12 && ${new Date().getHours()} < 13) ||\n(${new Date().getHours()} >= 15 && ${new Date().getHours()} < 16) ||\n(${new Date().getHours()} >= 18 && ${new Date().getHours()} < 19) ||\n(${new Date().getHours()} >= 21 && ${new Date().getHours()} < 22) ||\n(${new Date().getHours()} >= 0 && ${new Date().getHours()} < 1) ||\n(${new Date().getHours()} >= 6 && ${new Date().getHours()} < 7)"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966398":{"id":2966398,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-768,"y":-128,"width":32,"height":32,"inputConnectorIDs":[2966443],"outputSuccessConnectorIDs":[2966352],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"stage data"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists etl.thank_you_promo_staging;\ncreate table etl.thank_you_promo_staging\n(\n  staging_id                 bigint identity not null,\n  USER_ID                    BIGINT NOT NULL,\n  UNIQUE_ACCOUNT_ID          VARCHAR(100) not null,\n  EMAIL                      VARCHAR(300),\n  PRN                        VARCHAR(50) not null,\n  MKTG_EMAIL_DATE_PT         DATE not null,\n  status                     varchar(50)\n);  \n\ninsert into etl.thank_you_promo_staging\n(\n  USER_ID,\n  UNIQUE_ACCOUNT_ID,\n  EMAIL,\n  PRN ,\n  MKTG_EMAIL_DATE_PT,\n  status\n)  \nwith email_click as (\n    select lower(trim(replace(USER_ID,'-',''))) as segment_user_id,\n           lower(trim(EMAIL)) as email,\n           min(SENT_AT) as marketing_email_SENT_date\n    from SEGMENT_EVENTS.PROD_SEGMENT_ITERABLE.EMAIL_LINK_CLICKED  \n    where CAMPAIGN_ID = 3591687\n    group by 1,2\n)\n, dt_user as (\n    select *,\n           row_number() over (partition by user_email order by HAS_OPENED_ASPIRATION_ACCOUNT desc nulls last,\n                                                               HAS_STARTED_APPLICATION desc nulls last,\n                                                               HAS_ENTERED_CREDENTIALS desc nulls last) as rn\n    from bi.DT_USERS\n    where user_id is not null\n)\n, user_match as (\n    select ec.segment_user_id, ec.email,\n           ec.marketing_email_SENT_date,\n           coalesce(u.USER_ID, u2.USER_ID, u3.USER_ID) as user_id\n    from email_click ec\n    left join dt_user u on ec.segment_user_id = lower(u.EXTERNAL_USER_ID) and u.rn = 1\n    left join dt_user u2 on ec.segment_user_id = lower(u2.USER_EMAIL) and u2.rn = 1\n    left join dt_user u3 on ec.email = lower(u3.USER_EMAIL) and u3.rn = 1\n)\n, user_match_grouped as (\n    select USER_ID, min(email) as email,\n           convert_timezone('UTC','America/Los_Angeles',min(marketing_email_SENT_date)::timestamp)::date as marketing_email_SENT_date_pt,\n           min(segment_user_id) as segment_user_id\n    from user_match\n    group by 1\n)\n, result_union as (\n    select u.user_id, u.marketing_email_SENT_date_pt, u.email,\n           a.UNIQUE_ACCOUNT_ID, a.SPEND_GALILEO_PRN, a.SAVE_GALILEO_PRN,\n           'primary' as account_holder_type, segment_user_id\n    from user_match_grouped u\n    join bi.DT_ACCOUNTS a on u.user_id = a.USER_ID\n    where a.ACCOUNT_TYPE = 'Checking'\n    and a.TERMINATION_DATE is null\n    union\n    select u.user_id, u.marketing_email_SENT_date_pt, u.email,\n           a.UNIQUE_ACCOUNT_ID, a.JOINT_ACCOUNT_SECONDARY_SPEND_GALILEO_PRN, a.JOINT_ACCOUNT_SECONDARY_SAVE_GALILEO_PRN,\n           'secondary' as account_holder_type, segment_user_id\n    from user_match_grouped u\n    join bi.DT_ACCOUNTS a on u.user_id = a.JOINT_ACCOUNT_SECONDARY_USER_ID\n    where a.ACCOUNT_TYPE = 'Checking'\n    and a.TERMINATION_DATE is null\n)\n, result as (\n    select user_id,\n           UNIQUE_ACCOUNT_ID,\n           email,\n           nvl(SPEND_GALILEO_PRN, SAVE_GALILEO_PRN) as prn,\n           marketing_email_SENT_date_pt as MKTG_EMAIL_DATE_PT,\n           current_timestamp as payment_date\n    from result_union r\n    where marketing_email_SENT_date_pt between (convert_timezone('UTC','America/Los_Angeles',current_timestamp)::date - 7)\n                                       and (convert_timezone('UTC','America/Los_Angeles',current_timestamp)::date - 1)\n)\n, bad_prn as (\n    select UNIQUE_ACCOUNT_ID\n    from result\n    where prn is null\n    or prn ilike '%x%'\n    or trim(prn) = ''\n)\n, duplicate as (\n    select user_id\n    from result\n    group by 1\n    having count(*) > 1\n)\n, already_processed as (\n    select distinct a.user_id\n    from result a\n    join PROMOTIONS.THANK_YOU_PROGRAM b on a.user_id = b.USER_ID\n)\nselect r.user_id, r.UNIQUE_ACCOUNT_ID, r.email, r.prn, r.MKTG_EMAIL_DATE_PT,\n       case when b.UNIQUE_ACCOUNT_ID is not null then 'bad_prn'\n            when d.user_id is not null then 'duplicate_record'\n            when ap.user_id is not null then 'user_already_processed'\n            else 'ready_for_export' end as status\nfrom result r\nleft join bad_prn b on r.UNIQUE_ACCOUNT_ID = b.UNIQUE_ACCOUNT_ID\nleft join duplicate d on r.user_id = d.user_id\nleft join already_processed ap on r.user_id = ap.user_id\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966399":{"id":2966399,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":-560,"y":64,"width":32,"height":32,"inputConnectorIDs":[2966445],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"end success - no records"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2966352":{"id":2966352,"sourceID":2966398,"targetID":2966393},"2966353":{"id":2966353,"sourceID":2966365,"targetID":2966386},"2966354":{"id":2966354,"sourceID":2966386,"targetID":2966394},"2966355":{"id":2966355,"sourceID":2966391,"targetID":2966390},"2966356":{"id":2966356,"sourceID":2966387,"targetID":2966365},"2966357":{"id":2966357,"sourceID":2966366,"targetID":2966387},"2966358":{"id":2966358,"sourceID":2966351,"targetID":2966364},"2966359":{"id":2966359,"sourceID":2966390,"targetID":2966395},"2966360":{"id":2966360,"sourceID":2966364,"targetID":2966367},"2966361":{"id":2966361,"sourceID":2966395,"targetID":2966389},"2966362":{"id":2966362,"sourceID":2966394,"targetID":2966351},"2966363":{"id":2966363,"sourceID":2966388,"targetID":2966366},"2966444":{"id":2966444,"sourceID":2966384,"targetID":2966391},"2966445":{"id":2966445,"sourceID":2966385,"targetID":2966399},"2966447":{"id":2966447,"sourceID":2966393,"targetID":2966396}},"failureConnectors":{},"unconditionalConnectors":{"2966443":{"id":2966443,"sourceID":2966392,"targetID":2966398}},"trueConnectors":{"2966441":{"id":2966441,"sourceID":2966396,"targetID":2966384},"2966446":{"id":2966446,"sourceID":2966389,"targetID":2966388}},"falseConnectors":{"2966440":{"id":2966440,"sourceID":2966396,"targetID":2966385}},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"batch_id":{"definition":{"name":"batch_id","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"cfe7ff18-934a-11ec-9aa1-02f1888bbad9"},"no_records_to_export_count":{"definition":{"name":"no_records_to_export_count","type":"DECIMAL","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"0"},"pp_file_name":{"definition":{"name":"pp_file_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"btrans_584_20220228_typ124932.txt"},"pp_file_path":{"definition":{"name":"pp_file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@public.datateam/promotions/thank-you-program/to-galileo"},"pp_full_file_path":{"definition":{"name":"pp_full_file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@public.datateam/promotions/thank-you-program/to-galileo/btrans_584_20220228_typ124932.txt"},"records_to_process_count":{"definition":{"name":"records_to_process_count","type":"DECIMAL","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"0"},"s3_bucket":{"definition":{"name":"s3_bucket","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"aspiration-datateam"},"s3_path":{"definition":{"name":"s3_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"s3://aspiration-datateam/promotions/thank-you-program/to-galileo"}},"grids":{}},"info":{"name":"promo_thank_you_program_export","description":"Job to create payment file for Thank You Program promotion","type":"ORCHESTRATION","tag":"541ad16a-4f0a-46ec-8c79-6985c40246ed"}}