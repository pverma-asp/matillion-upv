{"job":{"components":{"2966480":{"id":2966480,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1058,"y":102,"width":32,"height":32,"inputConnectorIDs":[2966537],"outputSuccessConnectorIDs":[2966539],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delay (1)"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport time\ntime.sleep(15)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966481":{"id":2966481,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-880,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2966482],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2966532],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"archive gpg file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport boto3\ns3_resource = boto3.resource(\"s3\")\n\n#move gpg file to archive-gpg\ns3_resource.Object(s3_bucket, \n                   \"from-galileo/archive-gpg/\" + galileo_file_name + \".out.gpg\").copy_from(\n CopySource = s3_bucket + \"/from-galileo/\" + galileo_file_name + \".out.gpg\")\n\n#delete gpg from old location\ns3_resource.Object(s3_bucket, \n                   \"from-galileo/\" + galileo_file_name + \".out.gpg\").delete()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966483":{"id":2966483,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-912,"y":96,"width":32,"height":32,"inputConnectorIDs":[2966538],"outputSuccessConnectorIDs":[2966482],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delay (2)"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport time\ntime.sleep(15)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966484":{"id":2966484,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":-768,"y":160,"width":32,"height":32,"inputConnectorIDs":[2966533],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966485":{"id":2966485,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1216,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2966535],"outputSuccessConnectorIDs":[2966543],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"set variable"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\ncontext.updateVariable('full_file_path', file_path + \"/\" + galileo_file_name + '.out')\ncontext.updateVariable('galileo_output_file_name', galileo_file_name + '.out.gpg')\ncontext.updateVariable('galileo_full_file_path', file_path + \"/\" + galileo_output_file_name)\nprint (full_file_path)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966486":{"id":2966486,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-976,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2966539],"outputSuccessConnectorIDs":[2966538],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"decrypt_file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\n#python function to call lambda to encrypt s3 file to send to galileo\n\nbody = json.dumps(dict(operation='dec',file='${s3_path}/${galileo_file_name}.out.gpg',\n                       decrypted_file_path='${s3_path}',\n                       extension='gpg'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:prod-python-encrypt-decrypt-manual',\n    InvocationType='Event',\n    LogType='Tail',\n    Payload=body\n    )\n\nrun_lambda()        \n\n\nprint (body)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966487":{"id":2966487,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1104,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2966543],"outputSuccessConnectorIDs":[2966537],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"get_galileo_response_file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\n\n\nbody = json.dumps(dict(operation='get',working_dir='/sftpdir/response',\n                       s3_output='${s3_path}/${galileo_file_name}.out.gpg',\n                       sftp_file_name='${galileo_file_name}.out.gpg',\n                       lambda_arn='none'\n                      ))\n\nprint (body)\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:sftp-to-s3-python',\n    InvocationType='Event',\n    LogType='Tail',\n    Payload=body\n    )\n    \nrun_lambda()    "}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966488":{"id":2966488,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1312,"y":-16,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2966535],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966489":{"id":2966489,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-512,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2966542],"outputSuccessConnectorIDs":[2966540],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"update statuses"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists tmp_galileo_output;\ncreate temp table tmp_galileo_output as\nselect\n  s.scholly_promotion_id,\n  case when o.galileo_response_code = '0000' then 'payment_successful'\n       when o.galileo_response_code <> '0000' then 'error_from_galileo'\n       else 'no_status_from_galileo'\n  end as status,\n  o.galileo_response_code\nfrom rdl.scholly_promotion s\nleft join rdl.scholly_promotion_output o on s.batch_id = o.batch_id\n                                        and s.galileo_file_record_number = o.record_number\nwhere s.galileo_file_name = '${galileo_file_name}';\n\nupdate rdl.scholly_promotion s\nset status = o.status,\n    galileo_response_code = o.galileo_response_code,\n    updated_at = current_timestamp\nfrom tmp_galileo_output o\nwhere s.scholly_promotion_id = o.scholly_promotion_id;\n\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966490":{"id":2966490,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-512,"y":80,"width":32,"height":32,"inputConnectorIDs":[2966540],"outputSuccessConnectorIDs":[2966541],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log result"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log results\n\n--imported file success\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Scholly Promotion',\n       'Output file successfully imported from Galileo',\n        count(*) as record_count,\n       'rdl.scholly_promotion',\n       'galileo_file_name = ${galileo_file_name}',\n       'low'\nfrom rdl.scholly_promotion f \nwhere galileo_file_name = '${galileo_file_name}'\nand galileo_response_code is not null\nhaving record_count > 0;\n\n\n--log final statuses\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Scholly Promotion',\n       'Successful payments in ${galileo_file_name}',\n       count(distinct unique_account_id) as record_count,\n       'rdl.scholly_promotion',\n       'where status = payment_successful',\n       'low'\nfrom rdl.scholly_promotion\nwhere status = 'payment_successful'\nand galileo_file_name = '${galileo_file_name}'\nhaving record_count > 0\n\nunion all\n\nselect\n       'Scholly Promotion',\n       'Failed payments in ${galileo_file_name}',\n       count(distinct unique_account_id) as record_count,\n       'rdl.scholly_promotion',\n       'where status = error_from_galileo',\n       'high'\nfrom rdl.scholly_promotion\nwhere status = 'error_from_galileo'\nand galileo_file_name = '${galileo_file_name}'\nhaving record_count > 0\n\nunion all\n\nselect\n       'Scholly Promotion',\n       'Missing Galileo status for ${galileo_file_name}',\n       count(distinct unique_account_id) as record_count,\n       'rdl.scholly_promotion',\n       'where status = no_status_from_galileo',\n       'high'\nfrom rdl.scholly_promotion\nwhere status = 'no_status_from_galileo'\nand galileo_file_name = '${galileo_file_name}'\nhaving record_count > 0;\n\n/*\n--missing galileo status\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Scholly Promotion',\n       'Missing status from Galileo',\n        count(*) as record_count,\n       'rdl.scholly_promotion',\n       'galileo_file_name = ${galileo_file_name} and  status = no_status_from_galileo',\n       'high'\nfrom rdl.scholly_promotion f \nwhere galileo_file_name = '${galileo_file_name}'\nand status = 'no_status_from_galileo'\nhaving record_count > 0;\n*/"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966491":{"id":2966491,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":-512,"y":160,"width":32,"height":32,"inputConnectorIDs":[2966541],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966492":{"id":2966492,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-768,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2966532],"outputSuccessConnectorIDs":[2966536],"outputFailureConnectorIDs":[2966534],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"load into staging"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists etl.scholly_promotion_galileo_output_staging;\ncreate table etl.scholly_promotion_galileo_output_staging\n(\n  output_row varchar(2000)\n);\n\nCOPY INTO etl.scholly_promotion_galileo_output_staging (output_row)\nFROM (SELECT $1\n      FROM '${full_file_path}')\nFILE_FORMAT = ETL.PLAIN_TEXT\nON_ERROR = SKIP_FILE;\n\n--remove header and trailer\ndelete from etl.scholly_promotion_galileo_output_staging \nwhere left(output_row,1) in ('H','T');"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966494":{"id":2966494,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-640,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2966536],"outputSuccessConnectorIDs":[2966542],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into output table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists tmp_output;\ncreate temp table tmp_output as\n  select\n    substring(output_row,1,1) as record_type,\n    substring(output_row,2,6) as record_number,\n    substring(output_row,8,1) as account_id_type,\n    substring(output_row,9,50) as account_identifier,\n    substring(output_row,59,20) as transaction_identifier,\n    substring(output_row,79,4) as galileo_response_code\n  from etl.scholly_promotion_galileo_output_staging;\n\ndelete from rdl.scholly_promotion_output\nwhere batch_id = '${batch_id}'\nand record_number in (select record_number from tmp_output);\n\ninsert into rdl.scholly_promotion_output\n(\n    batch_id,\n    galileo_output_file_name,\n    record_type,\n    record_number,\n    account_id_type,\n    account_identifier,\n    transaction_identifier,\n    galileo_response_code  \n)  \nselect\n  '${batch_id}',\n  '${galileo_file_name}' || '.out',\n  record_type,\n  record_number,\n  account_id_type,\n  trim(account_identifier),\n  trim(transaction_identifier),\n  galileo_response_code   \nfrom tmp_output;  \n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2966495":{"id":2966495,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-768,"y":80,"width":32,"height":32,"inputConnectorIDs":[2966534],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2966533],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log load failure"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log result\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier)\nselect\n       'Scholly Promotion',\n       'Failed to copy data into etl.scholly_promotion_galileo_output_staging.',\n       null,\n       'etl.scholly_promotion_galileo_output_staging',\n       '${galileo_file_name}' || '.out';"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2966482":{"id":2966482,"sourceID":2966483,"targetID":2966481},"2966536":{"id":2966536,"sourceID":2966492,"targetID":2966494},"2966537":{"id":2966537,"sourceID":2966487,"targetID":2966480},"2966538":{"id":2966538,"sourceID":2966486,"targetID":2966483},"2966539":{"id":2966539,"sourceID":2966480,"targetID":2966486},"2966540":{"id":2966540,"sourceID":2966489,"targetID":2966490},"2966541":{"id":2966541,"sourceID":2966490,"targetID":2966491},"2966542":{"id":2966542,"sourceID":2966494,"targetID":2966489},"2966543":{"id":2966543,"sourceID":2966485,"targetID":2966487}},"failureConnectors":{"2966534":{"id":2966534,"sourceID":2966492,"targetID":2966495}},"unconditionalConnectors":{"2966532":{"id":2966532,"sourceID":2966481,"targetID":2966492},"2966533":{"id":2966533,"sourceID":2966495,"targetID":2966484},"2966535":{"id":2966535,"sourceID":2966488,"targetID":2966485}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"batch_id":{"definition":{"name":"batch_id","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"c38640dc-3b33-11ec-a6a5-02f1888bbad9"},"file_path":{"definition":{"name":"file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@PUBLIC.SCHOLLY_PROMOTION/from-galileo"},"full_file_path":{"definition":{"name":"full_file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@PUBLIC.SCHOLLY_PROMOTION/from-galileo/btrans_584_20211101_sch095005.txt.out"},"galileo_file_name":{"definition":{"name":"galileo_file_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"btrans_584_20211101_sch095005.txt"},"response_file_path":{"definition":{"name":"response_file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"/sftpdir/response"},"s3_bucket":{"definition":{"name":"s3_bucket","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"aspiration-scholly-promotion"},"s3_path":{"definition":{"name":"s3_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"s3://aspiration-scholly-promotion/from-galileo"}},"grids":{}},"info":{"name":"promo_scholly_import_process","description":"Processes Galileo output files for Scholly promo","type":"ORCHESTRATION","tag":"f7979ad7-3498-4c7e-8895-03fcc2d04abb"}}