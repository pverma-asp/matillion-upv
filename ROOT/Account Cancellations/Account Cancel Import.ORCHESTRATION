{"job":{"components":{"2967968":{"id":2967968,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":-768,"y":160,"width":32,"height":32,"inputConnectorIDs":[2967990],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967969":{"id":2967969,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1104,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2967988],"outputSuccessConnectorIDs":[2967992],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"get_galileo_response_file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nimport time\n\nbody = json.dumps(dict(operation='get',working_dir='/sftpdir/response',\n                       s3_output='${s3_path}/${file_name}.out.gpg',\n                       sftp_file_name='${file_name}.out.gpg',\n                       lambda_arn='none'\n                      ))\n\nprint (body)\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:sftp-to-s3-python',\n    InvocationType='Event',\n    LogType='Tail',\n    Payload=body\n    )\n    \nrun_lambda()    \n\n\ntime.sleep(15)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967970":{"id":2967970,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-976,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2967992],"outputSuccessConnectorIDs":[2967995],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"decrypt_file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nimport time\n#python function to call lambda to decrypt s3 file to send to galileo\n\nbody = json.dumps(dict(operation='dec',file='${s3_path}/${file_name}.out.gpg',\n                       decrypted_file_path='${s3_path}',\n                       extension='gpg'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:prod-python-encrypt-decrypt-manual',\n    InvocationType='Event',\n    LogType='Tail',\n    Payload=body\n    )\n\nrun_lambda()        \n\n\n#print (body)\n\n\ntime.sleep(15)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967971":{"id":2967971,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-880,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2967995],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2967985],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"archive gpg file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport boto3\ns3_resource = boto3.resource(\"s3\")\n\n#move gpg file to archive-gpg\ns3_resource.Object(s3_bucket, \n                   \"account-cancellations/galileo-files/from-galileo/archive-gpg/\" + file_name + \".out.gpg\").copy_from(\n CopySource = s3_bucket + \"/account-cancellations/galileo-files/from-galileo/\" + file_name + \".out.gpg\")\n\n#delete gpg from old location\ns3_resource.Object(s3_bucket, \n                   \"account-cancellations/galileo-files/from-galileo/\" + file_name + \".out.gpg\").delete()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967972":{"id":2967972,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1312,"y":-16,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2967984],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967973":{"id":2967973,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":-512,"y":160,"width":32,"height":32,"inputConnectorIDs":[2967994],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967974":{"id":2967974,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-512,"y":80,"width":32,"height":32,"inputConnectorIDs":[2967989],"outputSuccessConnectorIDs":[2967994],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log result"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log results\n\n--imported file success\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Account Cancellations',\n       'Output file successfully imported from Galileo',\n        count(*) as record_count,\n       'rdl.galileo_account_cancellation',\n       'galileo_file_name = ${file_name}',\n       'low'\nfrom rdl.galileo_account_cancellation f \nwhere galileo_file_name = '${file_name}'\nand galileo_response_code is not null\nhaving record_count > 0;\n\n\n--log final statuses\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Account Cancellations',\n       'Successful payments in ${file_name}',\n       count(distinct prn) as record_count,\n       'rdl.galileo_account_cancellation',\n       'where status = cancellation successful',\n       'low'\nfrom rdl.galileo_account_cancellation\nwhere status = 'cancellation successful'\nand galileo_file_name = '${file_name}'\nhaving record_count > 0\n\nunion all\n\nselect\n       'Account Cancellations',\n       'Galileo error codes (' || listagg(distinct GALILEO_RESPONSE_CODE, ', ') || ') in ${file_name}',\n       count(distinct prn) as record_count,\n       'rdl.galileo_account_cancellation',\n       'where status = error from galileo',\n       'low'\nfrom rdl.galileo_account_cancellation\nwhere status = 'error from galileo'\nand galileo_file_name = '${file_name}'\nhaving record_count > 0\n\nunion all\n\nselect\n       'Account Cancellations',\n       'Missing Galileo status for ${file_name}',\n       count(distinct prn) as record_count,\n       'rdl.galileo_account_cancellation',\n       'where status = no status from galileo',\n       'high'\nfrom rdl.galileo_account_cancellation\nwhere status = 'no status from galileo'\nand galileo_file_name = '${file_name}'\nhaving record_count > 0;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967975":{"id":2967975,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1216,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2967984],"outputSuccessConnectorIDs":[2967988],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"set variable"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\ncontext.updateVariable('full_file_path', file_path + \"/\" + file_name + '.out')\n#context.updateVariable('galileo_output_file_name', file_name + '.out.gpg')\n#context.updateVariable('galileo_full_file_path', file_path + \"/\" + galileo_output_file_name)\nprint (full_file_path)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967996":{"id":2967996,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-640,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2967993],"outputSuccessConnectorIDs":[2967991],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into output table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists tmp_output;\ncreate temp table tmp_output as\n  select\n    substring(output_row,1,1) as record_type,\n    substring(output_row,2,6) as record_number,\n    substring(output_row,8,1) as account_id_type,\n    substring(output_row,9,50) as account_identifier,\n    substring(output_row,59,4) as galileo_response_code\n  from etl.account_cancellation_output_staging;\n\ndelete from etl.account_cancellation_output\nwhere batch_id = '${batch_id}'\nand record_number in (select record_number from tmp_output);\n\ninsert into etl.account_cancellation_output\n(\n    batch_id,\n    galileo_output_file_name,\n    record_type,\n    record_number,\n    account_id_type,\n    account_identifier,\n    galileo_response_code  \n)  \nselect\n  '${batch_id}',\n  '${file_name}' || '.out',\n  record_type,\n  record_number,\n  account_id_type,\n  trim(account_identifier),\n  galileo_response_code   \nfrom tmp_output;  \n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967997":{"id":2967997,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-768,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2967985],"outputSuccessConnectorIDs":[2967993],"outputFailureConnectorIDs":[2967987],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"load into staging"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists etl.account_cancellation_output_staging;\ncreate table etl.account_cancellation_output_staging\n(\n  output_row varchar(2000)\n);\n\nCOPY INTO etl.account_cancellation_output_staging (output_row)\nFROM (SELECT $1\n      FROM '${full_file_path}')\nFILE_FORMAT = ETL.PLAIN_TEXT\nON_ERROR = SKIP_FILE;\n\n--remove header and trailer\ndelete from etl.account_cancellation_output_staging \nwhere left(output_row,1) in ('H','T');"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967998":{"id":2967998,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-512,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2967991],"outputSuccessConnectorIDs":[2967989],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"update statuses"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists tmp_galileo_output;\ncreate temp table tmp_galileo_output as\nselect\n  s.galileo_account_cancel_id,\n  case when o.galileo_response_code = '0000' then 'cancellation successful'\n       when o.galileo_response_code <> '0000' then 'error from galileo'\n       else 'no status from galileo'\n  end as status,\n  o.galileo_response_code\nfrom rdl.galileo_account_cancellation s\nleft join etl.account_cancellation_output o on s.batch_id = o.batch_id\n                                           and s.galileo_file_record_number = o.record_number\nwhere s.galileo_file_name = '${file_name}';\n\nupdate rdl.galileo_account_cancellation s\nset status = o.status,\n    galileo_response_code = o.galileo_response_code,\n    updated_at = current_timestamp\nfrom tmp_galileo_output o\nwhere s.galileo_account_cancel_id = o.galileo_account_cancel_id;\n\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967999":{"id":2967999,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-768,"y":80,"width":32,"height":32,"inputConnectorIDs":[2967987],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2967990],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log load failure"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log result\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier)\nselect\n       'Account Cancellations',\n       'Failed to copy data into etl.account_cancellation_output_staging',\n       null,\n       'etl.account_cancellation_output_staging',\n       '${file_name}' || '.out';"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2967988":{"id":2967988,"sourceID":2967975,"targetID":2967969},"2967989":{"id":2967989,"sourceID":2967998,"targetID":2967974},"2967991":{"id":2967991,"sourceID":2967996,"targetID":2967998},"2967992":{"id":2967992,"sourceID":2967969,"targetID":2967970},"2967993":{"id":2967993,"sourceID":2967997,"targetID":2967996},"2967994":{"id":2967994,"sourceID":2967974,"targetID":2967973},"2967995":{"id":2967995,"sourceID":2967970,"targetID":2967971}},"failureConnectors":{"2967987":{"id":2967987,"sourceID":2967997,"targetID":2967999}},"unconditionalConnectors":{"2967984":{"id":2967984,"sourceID":2967972,"targetID":2967975},"2967985":{"id":2967985,"sourceID":2967971,"targetID":2967997},"2967990":{"id":2967990,"sourceID":2967999,"targetID":2967968}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"batch_id":{"definition":{"name":"batch_id","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"9bc8d76a-f994-11ec-b8f3-02f1888bbad9"},"file_name":{"definition":{"name":"file_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"bchanges_584_20220630_ops180946.txt"},"file_path":{"definition":{"name":"file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@public.datateam/account-cancellations/galileo-files/from-galileo"},"full_file_path":{"definition":{"name":"full_file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@public.datateam/account-cancellations/galileo-files/from-galileo/bchanges_584_20220630_ops180946.txt"},"response_file_path":{"definition":{"name":"response_file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"/sftpdir/response"},"s3_bucket":{"definition":{"name":"s3_bucket","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"aspiration-datateam"},"s3_path":{"definition":{"name":"s3_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"s3://aspiration-datateam/account-cancellations/galileo-files/from-galileo"}},"grids":{}},"info":{"name":"Account Cancel Import","description":"Processes Galileo output files for Account Cancellations","type":"ORCHESTRATION","tag":"6c4c61da-255a-4885-b615-363444643269"}}