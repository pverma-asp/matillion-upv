{"job":{"components":{"2967888":{"id":2967888,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-688,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2967916],"outputSuccessConnectorIDs":[2967908],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Query - Reprocess accounts"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--not currently reprocessing automatically\n/*\n--reprocess Operations accounts that still need to be cancelled (phase 1)\n--may be able to phase out this first query and just use the second one below\ninsert into etl.account_cancellation_request\n(SOURCE_TYPE, SOURCE_NAME, SOURCE_FILE, SOURCE_FILE_RENAMED, CUSTOMER_UUID, STATUS, CREATED_AT, UPDATED_AT)\nselect distinct\n        'query' as source_type,\n        'Operations Reprocess'  as source_name,\n        null as source_file,\n        null as source_file_renamed,\n        a.uuid as customer_uuid,\n        'ready for processing' as status,\n        current_timestamp as created_at,\n        current_timestamp as updated_at\nfrom rdl.ACCOUNTS_MISSING_TERMINATION_DATES a\nleft join etl.account_cancellation_request b on a.UUID = b.CUSTOMER_UUID\n                                            and b.STATUS = 'ready for processing'\nwhere a.OPS_CANCELLATION_REQUESTED = true\nand a.category not ilike '%charged off%'\nand b.CUSTOMER_UUID is null\n--don't reprocess the same UUID more than once per day\nand not exists (select 1\n                from etl.account_cancellation_request r\n                where a.UUID = r.CUSTOMER_UUID\n                and convert_timezone('UTC','America/Los_Angeles',r.CREATED_AT::timestamp)::date\n                    = convert_timezone('UTC','America/Los_Angeles',current_timestamp::timestamp)::date\n                );\n\n--for Ops reprocessing records missed not in first query\ninsert into etl.account_cancellation_request\n(SOURCE_TYPE, SOURCE_NAME, SOURCE_FILE, SOURCE_FILE_RENAMED, CUSTOMER_UUID, STATUS, CREATED_AT, UPDATED_AT)\nselect distinct\n        'query' as source_type,\n        a.source_name || ' Reprocess' as source_name,\n        null as source_file,\n        null as source_file_renamed,\n        a.customer_uuid,\n        'ready for processing' as status,\n        current_timestamp as created_at,\n        current_timestamp as updated_at\nfrom etl.ACCOUNT_CANCELLATION_REQUEST a\njoin bi.DT_USERS b on a.CUSTOMER_UUID = b.EXTERNAL_USER_ID\njoin bi.DT_ACCOUNTS c on b.USER_ID = c.USER_ID\nleft join etl.account_cancellation_request d on a.CUSTOMER_UUID = d.CUSTOMER_UUID\n                                            and d.STATUS = 'ready for processing'\nwhere c.TERMINATION_DATE is null\nand c.ACCOUNT_TYPE = 'Checking'\nand a.SOURCE_NAME in ('Operations','Account Management')\nand d.CUSTOMER_UUID is null\n--don't reprocess the same UUID more than once per day\nand not exists (select 1\n                from etl.account_cancellation_request r\n                where a.CUSTOMER_UUID = r.CUSTOMER_UUID\n                and convert_timezone('UTC','America/Los_Angeles',r.CREATED_AT::timestamp)::date\n                    = convert_timezone('UTC','America/Los_Angeles',current_timestamp::timestamp)::date\n                );\n*/"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967889":{"id":2967889,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-944,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2967906],"outputSuccessConnectorIDs":[2967917],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"File Import - Ops"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Account Cancel - File Process"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"department_to_process"},"2":{"slot":2,"type":"STRING","value":"Operations"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967890":{"id":2967890,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":16,"y":0,"width":32,"height":32,"inputConnectorIDs":[2967904],"outputSuccessConnectorIDs":[2967911],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"set variables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n# set file name\n\nimport uuid\nfrom datetime import datetime,timezone\nfrom dateutil import tz\nfrom_zone = tz.gettz('America/Los_Angeles')\ndateTimeObj = datetime.now()\ndateTimeObj = dateTimeObj.replace(tzinfo=timezone.utc).astimezone(tz=from_zone)\n\ntimestampStr = dateTimeObj.strftime(\"bchanges_584_%Y%m%d_ac%H%M%S.txt\")\ncontext.updateVariable('file_name', timestampStr)\n#context.updateVariable('pp_full_file_path', pp_file_path + \"/\" + pp_file_name)\n#context.updateVariable('s3_file_name', pp_full_file_path + '.gpg')\ncontext.updateVariable('batch_id', uuid.uuid1())\n#context.updateVariable('pp_file_name_gpg', pp_file_name + '.gpg')\nprint (file_name)\nprint (batch_id)\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967891":{"id":2967891,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-832,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2967917],"outputSuccessConnectorIDs":[2967916],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"File Import - Acct Mgmt"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Account Cancel - File Process"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"department_to_process"},"2":{"slot":2,"type":"STRING","value":"Account Management"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967894":{"id":2967894,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-544,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2967908],"outputSuccessConnectorIDs":[2967918],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Query - AM Cancellation after Charge-off"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--customers that have had a spend account charged off, but still have save accounts open\ninsert into etl.account_cancellation_request\n(SOURCE_TYPE, SOURCE_NAME, SOURCE_FILE, SOURCE_FILE_RENAMED, CUSTOMER_UUID, STATUS, CREATED_AT, UPDATED_AT)\nselect distinct\n        'query' as source_type,\n        'Acct Mgmt Cancel After Spend Charge-off' as source_name,\n        null as source_file,\n        null as source_file_renamed,\n        a.uuid as customer_uuid,\n        'ready for processing' as status,\n        current_timestamp as created_at,\n        current_timestamp as updated_at\nfrom rdl.ACCOUNTS_MISSING_TERMINATION_DATES a\nwhere SPEND_STATUS = 'Charged Off'\nand SAVE_STATUS != 'Charged Off'\nand SAVE_STATUS not ilike '%cancel%'\nand a.SAVE_CURRENT_BALANCE = 0\n--exclude customers who have additional active spend accounts\nand a.UUID not in (\n        select UUID\n        from rdl.PRN_DEPOSITORY_REFERENCE\n        where TYPE_OF_ACCOUNT = 'Spend'\n        and PRN_STATUS not ilike '%charged%'\n        and PRN_STATUS not ilike '%cancel%'\n        and UUID is not null\n    )\n--don't run this more than once per day    \nand not exists (select 1\n                from etl.account_cancellation_request r\n                where a.UUID = r.CUSTOMER_UUID\n                and convert_timezone('UTC','America/Los_Angeles',r.CREATED_AT::timestamp)::date\n                    = convert_timezone('UTC','America/Los_Angeles',current_timestamp::timestamp)::date\n                );"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967895":{"id":2967895,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-944,"y":-160,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2967906],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967936":{"id":2967936,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-240,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2967913],"outputSuccessConnectorIDs":[2967915],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Query - Surplus Accounts"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--query for surplus accounts\n--these are extra accounts created during account creation\n--that are not the customer's main accounts\ninsert into etl.account_cancellation_request\n(SOURCE_TYPE, SOURCE_NAME, SOURCE_FILE, SOURCE_FILE_RENAMED, CUSTOMER_UUID, STATUS, CREATED_AT, UPDATED_AT)\nselect distinct\n        'query' as source_type,\n        'Surplus Accounts' as source_name,\n        null as source_file,\n        null as source_file_renamed,\n        a.uuid as customer_uuid,\n        'ready for processing' as status,\n        current_timestamp as created_at,\n        current_timestamp as updated_at\nfrom rdl.PRN_DEPOSITORY_REFERENCE a\nwhere REPORT_CATEGORY = 'Surplus Accounts from Unknown Cause'\nand PRN_STATUS in ('Active','Suspended')\nand PRN != CURRENT_PRN\n--double check that the PRN is not currently being used\nand PRN::varchar(30) not in (select ACCOUNT_NUMBER\n                             from WEB_DB.USER_PAYMENT_ACCOUNT\n                             where NAME ilike 'Aspiration%'\n                             and ACCOUNT_NUMBER is not null)\nand IS_JOINT_ACCOUNT = false\nand IS_GALILEO_ACCOUNT_ID_SHARED = false\nand CUST_MASTER_BALANCE = 0\nand MOST_RECENT_TRANSACTION_DATE is null\n--don't run this more than once per day\nand not exists (select 1\n                from etl.account_cancellation_request r\n                where a.UUID = r.CUSTOMER_UUID\n                and convert_timezone('UTC','America/Los_Angeles',r.CREATED_AT::timestamp)::date\n                    = convert_timezone('UTC','America/Los_Angeles',current_timestamp::timestamp)::date\n                );"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967937":{"id":2967937,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-400,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2967918],"outputSuccessConnectorIDs":[2967913],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Query - Rotated Accounts"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--query for rotated accounts\n--these are accounts where a user was rotated to new PRN's,\n--and their old PRN's need to be closed\ninsert into etl.account_cancellation_request\n(SOURCE_TYPE, SOURCE_NAME, SOURCE_FILE, SOURCE_FILE_RENAMED, CUSTOMER_UUID, STATUS, CREATED_AT, UPDATED_AT)\nselect distinct\n        'query' as source_type,\n        'Rotated Accounts' as source_name,\n        null as source_file,\n        null as source_file_renamed,\n        a.uuid as customer_uuid,\n        'ready for processing' as status,\n        current_timestamp as created_at,\n        current_timestamp as updated_at\nfrom rdl.PRN_DEPOSITORY_REFERENCE a\nwhere REPORT_CATEGORY = 'Surplus Accounts from Account Rotation'\nand PRN_STATUS in ('Active','Suspended')\nand PRN != CURRENT_PRN\n--double check that the PRN is not currently being used\nand PRN::varchar(30) not in (select ACCOUNT_NUMBER\n                             from WEB_DB.USER_PAYMENT_ACCOUNT\n                             where NAME ilike 'Aspiration%'\n                             and ACCOUNT_NUMBER is not null)\nand IS_JOINT_ACCOUNT = false\nand IS_GALILEO_ACCOUNT_ID_SHARED = false \nand CUST_MASTER_BALANCE = 0\n--don't run this more than once per day\nand not exists (select 1\n                from etl.account_cancellation_request r\n                where a.UUID = r.CUSTOMER_UUID\n                and convert_timezone('UTC','America/Los_Angeles',r.CREATED_AT::timestamp)::date\n                    = convert_timezone('UTC','America/Los_Angeles',current_timestamp::timestamp)::date\n                );"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967940":{"id":2967940,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-384,"y":96,"width":32,"height":32,"inputConnectorIDs":[2967905],"outputSuccessConnectorIDs":[2967938],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"archive gpg file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"### archive gpg file\nimport boto3\nimport time\n\ns3_resource = boto3.resource(\"s3\")\n\n#move gpg file to archive-gpg\ns3_resource.Object(s3_bucket, \n                   \"account-cancellations/galileo-files/to-galileo/archive-gpg/\" + file_name + '.gpg').copy_from(\n CopySource = s3_bucket + \"/account-cancellations/galileo-files/to-galileo/\" + file_name + '.gpg')\n\n#delete gpg from old location\ns3_resource.Object(s3_bucket, \n                   \"account-cancellations/galileo-files/to-galileo/\" + file_name + '.gpg').delete()\n\n#delay before sending file\ntime.sleep(15)\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967941":{"id":2967941,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-784,"y":96,"width":32,"height":32,"inputConnectorIDs":[2967914],"outputSuccessConnectorIDs":[2967910],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log result"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log result\n\n--success\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Account Cancellations',\n       'File successfully exported to Galileo',\n       count(*) as record_count,\n       'rdl.galileo_account_cancellation',\n       'galileo_file_name = ${file_name}',\n       'low'\nfrom rdl.galileo_account_cancellation f \nwhere galileo_file_name = '${file_name}'\nand status = 'exported'\nhaving record_count > 0;\n\n--failure\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Account Cancellations',\n       'File failed to export to Galileo',\n       count(*) as record_count,\n       'rdl.galileo_account_cancellation',\n       'galileo_file_name = ${file_name}',\n       'high'\nfrom rdl.galileo_account_cancellation f \nwhere galileo_file_name = '${file_name}'\nand status = 'ready for processing'\nhaving record_count > 0;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967942":{"id":2967942,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":160,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2967907],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log no records to process"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Account Cancellations',\n       'No records to process',\n        null,\n       'etl.account_cancellation_request',\n       'where status = ready for processing',\n       'low';\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967943":{"id":2967943,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-656,"y":96,"width":32,"height":32,"inputConnectorIDs":[2967909],"outputSuccessConnectorIDs":[2967914],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"update status"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--update statuses\nupdate rdl.galileo_account_cancellation\nset status = 'exported',\n    updated_at = current_timestamp\nwhere GALILEO_FILE_NAME = '${file_name}';\n\n\nupdate etl.account_cancellation_request\nset status = 'processed',\n    updated_at = current_timestamp\nwhere acct_cancel_request_id in\n (select distinct acct_cancel_request_id\n  from rdl.galileo_account_cancellation\n  where GALILEO_FILE_NAME = '${file_name}');"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967944":{"id":2967944,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-256,"y":96,"width":32,"height":32,"inputConnectorIDs":[2967939],"outputSuccessConnectorIDs":[2967905],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"encrypt file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"#python function to call lambda to encrypt s3 file to send to galileo\nimport boto3\nimport time\n\nbody = json.dumps(dict(operation='enc',file='${s3_path}/${file_name}',\n                       encrypted_file_path='${s3_path}/',\n                       gpg_key='galileo_public_key',\n                       extension='gpg'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:prod-python-encrypt-decrypt-manual',\n    InvocationType='RequestResponse',\n    LogType='Tail',\n    Payload=body\n    )\n    print(response['Payload'].read())\n\n\nrun_lambda()\n\n#print (body)\n\n#delay before sending file\ntime.sleep(20)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967945":{"id":2967945,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-144,"y":96,"width":32,"height":32,"inputConnectorIDs":[2967919],"outputSuccessConnectorIDs":[2967939],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create galileo file"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--temp table to hold header/detail/trailer data\ndrop table if exists tmp_file;\ncreate temp table tmp_file\n(\n  file_id varchar(7),\n  file_row varchar(2000)\n);\n\n--header\ninsert into tmp_file (file_id, file_row)\nselect\n     '000000' as file_id,\n     'HHEADER' || rpad('454', 10, ' ') ||\n     rpad('584', 10, ' ') ||\n     rpad((galileo_file_name || '.gpg'), 50, ' ') ||\n     to_char(convert_timezone('America/Los_Angeles',current_timestamp)::date, 'MMDDYYYY') as file_row\nfrom rdl.galileo_account_cancellation\nwhere status = 'ready for processing'\nand galileo_file_name = '${file_name}'\norder by created_at desc\nlimit 1;\n\n--detail\ninsert into tmp_file (file_id, file_row)\nselect galileo_file_record_number,\n       'D' ||\n       galileo_file_record_number ||\n       'R' ||\n       rpad(prn,50,' ') ||\n       rpad(2,5,' ') ||\n       rpad('Z',255,' ') as detail\nfrom rdl.galileo_account_cancellation\nwhere status = 'ready for processing'\nand galileo_file_name = '${file_name}'\norder by galileo_file_record_number;\n\n--trailer\ninsert into tmp_file (file_id, file_row)\nselect '1000000',\n       'TTRAILER' || rpad(count(*),6,' ')\nfrom rdl.galileo_account_cancellation\nwhere status = 'ready for processing'\nand galileo_file_name = '${file_name}';\n\n--export to S3\ncopy into '@public.datateam/account-cancellations/galileo-files/to-galileo/${file_name}'\n     from (SELECT file_row FROM tmp_file ORDER BY file_id)\n     file_format =(format_name='ETL.PLAIN_TEXT' compression='none' FILE_EXTENSION = '')\n     single = true overwrite = true;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967946":{"id":2967946,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":-912,"y":96,"width":32,"height":32,"inputConnectorIDs":[2967910],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"end success"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967947":{"id":2967947,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-512,"y":96,"width":32,"height":32,"inputConnectorIDs":[2967938],"outputSuccessConnectorIDs":[2967909],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"send to galileo"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\n#python function to call lambda to encrypt s3 file to send to galileo\n\nbody = json.dumps(dict(operation='put',working_dir='/sftpdir/batch',\n                       s3_output='${s3_path}/archive-gpg/${file_name}.gpg',\n                       sftp_file_name='${file_name}.gpg',\n                       lambda_arn='None'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:sftp-to-s3-python',\n    InvocationType='Event',\n    LogType='Tail',\n    Payload=body\n    )\n\n    \nrun_lambda()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967948":{"id":2967948,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":16,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2967912],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[2967904],"outputFalseConnectorIDs":[2967907],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"proceed if records > 0"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"records_to_process"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Greater than"},"4":{"slot":4,"type":"STRING","value":"0"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"(${new Date().getHours()} >= 12 && ${new Date().getHours()} < 13) ||\n(${new Date().getHours()} >= 15 && ${new Date().getHours()} < 16) ||\n(${new Date().getHours()} >= 18 && ${new Date().getHours()} < 19) ||\n(${new Date().getHours()} >= 21 && ${new Date().getHours()} < 22) ||\n(${new Date().getHours()} >= 0 && ${new Date().getHours()} < 1) ||\n(${new Date().getHours()} >= 6 && ${new Date().getHours()} < 7)"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967949":{"id":2967949,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":-96,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2967915],"outputSuccessConnectorIDs":[2967912],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"record count"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select count(*) as records_to_process\nfrom etl.account_cancellation_request \nwhere status = 'ready for processing'\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"records_to_process"},"2":{"slot":2,"type":"STRING","value":"RECORDS_TO_PROCESS"}}}},"visible":true},"4":{"slot":4,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"5":{"slot":5,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2967950":{"id":2967950,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":16,"y":96,"width":32,"height":32,"inputConnectorIDs":[2967911],"outputSuccessConnectorIDs":[2967919],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert prns"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--master list of customers and their joint account partners\n--note: for rotated account and account creation bug closure, \n--exclude them from the customer list below because only old \n--and non-main PRN's are cancelled. These closure types \n--have their own insert into tmp_prn_list further below.\ndrop table if exists tmp_customer_list;\ncreate temp table tmp_customer_list as\nselect a.ACCT_CANCEL_REQUEST_ID, CUSTOMER_UUID, b.id as user_id\nfrom etl.account_cancellation_request a\njoin WEB_DB._user b on a.CUSTOMER_UUID = b.UUID\nwhere a.status = 'ready for processing'\nand a.source_name not in ('Rotated Accounts','Surplus Accounts')\nunion\nselect a.ACCT_CANCEL_REQUEST_ID, d.UUID, c.JOINT_ACCOUNT_SECONDARY_USER_ID as user_id\nfrom etl.account_cancellation_request a\njoin WEB_DB._USER b on a.CUSTOMER_UUID = b.UUID\njoin bi.DT_ACCOUNTS c on b.ID = c.USER_ID\njoin WEB_DB._user d on c.JOINT_ACCOUNT_SECONDARY_USER_ID = d.id\nwhere a.status = 'ready for processing'\nand a.source_name not in ('Rotated Accounts','Surplus Accounts')\nand c.ACCOUNT_TYPE = 'Checking';\n\n\n\n--list of PRN's to cancel\ndrop table if exists tmp_prn_list;\ncreate temp table tmp_prn_list\n(\n \tprn_id int identity,\n    ACCT_CANCEL_REQUEST_ID bigint,\n    prn varchar(50),\n    order_by smallint\n);\n\n--non-rotated/non-account creation bug PRN's\n\ninsert into tmp_prn_list\n(acct_cancel_request_id, prn, order_by)\n--account prn's\nselect distinct c.ACCT_CANCEL_REQUEST_ID, a.prn::varchar(50) as prn, 2 as order_by \nfrom rdl.PRN_DEPOSITORY_REFERENCE a\njoin tmp_customer_list c on a.USER_ID = c.user_id\nwhere a.prn_status not ilike '%cancel%'\nand a.prn_status not ilike '%Charged%Off%';\n\n--card prn's \ninsert into tmp_prn_list\n(acct_cancel_request_id, prn, order_by)\nselect distinct c.ACCT_CANCEL_REQUEST_ID, a.card_prn::varchar(50) as prn, 1 as order_by\nfrom rdl.CARD_REFERENCE a\njoin tmp_customer_list c on a.USER_ID = c.user_id\nleft join tmp_prn_list p on a.card_prn = p.PRN\nwhere a.card_status not in ('Canceled without Refund','Charged Off')\nand p.PRN is null\nand a.card_prn != a.spend_prn;\n--excluding 'Acct Mgmt Cancel After Spend Charge-off' queries\n--they will have a separate inert below from this table\n--and c.ACCT_CANCEL_REQUEST_ID not in (\n--  \tselect ACCT_CANCEL_REQUEST_ID\n--    from etl.ACCOUNT_CANCELLATION_REQUEST\n--    where source_name = 'Acct Mgmt Cancel After Spend Charge-off'\n--  );\n\n/*\n--card prn's (for Acct Mgmt Cancel After Spend Charge-off)\ninsert into tmp_prn_list\n(acct_cancel_request_id, prn, order_by)\nselect distinct c.ACCT_CANCEL_REQUEST_ID, a.card_prn::varchar(50) as prn, 1 as order_by\nfrom rdl.CARD_REFERENCE a\njoin tmp_customer_list c on a.USER_ID = c.user_id\nleft join tmp_prn_list p on a.card_prn = p.PRN\nwhere a.card_status not ilike '%cancel%'\nand a.card_status not ilike '%Charged%Off%'\nand p.PRN is null\nand (a.type_of_card in ('Virtual Card','Savings')\n     or a.card_prn != a.spend_prn)\n--only for 'Acct Mgmt Cancel After Spend Charge-off' queries\nand c.ACCT_CANCEL_REQUEST_ID in (\n  \tselect ACCT_CANCEL_REQUEST_ID\n    from etl.ACCOUNT_CANCELLATION_REQUEST\n    where source_name = 'Acct Mgmt Cancel After Spend Charge-off'\n  );  \n*/  \n\n--new virtual cards not yet in Galileo's card file\ninsert into tmp_prn_list\n(acct_cancel_request_id, prn, order_by)\nselect distinct c.ACCT_CANCEL_REQUEST_ID, a.PRN::varchar(50), 1 as order_by\nfrom BANK_DB.DEBIT_CARD a\njoin tmp_customer_list c on a.USER_ID = c.user_id\nleft join tmp_prn_list p on a.PRN = p.PRN\nleft join rdl.card_reference cr on a.prn::varchar(50) = cr.card_prn\nwhere a.CURRENT_STATUS not in ('canceled_without_refund')\nand p.PRN is null\nand cr.card_prn is null\nand a.virtual = true;\n\n--for brand new customers, check AOG_DB.GALILEO_ACCOUNTS\n--in case their PRN's are not available in other sources\n--(they won't be in the customer master file yet)\ninsert into tmp_prn_list\n(acct_cancel_request_id, prn, order_by)\nselect distinct c.ACCT_CANCEL_REQUEST_ID, a.PMT_REF_NO::varchar(50) as prn, 2 as orderby\nfrom AOG_DB.GALILEO_ACCOUNTS a\njoin tmp_customer_list c on a.ASPIRATION_USER_ID = c.user_id\nleft join tmp_prn_list p on a.PMT_REF_NO = p.PRN\nwhere p.PRN is null\n--not needed for 'Acct Mgmt Cancel After Spend Charge-off' queries\nand c.ACCT_CANCEL_REQUEST_ID not in (\n  \tselect ACCT_CANCEL_REQUEST_ID\n    from etl.ACCOUNT_CANCELLATION_REQUEST\n    where source_name = 'Acct Mgmt Cancel After Spend Charge-off'\n  )\n;\n\n--insert for rotated accounts\ninsert into tmp_prn_list\n(acct_cancel_request_id, prn, order_by)\nwith rotated as (\n    select distinct\n           a.ACCT_CANCEL_REQUEST_ID,\n           b.PRN::varchar(20) as prn\n    from etl.ACCOUNT_CANCELLATION_REQUEST a\n    join rdl.PRN_DEPOSITORY_REFERENCE b on a.CUSTOMER_UUID = b.UUID\n    where b.REPORT_CATEGORY = 'Surplus Accounts from Account Rotation'\n    and b.PRN_STATUS in ('Active','Suspended')\n    and b.PRN != b.CURRENT_PRN\n    --double check that the PRN is not currently being used\n    and b.PRN::varchar(30) not in (select ACCOUNT_NUMBER\n                                   from WEB_DB.USER_PAYMENT_ACCOUNT\n                                   where NAME ilike 'Aspiration%'\n                                   and ACCOUNT_NUMBER is not null)\n    and b.IS_JOINT_ACCOUNT = false\n    and b.IS_GALILEO_ACCOUNT_ID_SHARED = false\n    and b.CUST_MASTER_BALANCE = 0\n    and a.SOURCE_NAME in ('Rotated Accounts')\n    and a.STATUS = 'ready for processing'\n)\nselect\n    r.ACCT_CANCEL_REQUEST_ID,\n    cr.CARD_PRN,1\nfrom rdl.CARD_REFERENCE cr\njoin rotated r on cr.SPEND_PRN = r.PRN\nwhere cr.CARD_STATUS not ilike 'Canceled without Refund'\nunion\nselect\n    ACCT_CANCEL_REQUEST_ID,\n    PRN,1\nfrom rotated;\n\n--insert for Surplus Accounts\ninsert into tmp_prn_list\n(acct_cancel_request_id, prn, order_by)\nwith accounts as (\n    select distinct\n           a.ACCT_CANCEL_REQUEST_ID,\n           b.PRN::varchar(20) as prn\n    from etl.ACCOUNT_CANCELLATION_REQUEST a\n    join rdl.PRN_DEPOSITORY_REFERENCE b on a.CUSTOMER_UUID = b.UUID\n    where b.REPORT_CATEGORY = 'Surplus Accounts from Unknown Cause'\n    and b.PRN_STATUS in ('Active','Suspended')\n    and b.PRN != b.CURRENT_PRN\n    --double check that the PRN is not currently being used\n    and b.PRN::varchar(30) not in (select ACCOUNT_NUMBER\n                                   from WEB_DB.USER_PAYMENT_ACCOUNT\n                                   where NAME ilike 'Aspiration%'\n                                   and ACCOUNT_NUMBER is not null)\n    and b.IS_JOINT_ACCOUNT = false\n    and b.IS_GALILEO_ACCOUNT_ID_SHARED = false\n    and b.CUST_MASTER_BALANCE = 0\n    and b.MOST_RECENT_TRANSACTION_DATE is null\n    and a.SOURCE_NAME in ('Surplus Accounts')\n    and a.STATUS = 'ready for processing'\n)\nselect\n    r.ACCT_CANCEL_REQUEST_ID,\n    cr.CARD_PRN,1\nfrom rdl.CARD_REFERENCE cr\njoin accounts r on cr.SPEND_PRN = r.PRN\nwhere cr.CARD_STATUS not ilike 'Canceled without Refund'\nunion\nselect\n    ACCT_CANCEL_REQUEST_ID,\n    PRN,1\nfrom accounts;\n\n--insert prns to be processed into rdl.galileo_account_cancellation \ninsert into rdl.galileo_account_cancellation\n(\n    acct_cancel_request_id,\n    BATCH_ID,\n    PRN,\n    CANCEL_DATE,\n    STATUS,\n    GALILEO_FILE_NAME,\n    GALILEO_FILE_RECORD_NUMBER,\n    CREATED_AT,\n    UPDATED_AT\n)\nwith cte_record_num as (\n  select prn_id,\n         lpad(row_number() over (order by order_by desc nulls last)::varchar,6,'0') as galileo_file_record_number\n  from tmp_prn_list\n)\nselect\n    acct_cancel_request_id,\n    '${batch_id}',\n    s.PRN,\n    current_timestamp as CANCEL_DATE,\n    'ready for processing' as status,\n    '${file_name}' as galileo_file_name,\n    rn.galileo_file_record_number,\n    current_timestamp,\n    current_timestamp\nfrom tmp_prn_list s\nleft join cte_record_num rn on s.prn_id = rn.prn_id;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2967905":{"id":2967905,"sourceID":2967944,"targetID":2967940},"2967908":{"id":2967908,"sourceID":2967888,"targetID":2967894},"2967909":{"id":2967909,"sourceID":2967947,"targetID":2967943},"2967910":{"id":2967910,"sourceID":2967941,"targetID":2967946},"2967911":{"id":2967911,"sourceID":2967890,"targetID":2967950},"2967912":{"id":2967912,"sourceID":2967949,"targetID":2967948},"2967913":{"id":2967913,"sourceID":2967937,"targetID":2967936},"2967914":{"id":2967914,"sourceID":2967943,"targetID":2967941},"2967915":{"id":2967915,"sourceID":2967936,"targetID":2967949},"2967916":{"id":2967916,"sourceID":2967891,"targetID":2967888},"2967917":{"id":2967917,"sourceID":2967889,"targetID":2967891},"2967918":{"id":2967918,"sourceID":2967894,"targetID":2967937},"2967919":{"id":2967919,"sourceID":2967950,"targetID":2967945},"2967938":{"id":2967938,"sourceID":2967940,"targetID":2967947},"2967939":{"id":2967939,"sourceID":2967945,"targetID":2967944}},"failureConnectors":{},"unconditionalConnectors":{"2967906":{"id":2967906,"sourceID":2967895,"targetID":2967889}},"trueConnectors":{"2967904":{"id":2967904,"sourceID":2967948,"targetID":2967890}},"falseConnectors":{"2967907":{"id":2967907,"sourceID":2967948,"targetID":2967942}},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"batch_id":{"definition":{"name":"batch_id","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"file_name":{"definition":{"name":"file_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"bchanges_584_20220721_ac143852.txt"},"records_to_process":{"definition":{"name":"records_to_process","type":"DECIMAL","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"s3_bucket":{"definition":{"name":"s3_bucket","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"aspiration-datateam"},"s3_path":{"definition":{"name":"s3_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"s3://aspiration-datateam/account-cancellations/galileo-files/to-galileo"}},"grids":{}},"info":{"name":"Account Cancel Export","description":"","type":"ORCHESTRATION","tag":"0f956001-a0c9-49b3-ac87-4beae21afa2d"}}