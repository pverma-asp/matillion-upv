{"job":{"components":{"2959801":{"id":2959801,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-299,"y":32,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python Script 0"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\nimport json\nimport urllib.parse\nimport boto3\nimport time\n\nprint('Loading function')\n\ndef lambda_handler(event, context):\n\n    s3_client = boto3.client('s3')\n    textract_client = boto3.client('textract')\n\n    bucket = event['Records'][0]['s3']['bucket']['name']\n    key = urllib.parse.unquote_plus(event['Records'][0]['s3']['object']['key'], encoding='utf-8')\n\n    print(bucket)\n    print(key)\n\n    updatedFile = textract_client.start_document_text_detection(\n    DocumentLocation={'S3Object': {'Bucket': bucket,'Name': key}})\n    jobId = updatedFile[\"JobId\"]\n\n    if(isJobComplete(jobId)):\n        response = getJobResults(jobId)\n\n    text = \"\"\n\n    for resultPage in response:\n        for item in resultPage[\"Blocks\"]:\n            if item[\"BlockType\"] == \"LINE\":\n                str = item[\"Text\"]\n                text += item[\"Text\"] + \" \"\n\n    print(text)\n    encoded_text = text.encode(\"utf-8\")\n    file_name = key[:-4] + \".txt\"\n\n    s3 = boto3.resource(\"s3\")\n    s3.Bucket(bucket).put_object(Key=file_name, Body=encoded_text)\n\n    return {\n        'statusCode': 200,\n        'body': json.dumps(response)\n    }\n\ndef isJobComplete(jobId):\n    time.sleep(1)\n    client = boto3.client('textract')\n    response = client.get_document_text_detection(JobId=jobId)\n    status = response[\"JobStatus\"]\n    print(\"Job status: {}\".format(status))\n\n    while(status == \"IN_PROGRESS\"):\n        time.sleep(1)\n        response = client.get_document_text_detection(JobId=jobId)\n        status = response[\"JobStatus\"]\n        print(\"Job status: {}\".format(status))\n\n    return status\n\ndef getJobResults(jobId):\n\n    pages = []\n    time.sleep(0.1)\n\n    client = boto3.client('textract')\n    response = client.get_document_text_detection(JobId=jobId)\n\n    pages.append(response)\n    print(\"Resultset page recieved: {}\".format(len(pages)))\n    nextToken = None\n    if('NextToken' in response):\n        nextToken = response['NextToken']\n\n    while(nextToken):\n        time.sleep(0.1)\n\n        response = client.get_document_text_detection(JobId=jobId, NextToken=nextToken)\n\n        pages.append(response)\n        print(\"Resultset page recieved: {}\".format(len(pages)))\n        nextToken = None\n        if('NextToken' in response):\n            nextToken = response['NextToken']\n\n    return pages"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959803":{"id":2959803,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-16,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2959802],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959806":{"id":2959806,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1214167174,"x":128,"y":0,"width":32,"height":32,"inputConnectorIDs":[2959802],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of API Query 0"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Basic"}}}},"visible":true},"6":{"slot":6,"name":"Data Source","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"ip-ranges"}}}},"visible":true},"7":{"slot":7,"name":"Data Selection","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"ipv4_cidr"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"aws_region"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"service"}}}},"visible":true},"8":{"slot":8,"name":"Data Source Filter","elements":{},"visible":true},"9":{"slot":9,"name":"Combine Filters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"10":{"slot":10,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT ..."}}}},"visible":false},"11":{"slot":11,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":true},"12":{"slot":12,"name":"Connection Options","elements":{},"visible":true},"14":{"slot":14,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"15":{"slot":15,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"STG_API_DATA"}}}},"visible":true},"17":{"slot":17,"name":"S3 Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"aspiration-etl-staging"}}}},"visible":true},"20":{"slot":20,"name":"Data Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"REST"}}}},"visible":false},"21":{"slot":21,"name":"Primary Key","elements":{},"visible":true},"100":{"slot":100,"name":"Profile","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"TymeShift"}}}},"visible":true},"1001":{"slot":1001,"name":"","elements":{},"visible":false},"1013":{"slot":1013,"name":"Auto Debug","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}}},"visible":true},"1014":{"slot":1014,"name":"Debug Level","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"3"}}}},"visible":false},"40000":{"slot":40000,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"40001":{"slot":40001,"name":"KMS Key ID","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{},"unconditionalConnectors":{"2959802":{"id":2959802,"sourceID":2959803,"targetID":2959806}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{},"grids":{}},"info":{"name":"test_pdf","description":null,"type":"ORCHESTRATION","tag":"25965679-f7d6-4ea3-aa99-ea647c667116"}}