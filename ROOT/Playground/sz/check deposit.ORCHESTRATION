{"job":{"components":{"2958164":{"id":2958164,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-208,"y":128,"width":32,"height":32,"inputConnectorIDs":[2958167],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"check return"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists etl.check_return_rdi;\ncreate table etl.check_return_rdi(\n\"id\" int,\n\"Check Return Date\" date,\n\"Type\" varchar(200),\n\"Customer Name\" varchar(200),\n\"Email\" varchar(200),\n\"Trans ID\" varchar(200),\n\"Date Deposited\" varchar(200),\n\"Check Number\" varchar(200),\n\"Dep Acct#\" bigint,\n\"Dep Acct Type\" varchar(200),\n\"Debit Acct\" varchar(200),\n\"Deb Acct Type\" varchar(200),\n\"Debit TC\" varchar(200),\n\"Fee Acct\" varchar(200),\n\"Fee Acct Type\" varchar(200),\n\"Dep Date\" varchar(200),\n\"Dep Item Number\" varchar(200),\n\"Return Reason\" varchar(200),\n\"Orig Item Num\" varchar(200),\n\"Return Item Number\" varchar(200),\n\"Acct Number\" varchar(200),\n\"RT\" varchar(200),\n\"Amount\" varchar(200),\n\"Occur\" varchar(200),\n\"Fee\" varchar(200),\n\"Endorse\" varchar(200),\n\"BOFD Over\" varchar(200),\n\"IRD\" varchar(200),\n\"Notice\" varchar(200),\n\"Spec Hand\" varchar(200),\n\"Source\" varchar(200),\n\"POD Stat\" varchar(200),\n\"POD Run\" varchar(200),\n\"Debit Placed\" varchar(200),\n\"Notes\" varchar(4000),\n\"Agent\" varchar(200),\n\"New Account?\" varchar(200),\n\"Own Check?\" varchar(200),\n\"Expected Loss\" varchar(200),\n\"Messaged\" varchar(200),\n\"Daily Total\" varchar(200),\n\"Daily Expected Loss\" varchar(200),\n\"Updated Loss\" varchar(200)\n)\n;\n\n\ncopy etl.check_return_rdi\nfrom 's3://aspiration-datateam/dump/szhang/RDI.csv'\niam_role 'arn:aws:iam::332894900161:role/RedshiftClusterRole'\nDATEFORMAT AS 'MM/DD/YY'\ncsv\nIGNOREHEADER 1\nACCEPTINVCHARS\n;\n\nupdate etl.check_return_rdi\nset \"check return date\" = return_date\nfrom etl.check_return_rdi c\n    join (\n        select id,\n               \"check return date\",\n               MAX(\"check return date\") OVER (ORDER BY id ASC ROWS UNBOUNDED PRECEDING) AS return_date\n        from etl.check_return_rdi\n    ) a on a.id = c.id\n;\n\n\ndrop table if exists rdl.check_return_rdi;\ncreate table rdl.check_return_rdi\nas\nselect \"check return date\",\n        type,\n        \"customer name\",\n       email,\n       \"check number\",\n       \"dep acct#\" as \"Depository Account Number\",\n       \"return reason\",\n       amount\nfrom etl.check_return_rdi\n;\n\nupdate rdl.check_return_rdi\nset amount = replace(amount, ',', '')\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2958165":{"id":2958165,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-205,"y":-16,"width":32,"height":32,"inputConnectorIDs":[2958166],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"check deposit"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists rdl.cma_check_data;\ncreate table rdl.cma_check_data\nas\nselect\nSubmissionDate as \"Check deposit date\",\nEnteredAmount as \"Check amount\",\nunique_account_id as \"unique account id\",\nOperatorActionDate as \"Check decisioned date\",\nFirstName || ' ' || LastName as \"reviewed/decisioned person\",\nStatus as \"check decision\",\nstatus_id as \"status id\",\ndetail_status as \"detail status\",\nprovider_message as \"description\",\nCheckNumber as \"check number\",\nnull as \"check returned\",\nnull as \"check returned reason\",\nmemo as \"check memo\",\nx.*\n\nfrom (\n         select d.status_id,\n                d.detail_status,\n                d.provider_message,\n                d.memo,\n                d.check_number,\n                acc.unique_account_id,\n\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'AccountNickName', true)\n                    else json_extract_path_text(event, 'AccountNickName', true) end      as AccountNickName,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'CheckAccountNumber', true)\n                    else json_extract_path_text(event, 'CheckAccountNumber', true) end   as CheckAccountNumber,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'CheckNumber', true)\n                    else json_extract_path_text(event, 'CheckNumber', true) end          as CheckNumber,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'CheckRoutingNumber', true)\n                    else json_extract_path_text(event, 'CheckRoutingNumber', true) end   as CheckRoutingNumber,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'EnteredAmount', true)\n                    else json_extract_path_text(event, 'EnteredAmount', true) end        as EnteredAmount,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'FirstName', true)\n                    else json_extract_path_text(event, 'FirstName', true) end            as FirstName,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'FundingType', true)\n                    else json_extract_path_text(event, 'FundingType', true) end          as FundingType,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'LastName', true)\n                    else json_extract_path_text(event, 'LastName', true) end             as LastName,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'Micr', true)\n                    else json_extract_path_text(event, 'Micr', true) end                 as Micr,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'OperatorActionDate', true)\n                    else json_extract_path_text(event, 'OperatorActionDate', true) end   as OperatorActionDate,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'PartnerTransactionId', true)\n                    else json_extract_path_text(event, 'PartnerTransactionId', true) end as PartnerTransactionId,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'RecognizedAmount', true)\n                    else json_extract_path_text(event, 'RecognizedAmount', true) end     as RecognizedAmount,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'Status', true)\n                    else json_extract_path_text(event, 'Status', true) end               as Status,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'SubmissionDate', true)\n                    else json_extract_path_text(event, 'SubmissionDate', true) end       as SubmissionDate,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'TransactionId', true)\n                    else json_extract_path_text(event, 'TransactionId', true) end        as TransactionId,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'UserAccountNumber', true)\n                    else json_extract_path_text(event, 'UserAccountNumber', true) end    as UserAccountNumber,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'UserName', true)\n                    else json_extract_path_text(event, 'UserName', true) end             as UserName,\n                case\n                    when audit_type = 2 then json_extract_path_text(event, 'Transaction', 'UserRoutingNumber', true)\n                    else json_extract_path_text(event, 'UserRoutingNumber', true) end    as UserRoutingNumber,\n                json_extract_path_text(event, 'BizRuleEngineMessage', true)              as BizRuleEngineMessage,\n                json_extract_path_text(event, 'ApprovedAmount', true)                    as ApprovedAmount,\n                json_extract_path_text(event, 'Transaction', 'ModifiedDate', true)       as ModifiedDate\n\n         from check_db.check_deposit d\n            join check_db.audit a on d.id = a.deposit_id\n            join bi.dt_accounts acc on d.depository_id = acc.galileo_id\n                                    or d.depository_id = acc.radius_id\n         --where d.id = 107021\n     ) as x\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2958170":{"id":2958170,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-448,"y":-16,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2958166,2958167],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{},"unconditionalConnectors":{"2958166":{"id":2958166,"sourceID":2958170,"targetID":2958165},"2958167":{"id":2958167,"sourceID":2958170,"targetID":2958164}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{},"grids":{}},"info":{"name":"check deposit","description":null,"type":"ORCHESTRATION","tag":"27744c69-327e-4144-89a5-c24e0c388829"}}