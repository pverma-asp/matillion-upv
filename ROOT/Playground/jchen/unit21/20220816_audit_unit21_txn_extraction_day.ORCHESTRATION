{"job":{"components":{"2959352":{"id":2959352,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2959405],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959354":{"id":2959354,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":0,"y":240,"width":32,"height":32,"inputConnectorIDs":[2959351],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract txns"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\ncreate or replace file format UNIT21_CSV_FORMAT \n  type = 'CSV'\n  comment = 'CSV format for unit21 export files'\n  FIELD_OPTIONALLY_ENCLOSED_BY = '\"' \n  ESCAPE_UNENCLOSED_FIELD = NONE\n;\n\n\ncopy into @public.DATATEAM/dump/jchen/unit21/20220816_audit_unit21/${instrument}_${current_year}${current_month}${current_day}.csv\n-- s3://aspiration-datateam/dump/jchen/unit21/20220816_audit_unit21/\nfrom (\n\nselect\n    'p' || pt.id as event_id,\n--     gpt.prn,\n    pt.POST_DATE as date_of_transaction,\n    pt.TRANSACTION_DATE as transaction_timestamp,\n    u.UUID as customer_id,\n    upa.ACCOUNT_NUMBER as account_number,\n    up.FIRST_NAME || ' ' || up.LAST_NAME as customer_name,\n    upsin.TAX_IDENTIFICATION_NUMBER as customer_tin,\n    'individual' as customer_type,\n    case when pt.AMOUNT < 0 then 'Debit' else 'Credit' end as Credit_Debit,\n    ittm.INSTRUMENT as transaction_type,\n    ittm.ASPIRATION_TRANSACTION_TYPE as transaction_subtype,\n    pt.DESCRIPTION,\n    pt.AMOUNT::numeric(30,2) as transaction_amount,\n    0 as cash_in_amount,\n    0 as cash_out_amount,\n    case when ittm.INSTRUMENT='ach' and pt.AMOUNT > 0 then   pt.amount::numeric(30,2) else 0 end as ach_in_amount,\n    case when ittm.INSTRUMENT='ach' and pt.AMOUNT < 0 then  -pt.amount::numeric(30,2) else 0 end as ach_out_amount,\n    case when ittm.INSTRUMENT='wire' and pt.AMOUNT > 0 then  pt.amount::numeric(30,2) else 0 end as wire_in_amount,\n    case when ittm.INSTRUMENT='wire' and pt.AMOUNT < 0 then -pt.amount::numeric(30,2) else 0 end as wire_out_amount,\n    '' as serial_number,\n    0 as cash_purchase_amount,\n    'N' as international,\n    'USA' as country\nfrom WEB_DB.GALILEO_POSTED_TRANSACTION gpt\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\njoin WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\njoin WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\n--         join WEB_DB.USER_PAYMENT_ACCOUNT upa on d.ID = upa.DEPOSITORY_ID -- duplicates\njoin WEB_DB.USER_PAYMENT_ACCOUNT upa on gpt.PRN::string=upa.ACCOUNT_NUMBER::string\njoin WEB_DB._USER u on ua.USER_ID=u.id\njoin WEB_DB.USER_PROFILE up on ua.USER_ID=up.USER_ID\njoin pci.USER_PROFILE upsin on ua.USER_ID=upsin.USER_ID\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\njoin unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n-- join unit21.instrument_mapping im on im.INSTRUMENT_TYPE=ittm.INSTRUMENT and im.user_id=ua.USER_ID\nwhere 1=1\n--   and ittm.INSTRUMENT='wire'\n  and ittm.INSTRUMENT='${instrument}'\n  and pt.POST_DATE='${current_year}-${current_month}-${current_day}'\n\n)\nfile_format = (format_name = UNIT21_CSV_FORMAT, compression = NONE)\nSINGLE=true\nHEADER=TRUE\nmax_file_size=4900000000\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959355":{"id":2959355,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":0,"y":128,"width":32,"height":32,"inputConnectorIDs":[2959405],"outputSuccessConnectorIDs":[2959351],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"check variables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nfrom datetime import datetime\nfrom datetime import timedelta\nfrom dateutil.relativedelta import relativedelta\nfrom pytz import timezone\n\n# print 'current time in PST: ', datetime.now(timezone('US/Pacific'))\n\n# today=datetime.now(timezone('US/Pacific')).strftime(\"%Y-%m-%d\")\n# print 'today: ', today\n\nprint '${current_year}-${current_month}-${current_day}'\nprint '${instrument}'\n\n#file_date='${current_year}${current_month}${current_day}'\n#context.updateVariable('file_date', file_date)\n#print 'file_date', file_date\n\n#context.updateVariable('file_date', file_date)\n\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2959351":{"id":2959351,"sourceID":2959355,"targetID":2959354}},"failureConnectors":{},"unconditionalConnectors":{"2959405":{"id":2959405,"sourceID":2959352,"targetID":2959355}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"current_day":{"definition":{"name":"current_day","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"01"},"current_month":{"definition":{"name":"current_month","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"06"},"current_year":{"definition":{"name":"current_year","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"2022"},"instrument":{"definition":{"name":"instrument","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"wire"}},"grids":{}},"info":{"name":"20220816_audit_unit21_txn_extraction_day","description":"","type":"ORCHESTRATION","tag":"0828ff7c-b3bf-47a5-9c2b-81a8f3415e8e"}}