{"job":{"components":{"2959552":{"id":2959552,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-272,"y":224,"width":32,"height":32,"inputConnectorIDs":[2959575],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract charge back txns 20211214"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\ncreate or replace file format FEEDZAI_CSV_FORMAT \n  type = 'CSV'\n  comment = 'CSV format for feedzai export files'\n  FIELD_OPTIONALLY_ENCLOSED_BY = '\"' \n  ESCAPE_UNENCLOSED_FIELD = NONE\n;\n\n\n-- copy into @public.DATATEAM/dump/jchen/feedzai_poc/historical_transactions/charge_back_txn_20211214.csv\ncopy into @public.FEEDZAI_DATA_POC/charge_back_txn_20211214.csv\nfrom (\n\nselect\n    GALILEO_REPORT_ROW_NUMBER,\n    DEBIT_CARD_TRANSACTION_ID,\n    MATCH_METHOD,\n    case\n        when rank is null then ''\n        else rank::string\n    end as rank\nfrom FEEDZAI.CHARGEBACK_TRANSACTIONS_GALILEO_20211214\nwhere 1=1\n\n)\nfile_format = (format_name = FEEDZAI_CSV_FORMAT, compression = NONE)\nSINGLE=true\nHEADER=TRUE\nmax_file_size=4900000000\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959553":{"id":2959553,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-368,"y":272,"width":32,"height":32,"inputConnectorIDs":[2959569],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"deprecated - create_charge_back_transaction_table_john"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.chargeback_transactions_john_20211214 as\nwith match_count as (\n    select chargeback_transaction_id,\n           count(1) as number_of_matchs\n    from UDSA.FZ_CHARGEBACK john_cb\n    group by chargeback_transaction_id\n)\n, john_chargebacks as (\n    select\n        john_cb.*,\n        match_count.number_of_matchs\n    from UDSA.FZ_CHARGEBACK john_cb\n    join match_count on john_cb.chargeback_transaction_id=match_count.chargeback_transaction_id\n)\nselect\n--     john_cb.*,\n    gpt_cb.ID as charge_back_transaction_id,\n    gpt_dc.ID as debit_card_transaction_id,\n    'match_with_amount' as match_method,\n--     ddt_cb.AMOUNT,\n    john_cb.chargeback_rank as rank,\n    john_cb.number_of_matchs\nfrom john_chargebacks john_cb\n-- original transaction\njoin bi.DT_DEPOSITORY_TRANSACTIONS ddt_dc on ddt_dc.UNIQUE_TRANSACTION_ID=john_cb.ORIGINAL_TRANSACTION_ID\njoin WEB_DB.GALILEO_POSTED_TRANSACTION gpt_dc on ddt_dc.POSTED_TRANSACTION_ID = gpt_dc.POSTED_TRANSACTION_ID\n-- chargeback transaction\njoin bi.DT_DEPOSITORY_TRANSACTIONS ddt_cb on ddt_cb.UNIQUE_TRANSACTION_ID=john_cb.CHARGEBACK_TRANSACTION_ID\njoin WEB_DB.GALILEO_POSTED_TRANSACTION gpt_cb on ddt_cb.POSTED_TRANSACTION_ID = gpt_cb.POSTED_TRANSACTION_ID\njoin unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=ddt_dc.TRANSACTION_TYPE\nwhere 1=1\n  and ittm.INSTRUMENT='debit_card'\n  and ddt_dc.TRANSACTION_DATE between '2020-11-01' and '2021-12-01'\n--   and ddt_dc.UNIQUE_ACCOUNT_ID='g1171737'\n-- order by chargeback_transaction_id, chargeback_rank\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959554":{"id":2959554,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1168,"y":448,"width":32,"height":32,"inputConnectorIDs":[2959568],"outputSuccessConnectorIDs":[2959650],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create historical txns table 20211217"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.historical_transaction_extract_20211217 as\n\nwith prn_virtual_raw as (\n    select\n        PRN,\n        VIRTUAL,\n        row_number() over (partition by prn order by CREATED_AT asc ) as rn\n    from BANK_DB.DEBIT_CARD\n    where 1=1\n      and USER_ID != 0\n)\n, prn_virtual as (\n    select prn,\n           VIRTUAL\n    from prn_virtual_raw\n    where 1 = 1\n      and rn = 1\n--     limit 5\n)\nselect\n    ua.user_id,\n    gpt.prn,\n    gpt.ID as transaction_id,\n    gpt.MERCHANT_COUNTRY_CODE as acceptor_country_code,\n    gpt.MERCHANT_NUMBER as acceptor_id,\n    case\n        when gpt.ID=56010010 then 'REMA .RUM             Torp          NOR'\n        else gpt.MERCHANT_NAME\n    end as acceptor_name,\n--     'N/A' as account_pw_change_flag, -- TO investigate\n    ifnull(replace(pending.raw_body:response_code, '\"', ''), '') as action_code,\n    gpt.TRANSACTION_AMOUNT as amount,\n    gpt.AUTHORIZATION_CODE as auth_type,\n    pt.RUNNING_BALANCE::numeric(20,2) as card_available_balance,\n    case\n        when pv.VIRTUAL=TRUE then 'Virtual'\n        when pv.VIRTUAL=False then 'Physical'\n        else NULL\n    end as card_category,\n    cids_hash.UUID as card_pan,\n    gpt.TRANSACTION_CURRENCY_CODE as currency_code,\n--     NULL as customer_email_change_flag,             -- TODO, need some work\n    u.UUID as customer_id,\n--     NULL as customer_phone_change_flag,             -- TODO, need some work\n    pt.TRANSACTION_DATE as event_occurred_at,\n--     NULL as last_sca_at,                            -- probably can do, need some work\n    gpt.MERCHANT_CATEGORY_CODE as mcc,\n--     NULL as pos_card_read_method,                   -- need investigation on event_db\n--     NULL as pos_cardholder_ver_method,              -- need investigation on event_db\n--     'N/A' as terminal_id,                           -- need investigation on event_db\n    gl.DESCRIPTION as purchase_type,\n    gpt.TRANSACTION_AMOUNT_SIGN,\n    pwc.TRANSACTION_DATE is not null as account_pw_change_flag,\n    ec.TRANSACTION_DATE is not null as customer_email_change_flag,\n    pc.TRANSACTION_DATE is not null as customer_phone_change_flag,\n    logins.LOGIN_TIME as last_sca_at,\n    replace(pending.RAW_BODY:type, '\"', '') as TXN_TYPE,\n    replace(pending.RAW_BODY:act_type, '\"', '') as TXN_ACT_TYPE\nfrom WEB_DB.GALILEO_POSTED_TRANSACTION gpt\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\njoin WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\njoin WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\njoin WEB_DB._USER u on ua.USER_ID=u.ID\njoin WEB_DB.USER_PROFILE up on ua.USER_ID=up.USER_ID\njoin WEB_DB.ADDRESS addr on up.ADDRESS_ID = addr.ID\njoin prn_virtual pv on pv.PRN=gpt.PRN\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\njoin FEEDZAI.CARD_DATA_ALL_DAYS cids on gpt.PRN=cids.prn and to_date(gpt.POST_DATE, 'MMDDYYYY')=cids.DATE\nleft join FEEDZAI.CARD_ID_HASH_TABLE cids_hash on gpt.CARD_ID=cids_hash.CARD_ID\nleft join FEEDZAI.GALILEO_PENDING_TRANSACTION_FEEDZAI_POC pending\n    on pending.TXN_ID=gpt.AUTHORIZATION_CODE\n   and pending.GALILEO_ACCOUNT_ID=gpt.GALILEO_ACCOUNT_ID\nleft join FEEDZAI.FIRST_TXN_AFTER_PASSWORD_CHANGES pwc on pwc.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.FIRST_TXN_AFTER_EMAIL_CHANGES ec on ec.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.FIRST_TXN_AFTER_PHONE_CHANGES pc on pc.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.LAST_LOGIN_TIME logins on logins.TRANSACTION_ID=gpt.ID\nwhere 1=1\n  and ittm.INSTRUMENT='debit_card'\n  and to_date(gpt.POST_DATE, 'MMDDYYYY') between '2020-11-01' and '2021-11-30'\n--   and date_trunc('day', to_date(gpt.POST_DATE, 'MMDDYYYY')) = '2021-11-01'\n--   and gpt.galileo_account_id='473327'\n--   and posted.AUTHORIZATION_CODE='12335486'\n--   and ua.USER_ID=2357211\n--   and ua.USER_ID=2826307\n--   and ua.USER_ID in (1628334, 958687, 2357211, 2826307, 2962500)\n-- limit 5\n  \n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959555":{"id":2959555,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1168,"y":336,"width":32,"height":32,"inputConnectorIDs":[2959644],"outputSuccessConnectorIDs":[2959568],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create historical txns table 20211215"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate table feedzai.historical_transaction_extract_20211215 as\n\nwith prn_virtual_raw as (\n    select\n        PRN,\n        VIRTUAL,\n        row_number() over (partition by prn order by CREATED_AT asc ) as rn\n    from BANK_DB.DEBIT_CARD\n    where 1=1\n      and USER_ID != 0\n)\n, prn_virtual as (\n    select prn,\n           VIRTUAL\n    from prn_virtual_raw\n    where 1 = 1\n      and rn = 1\n--     limit 5\n)\nselect\n    ua.user_id,\n    gpt.prn,\n    gpt.ID as transaction_id,\n    gpt.MERCHANT_COUNTRY_CODE as acceptor_country_code,\n    gpt.MERCHANT_NUMBER as acceptor_id,\n    gpt.MERCHANT_NAME as acceptor_name,\n--     'N/A' as account_pw_change_flag, -- TO investigate\n    ifnull(replace(pending.raw_body:response_code, '\"', ''), '') as action_code,\n    gpt.TRANSACTION_AMOUNT as amount,\n    gpt.AUTHORIZATION_CODE as auth_type,\n    pt.RUNNING_BALANCE::numeric(20,2) as card_available_balance,\n    case\n        when pv.VIRTUAL=TRUE then 'Virtual'\n        when pv.VIRTUAL=False then 'Physical'\n        else NULL\n    end as card_category,\n    cids_hash.UUID as card_pan,\n    gpt.TRANSACTION_CURRENCY_CODE as currency_code,\n--     NULL as customer_email_change_flag,             -- TODO, need some work\n    u.UUID as customer_id,\n--     NULL as customer_phone_change_flag,             -- TODO, need some work\n    pt.TRANSACTION_DATE as event_occurred_at,\n--     NULL as last_sca_at,                            -- probably can do, need some work\n    gpt.MERCHANT_CATEGORY_CODE as mcc,\n--     NULL as pos_card_read_method,                   -- need investigation on event_db\n--     NULL as pos_cardholder_ver_method,              -- need investigation on event_db\n--     'N/A' as terminal_id,                           -- need investigation on event_db\n    gl.DESCRIPTION as purchase_type,\n    gpt.TRANSACTION_AMOUNT_SIGN,\n    pwc.TRANSACTION_DATE is not null as account_pw_change_flag,\n    ec.TRANSACTION_DATE is not null as customer_email_change_flag,\n    pc.TRANSACTION_DATE is not null as customer_phone_change_flag,\n    logins.LOGIN_TIME as last_sca_at\nfrom WEB_DB.GALILEO_POSTED_TRANSACTION gpt\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\njoin WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\njoin WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\njoin WEB_DB._USER u on ua.USER_ID=u.ID\njoin WEB_DB.USER_PROFILE up on ua.USER_ID=up.USER_ID\njoin WEB_DB.ADDRESS addr on up.ADDRESS_ID = addr.ID\njoin prn_virtual pv on pv.PRN=gpt.PRN\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\njoin FEEDZAI.CARD_DATA_ALL_DAYS cids on gpt.PRN=cids.prn and to_date(gpt.POST_DATE, 'MMDDYYYY')=cids.DATE\nleft join FEEDZAI.CARD_ID_HASH_TABLE cids_hash on gpt.CARD_ID=cids_hash.CARD_ID\nleft join FEEDZAI.GALILEO_PENDING_TRANSACTION_FEEDZAI_POC pending\n    on pending.TXN_ID=gpt.AUTHORIZATION_CODE\n   and pending.GALILEO_ACCOUNT_ID=gpt.GALILEO_ACCOUNT_ID\nleft join FEEDZAI.FIRST_TXN_AFTER_PASSWORD_CHANGES pwc on pwc.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.FIRST_TXN_AFTER_EMAIL_CHANGES ec on ec.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.FIRST_TXN_AFTER_PHONE_CHANGES pc on pc.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.LAST_LOGIN_TIME logins on logins.TRANSACTION_ID=gpt.ID\nwhere 1=1\n  and ittm.INSTRUMENT='debit_card'\n  and to_date(gpt.POST_DATE, 'MMDDYYYY') between '2020-11-01' and '2021-11-30'\n--   and date_trunc('day', to_date(gpt.POST_DATE, 'MMDDYYYY')) = '2021-11-01'\n--   and gpt.galileo_account_id='473327'\n--   and posted.AUTHORIZATION_CODE='12335486'\n--   and ua.USER_ID=2357211\n--   and ua.USER_ID=2826307\n--   and ua.USER_ID in (1628334, 958687, 2357211, 2826307, 2962500)\n-- limit 5\n  \n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959556":{"id":2959556,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-176,"y":368,"width":32,"height":32,"inputConnectorIDs":[2959571],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"last_login_time"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.last_login_time as\nwith txns as (\n    select ua.USER_ID,\n           gpt.PRN,\n           gpt.ID as TRANSACTION_ID,\n           pt.TRANSACTION_DATE,\n           pt.AMOUNT\n    from WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n             join WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\n             join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n             join WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID = ua.ACCOUNT_ID\n             JOIN web_db.galileo_lookup gl\n                  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n             join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE = gl.DESCRIPTION\n    where 1 = 1\n      and ittm.INSTRUMENT = 'debit_card'\n      and pt.TRANSACTION_DATE >= '2020-06-01'\n--       and ua.USER_ID = 2357211\n--       and pt.TRANSACTION_DATE < '2021-06-01'\n--   and gpt.PRN='223109843688'\n--   and gpt.PRN='223109843704'\n--     order by pt.TRANSACTION_DATE asc\n)\n, login_raw as (\n    select ID as AUDIT_TRAIL_ID,\n           USER_ID,\n           DATE_CREATED,\n           AUDIT_TRAIL,\n           row_number() over (partition by USER_ID order by DATE_CREATED asc) as rn_email_changes\n    from WEB_DB.USER_AUDIT_TRAIL uat\n    where 1 = 1\n--       and uat.USER_ID = 2357211\n      and AUDIT_TRAIL='Logged In'\n      and uat.DATE_CREATED > '2020-06-01'\n)\n, login as (\n    select ecr1.*,\n           ifnull(ecr2.DATE_CREATED, '2025-01-01') as end_time\n    from login_raw ecr1\n             left join login_raw ecr2\n                       on ecr1.USER_ID = ecr2.USER_ID and ecr1.rn_email_changes = ecr2.rn_email_changes - 1\n--     order by ecr1.DATE_CREATED asc\n)\n, joined_data as (\n    select\n           txns.TRANSACTION_ID,\n           txns.TRANSACTION_DATE,\n           ec.USER_ID,\n           ec.AUDIT_TRAIL_ID,\n           ec.DATE_CREATED as login_time,\n           ec.AUDIT_TRAIL,\n           row_number() over (partition by TRANSACTION_ID order by ec.DATE_CREATED desc ) as rn\n    from login ec\n             join txns on txns.USER_ID = ec.USER_ID\n                      and txns.TRANSACTION_DATE >= ec.DATE_CREATED\n--                       and txns.TRANSACTION_DATE <  ec.end_time\n    where 1 = 1\n--   and txns.ID=55524553 -- first txn\n--   and txns.ID=65505633 -- second txn\n)\nselect\n    *\n--     AUDIT_TRAIL_ID,\n--     email_change_time,\n--     TRANSACTION_ID,\n--     TRANSACTION_DATE\nfrom joined_data\nwhere 1=1\n--   and TRANSACTION_ID=55524553\n--   and TRANSACTION_ID=65505633\n--   and TRANSACTION_ID=66033145\n--   and TRANSACTION_ID=66033145\n--   and TRANSACTION_ID=66030022\n--   and TRANSACTION_ID=80005719\n--   and TRANSACTION_ID=79989640\n--   and AUDIT_TRAIL_ID=119153774\n--   and AUDIT_TRAIL_ID=131527006\n--   and AUDIT_TRAIL_ID=141465263\n--   and USER_ID=2357211\n  and rn=1\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959557":{"id":2959557,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-368,"y":368,"width":32,"height":32,"inputConnectorIDs":[2959624],"outputSuccessConnectorIDs":[2959571],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"first_txn_after_password_changes"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.first_txn_after_password_changes as\nwith txns as (\n    select ua.USER_ID,\n           gpt.PRN,\n           gpt.ID as TRANSACTION_ID,\n           pt.TRANSACTION_DATE,\n           pt.AMOUNT\n    from WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n             join WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\n             join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n             join WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID = ua.ACCOUNT_ID\n             JOIN web_db.galileo_lookup gl\n                  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n             join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE = gl.DESCRIPTION\n    where 1 = 1\n      and ittm.INSTRUMENT = 'debit_card'\n      and pt.TRANSACTION_DATE >= '2020-06-01'\n--       and ua.USER_ID = 2357211\n--       and pt.TRANSACTION_DATE < '2021-06-01'\n--   and gpt.PRN='223109843688'\n--   and gpt.PRN='223109843704'\n--     order by pt.TRANSACTION_DATE asc\n)\n, password_changes_raw as (\n    select ID as AUDIT_TRAIL_ID,\n           USER_ID,\n           DATE_CREATED,\n           AUDIT_TRAIL,\n           row_number() over (partition by USER_ID order by DATE_CREATED asc) as rn_email_changes\n    from WEB_DB.USER_AUDIT_TRAIL uat\n    where 1 = 1\n--       and uat.USER_ID = 2357211\n      and AUDIT_TRAIL='Password was reset.'\n      and uat.DATE_CREATED > '2020-06-01'\n)\n, password_changes as (\n    select ecr1.*,\n           ifnull(ecr2.DATE_CREATED, '2025-01-01') as end_time\n    from password_changes_raw ecr1\n             left join password_changes_raw ecr2\n                       on ecr1.USER_ID = ecr2.USER_ID and ecr1.rn_email_changes = ecr2.rn_email_changes - 1\n--     order by ecr1.DATE_CREATED asc\n)\n, joined_data as (\n    select\n           ec.USER_ID,\n           ec.AUDIT_TRAIL_ID,\n           ec.DATE_CREATED as email_change_time,\n           ec.AUDIT_TRAIL,\n           txns.TRANSACTION_ID,\n           txns.TRANSACTION_DATE,\n           row_number() over (partition by AUDIT_TRAIL_ID order by txns.TRANSACTION_DATE asc ) as rn\n    from password_changes ec\n             join txns on txns.USER_ID = ec.USER_ID\n                      and txns.TRANSACTION_DATE >= ec.DATE_CREATED\n                      and txns.TRANSACTION_DATE <  ec.end_time\n    where 1 = 1\n--   and txns.ID=55524553 -- first txn\n--   and txns.ID=65505633 -- second txn\n)\nselect\n    *\n--     AUDIT_TRAIL_ID,\n--     email_change_time,\n--     TRANSACTION_ID,\n--     TRANSACTION_DATE\nfrom joined_data\nwhere 1=1\n--   and AUDIT_TRAIL_ID=119153774\n--   and AUDIT_TRAIL_ID=131527006\n--   and AUDIT_TRAIL_ID=141465263\n--   and USER_ID=2826307\n  and rn=1\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959558":{"id":2959558,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-272,"y":112,"width":32,"height":32,"inputConnectorIDs":[2959621],"outputSuccessConnectorIDs":[2959569,2959575,2959631],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create charge_back_transaction_table_galileo 20211214"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.chargeback_transactions_galileo_20211214 as\nselect\n--     count(1)\n--     dtl.*,\n    dtl.ROW_NUMBER as galileo_report_row_number,\n    gpt.ID as debit_card_transaction_id,\n    'match_with_auth_id' as match_method,\n    null as rank\n--     pt.DESCRIPTION,\n--     pt.TRANSACTION_DATE,\n--     pt.AMOUNT\nfrom FEEDZAI.DISPUTE_TRACKER_LOG_20211214 dtl\njoin WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n    on dtl.PRN=gpt.PRN\n   and dtl.AUTH_ID=gpt.AUTHORIZATION_CODE\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\njoin unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n--join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n--join WEB_DB.USER_ACCOUNT ua on ua.ACCOUNT_ID=d.ACCOUNT_ID\nwhere 1=1\n  and dtl.AUTH_ID is not null\n  and ittm.INSTRUMENT='debit_card'\n  \nunion all\n\nselect\n    dtl.ROW_NUMBER as galileo_report_row_number,\n    gpt.ID as debit_card_transaction_id,\n    'match_with_amount' as match_method,\n--     dtl.*,\n--     pt.TRANSACTION_DATE,\n--     pt.AMOUNT,\n    ROW_NUMBER() over (partition by dtl.ROW_NUMBER order by pt.TRANSACTION_DATE desc) as rank\nfrom FEEDZAI.DISPUTE_TRACKER_LOG_20211214 dtl\njoin WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n    on dtl.PRN=gpt.PRN\n   and dtl.CHARGE_BACK_AMOUNT=gpt.TRANSACTION_AMOUNT\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\njoin unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n--join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n--join WEB_DB.USER_ACCOUNT ua on ua.ACCOUNT_ID=d.ACCOUNT_ID\nwhere 1=1\n  and ittm.INSTRUMENT='debit_card'\n  and dtl.AUTH_ID is null\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959559":{"id":2959559,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1168,"y":240,"width":32,"height":32,"inputConnectorIDs":[2959627],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract historical txns 20211213"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\ncreate or replace file format FEEDZAI_CSV_FORMAT \n  type = 'CSV'\n  comment = 'CSV format for feedzai export files'\n  FIELD_OPTIONALLY_ENCLOSED_BY = '\"' \n  ESCAPE_UNENCLOSED_FIELD = NONE\n;\n\n\n-- copy into @public.DATATEAM/dump/jchen/feedzai_poc/historical_transactions/historical_txn_sample_20211213.csv\ncopy into @public.FEEDZAI_DATA_POC/historical_txn_sample_20211213.csv\nfrom (\n\nwith prn_virtual_raw as (\n    select\n        PRN,\n        VIRTUAL,\n        row_number() over (partition by prn order by CREATED_AT asc ) as rn\n    from BANK_DB.DEBIT_CARD\n    where 1=1\n      and USER_ID != 0\n)\n, prn_virtual as (\n    select prn,\n           VIRTUAL\n    from prn_virtual_raw\n    where 1 = 1\n      and rn = 1\n--     limit 5\n)\nselect\n--     gpt.prn,\n    gpt.ID as transaction_id,\n    gpt.MERCHANT_COUNTRY_CODE as acceptor_country_code,\n    gpt.MERCHANT_NUMBER as acceptor_id,\n    gpt.MERCHANT_NAME as acceptor_name,\n--     'N/A' as account_pw_change_flag, -- TO investigate\n    ifnull(replace(pending.raw_body:response_code, '\"', ''), '') as action_code,\n    gpt.TRANSACTION_AMOUNT as amount,\n    gpt.AUTHORIZATION_CODE as auth_type,\n    pt.RUNNING_BALANCE::numeric(20,2) as card_available_balance,\n    case\n        when pv.VIRTUAL=TRUE then 'Virtual'\n        when pv.VIRTUAL=False then 'Physical'\n        else NULL\n    end as card_category,\n    cids_hash.UUID as card_pan,\n    gpt.TRANSACTION_CURRENCY_CODE as currency_code,\n--     NULL as customer_email_change_flag,             -- TODO, need some work\n    u.UUID as customer_id,\n--     NULL as customer_phone_change_flag,             -- TODO, need some work\n    pt.TRANSACTION_DATE as event_occurred_at,\n--     NULL as last_sca_at,                            -- probably can do, need some work\n    gpt.MERCHANT_CATEGORY_CODE as mcc,\n--     NULL as pos_card_read_method,                   -- need investigation on event_db\n--     NULL as pos_cardholder_ver_method,              -- need investigation on event_db\n--     'N/A' as terminal_id,                           -- need investigation on event_db\n    gl.DESCRIPTION as purchase_type,\n    gpt.TRANSACTION_AMOUNT_SIGN,\n    pwc.TRANSACTION_DATE is not null as account_pw_change_flag,\n    ec.TRANSACTION_DATE is not null as customer_email_change_flag,\n    pc.TRANSACTION_DATE is not null as customer_phone_change_flag,\n    logins.LOGIN_TIME as last_sca_at\nfrom WEB_DB.GALILEO_POSTED_TRANSACTION gpt\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\njoin WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\njoin WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\njoin WEB_DB._USER u on ua.USER_ID=u.ID\njoin WEB_DB.USER_PROFILE up on ua.USER_ID=up.USER_ID\njoin WEB_DB.ADDRESS addr on up.ADDRESS_ID = addr.ID\njoin prn_virtual pv on pv.PRN=gpt.PRN\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\njoin FEEDZAI.CARD_DATA_ALL_DAYS cids on gpt.PRN=cids.prn and to_date(gpt.POST_DATE, 'MMDDYYYY')=cids.DATE\nleft join FEEDZAI.CARD_ID_HASH_TABLE cids_hash on gpt.CARD_ID=cids_hash.CARD_ID\nleft join FEEDZAI.GALILEO_PENDING_TRANSACTION_FEEDZAI_POC pending\n    on pending.TXN_ID=gpt.AUTHORIZATION_CODE\n   and pending.GALILEO_ACCOUNT_ID=gpt.GALILEO_ACCOUNT_ID\nleft join FEEDZAI.FIRST_TXN_AFTER_PASSWORD_CHANGES pwc on pwc.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.FIRST_TXN_AFTER_EMAIL_CHANGES ec on ec.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.FIRST_TXN_AFTER_PHONE_CHANGES pc on pc.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.LAST_LOGIN_TIME logins on logins.TRANSACTION_ID=gpt.ID\nwhere 1=1\n  and ittm.INSTRUMENT='debit_card'\n  and to_date(gpt.POST_DATE, 'MMDDYYYY') between '2020-11-01' and '2021-11-30'\n--   and date_trunc('day', to_date(gpt.POST_DATE, 'MMDDYYYY')) = '2021-11-01'\n--   and gpt.galileo_account_id='473327'\n--   and posted.AUTHORIZATION_CODE='12335486'\n--   and ua.USER_ID=2357211\n--   and ua.USER_ID=2826307\n  and ua.USER_ID in (1628334, 958687, 2357211, 2826307, 2962500)\n-- limit 5\n  \n)\nfile_format = (format_name = FEEDZAI_CSV_FORMAT, compression = NONE)\nSINGLE=true\nHEADER=TRUE\nmax_file_size=4900000000\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959560":{"id":2959560,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1168,"y":128,"width":32,"height":32,"inputConnectorIDs":[2959628],"outputSuccessConnectorIDs":[2959627],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract historical txns 20211208"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\ncreate or replace file format FEEDZAI_CSV_FORMAT \n  type = 'CSV'\n  comment = 'CSV format for feedzai export files'\n  FIELD_OPTIONALLY_ENCLOSED_BY = '\"' \n  ESCAPE_UNENCLOSED_FIELD = NONE\n;\n\n\n-- copy into @public.DATATEAM/dump/jchen/feedzai_poc/historical_transactions/historical_txn_sample_20211208.csv\ncopy into @public.FEEDZAI_DATA_POC/historical_txn_sample_20211208.csv\nfrom (\n\nwith prn_virtual_raw as (\n    select\n        PRN,\n        VIRTUAL,\n        row_number() over (partition by prn order by CREATED_AT asc ) as rn\n    from BANK_DB.DEBIT_CARD\n    where 1=1\n      and USER_ID != 0\n)\n, prn_virtual as (\n    select prn,\n           VIRTUAL\n    from prn_virtual_raw\n    where 1 = 1\n      and rn = 1\n--     limit 5\n)\nselect\n--     gpt.prn,\n    gpt.MERCHANT_COUNTRY_CODE as acceptor_country_code,\n    gpt.MERCHANT_NUMBER as acceptor_id,\n    gpt.MERCHANT_NAME as acceptor_name,\n--     'N/A' as account_pw_change_flag, -- TO investigate\n    ifnull(replace(pending.raw_body:response_code, '\"', ''), '') as action_code,\n    gpt.TRANSACTION_AMOUNT_SIGN || gpt.TRANSACTION_AMOUNT as amount,\n    gpt.AUTHORIZATION_CODE as auth_type,\n    pt.RUNNING_BALANCE::numeric(20,2) as card_available_balance,\n    case\n        when pv.VIRTUAL=TRUE then 'Virtual'\n        when pv.VIRTUAL=False then 'Physical'\n        else NULL\n    end as card_category,\n    cids_hash.UUID as card_pan,\n    gpt.TRANSACTION_CURRENCY_CODE as currency_code,\n--     NULL as customer_email_change_flag,             -- TODO, need some work\n    u.UUID as customer_id,\n--     NULL as customer_phone_change_flag,             -- TODO, need some work\n    pt.TRANSACTION_DATE as event_occurred_at,\n--     NULL as last_sca_at,                            -- probably can do, need some work\n    gpt.MERCHANT_CATEGORY_CODE as mcc,\n--     NULL as pos_card_read_method,                   -- need investigation on event_db\n--     NULL as pos_cardholder_ver_method,              -- need investigation on event_db\n--     'N/A' as terminal_id,                           -- need investigation on event_db\n    gl.DESCRIPTION as purchase_type,\n    gpt.TRANSACTION_AMOUNT_SIGN\nfrom WEB_DB.GALILEO_POSTED_TRANSACTION gpt\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\njoin WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\njoin WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\njoin WEB_DB._USER u on ua.USER_ID=u.ID\njoin WEB_DB.USER_PROFILE up on ua.USER_ID=up.USER_ID\njoin WEB_DB.ADDRESS addr on up.ADDRESS_ID = addr.ID\njoin prn_virtual pv on pv.PRN=gpt.PRN\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\njoin FEEDZAI.CARD_DATA_ALL_DAYS cids on gpt.PRN=cids.prn and to_date(gpt.POST_DATE, 'MMDDYYYY')=cids.DATE\nleft join FEEDZAI.CARD_ID_HASH_TABLE cids_hash on gpt.CARD_ID=cids_hash.CARD_ID\nleft join FEEDZAI.GALILEO_PENDING_TRANSACTION_FEEDZAI_POC pending\n    on pending.TXN_ID=gpt.AUTHORIZATION_CODE\n   and pending.GALILEO_ACCOUNT_ID=gpt.GALILEO_ACCOUNT_ID\nwhere 1=1\n  and ittm.INSTRUMENT='debit_card'\n--   and date_trunc('day', to_date(gpt.POST_DATE, 'MMDDYYYY')) = '2021-11-01'\n  and gpt.galileo_account_id='473327'\n  \n)\nfile_format = (format_name = FEEDZAI_CSV_FORMAT, compression = NONE)\nSINGLE=true\nHEADER=TRUE\nmax_file_size=4900000000\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959561":{"id":2959561,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1168,"y":32,"width":32,"height":32,"inputConnectorIDs":[2959617],"outputSuccessConnectorIDs":[2959628],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"extract historical txns 20211207"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\ncreate or replace file format FEEDZAI_CSV_FORMAT \n  type = 'CSV'\n  comment = 'CSV format for feedzai export files'\n;\n\n\ncopy into @public.DATATEAM/dump/jchen/feedzai_poc/historical_transactions/txn_20211207.csv\nfrom (\n\nwith prn_virtual_raw as (\n    select\n        PRN,\n        VIRTUAL,\n        row_number() over (partition by prn order by CREATED_AT asc ) as rn\n    from BANK_DB.DEBIT_CARD\n    where 1=1\n      and USER_ID != 0\n)\n, prn_virtual as (\n    select prn,\n           VIRTUAL\n    from prn_virtual_raw\n    where 1 = 1\n      and rn = 1\n--     limit 5\n)\nselect\n--     gpt.prn,\n    gpt.MERCHANT_COUNTRY_CODE as acceptor_country_code,\n    gpt.MERCHANT_NUMBER as acceptor_id,\n    gpt.MERCHANT_NAME as acceptor_name,\n--     'N/A' as account_pw_change_flag, -- TO investigate\n    replace(pending.raw_body:response_code, '\"', '') as action_code,\n    gpt.TRANSACTION_AMOUNT_SIGN || gpt.TRANSACTION_AMOUNT as amount,\n    gpt.AUTHORIZATION_CODE as auth_type,\n    pt.RUNNING_BALANCE::numeric(20,2) as card_available_balance,\n    case\n        when pv.VIRTUAL=TRUE then 'Virtual'\n        when pv.VIRTUAL=False then 'Physical'\n        else NULL\n    end as card_category,\n    gpt.TRANSACTION_CURRENCY_CODE as currency_code,\n--     NULL as customer_email_change_flag,             -- TODO, need some work\n    u.UUID as customer_id,\n--     NULL as customer_phone_change_flag,             -- TODO, need some work\n    pt.TRANSACTION_DATE as event_occurred_at,\n--     NULL as last_sca_at,                            -- probably can do, need some work\n    gpt.MERCHANT_CATEGORY_CODE as mcc,\n--     NULL as pos_card_read_method,                   -- need investigation on event_db\n--     NULL as pos_cardholder_ver_method,              -- need investigation on event_db\n--     'N/A' as terminal_id,                           -- need investigation on event_db\n    gl.DESCRIPTION as purchase_type,\n    gpt.TRANSACTION_AMOUNT_SIGN\nfrom WEB_DB.GALILEO_POSTED_TRANSACTION gpt\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\njoin WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\njoin WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\njoin WEB_DB._USER u on ua.USER_ID=u.ID\njoin WEB_DB.USER_PROFILE up on ua.USER_ID=up.USER_ID\njoin WEB_DB.ADDRESS addr on up.ADDRESS_ID = addr.ID\njoin prn_virtual pv on pv.PRN=gpt.PRN\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\njoin FEEDZAI.CARD_DATA_ALL_DAYS cids on gpt.PRN=cids.prn and to_date(gpt.POST_DATE, 'MMDDYYYY')=cids.DATE\n-- left join FEEDZAI.CARD_ID_HASH_TABLE cids_hash on gpt.CARD_ID=cids_hash.CARD_ID\nleft join FEEDZAI.GALILEO_PENDING_TRANSACTION_FEEDZAI_POC pending\n    on pending.TXN_ID=gpt.AUTHORIZATION_CODE\n   and pending.GALILEO_ACCOUNT_ID=gpt.GALILEO_ACCOUNT_ID\nwhere 1=1\n  and ittm.INSTRUMENT='debit_card'\n--   and date_trunc('day', to_date(gpt.POST_DATE, 'MMDDYYYY')) = '2021-11-01'\n  and gpt.galileo_account_id='473327'\n  \n)\nfile_format = (format_name = FEEDZAI_CSV_FORMAT, compression = NONE)\nSINGLE=true\nHEADER=TRUE\nmax_file_size=4900000000\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959562":{"id":2959562,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-560,"y":368,"width":32,"height":32,"inputConnectorIDs":[2959572],"outputSuccessConnectorIDs":[2959624],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"first_txn_after_phone_changes"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.first_txn_after_phone_changes as\nwith txns as (\n    select ua.USER_ID,\n           gpt.PRN,\n           gpt.ID as TRANSACTION_ID,\n           pt.TRANSACTION_DATE,\n           pt.AMOUNT\n    from WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n             join WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\n             join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n             join WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID = ua.ACCOUNT_ID\n             JOIN web_db.galileo_lookup gl\n                  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n             join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE = gl.DESCRIPTION\n    where 1 = 1\n      and ittm.INSTRUMENT = 'debit_card'\n      and pt.TRANSACTION_DATE >= '2020-06-01'\n--       and ua.USER_ID = 2357211\n--       and pt.TRANSACTION_DATE < '2021-06-01'\n--   and gpt.PRN='223109843688'\n--   and gpt.PRN='223109843704'\n--     order by pt.TRANSACTION_DATE asc\n)\n, phone_changes_raw as (\n    select ID as AUDIT_TRAIL_ID,\n           USER_ID,\n           DATE_CREATED,\n           AUDIT_TRAIL,\n           row_number() over (partition by USER_ID order by DATE_CREATED asc) as rn_email_changes\n    from WEB_DB.USER_AUDIT_TRAIL uat\n    where 1 = 1\n--       and uat.USER_ID = 2357211\n      and uat.AUDIT_TRAIL ilike '%phone%'\n      and uat.AUDIT_TRAIL not ilike '%Alloy%'\n      and uat.DATE_CREATED > '2020-06-01'\n)\n, phone_changes as (\n    select pcr1.*,\n           ifnull(pcr2.DATE_CREATED, '2025-01-01') as end_time\n    from phone_changes_raw pcr1\n             left join phone_changes_raw pcr2\n                       on pcr1.USER_ID = pcr2.USER_ID and pcr1.rn_email_changes = pcr2.rn_email_changes - 1\n--     order by ecr1.DATE_CREATED asc\n)\n, joined_data as (\n    select\n           pc.USER_ID,\n           pc.AUDIT_TRAIL_ID,\n           pc.DATE_CREATED as email_change_time,\n           pc.AUDIT_TRAIL,\n           txns.TRANSACTION_ID,\n           txns.TRANSACTION_DATE,\n           row_number() over (partition by AUDIT_TRAIL_ID order by txns.TRANSACTION_DATE asc ) as rn\n    from phone_changes pc\n             join txns on txns.USER_ID = pc.USER_ID\n                      and txns.TRANSACTION_DATE >= pc.DATE_CREATED\n                      and txns.TRANSACTION_DATE <  pc.end_time\n    where 1 = 1\n--   and txns.ID=55524553 -- first txn\n--   and txns.ID=65505633 -- second txn\n)\nselect\n    *\n--     AUDIT_TRAIL_ID,\n--     email_change_time,\n--     TRANSACTION_ID,\n--     TRANSACTION_DATE\nfrom joined_data\nwhere 1=1\n--   and AUDIT_TRAIL_ID=119153774\n--   and AUDIT_TRAIL_ID=131527006\n--   and AUDIT_TRAIL_ID=141465263\n--   and USER_ID=2357211\n  and rn=1\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959563":{"id":2959563,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-576,"y":272,"width":32,"height":32,"inputConnectorIDs":[2959649],"outputSuccessConnectorIDs":[2959572],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"first_txn_after_email_changes"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.first_txn_after_email_changes as\nwith txns as (\n    select ua.USER_ID,\n           gpt.PRN,\n           gpt.ID as TRANSACTION_ID,\n           pt.TRANSACTION_DATE,\n           pt.AMOUNT\n    from WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n             join WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\n             join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n             join WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID = ua.ACCOUNT_ID\n             JOIN web_db.galileo_lookup gl\n                  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n             join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE = gl.DESCRIPTION\n    where 1 = 1\n      and ittm.INSTRUMENT = 'debit_card'\n      and pt.TRANSACTION_DATE >= '2020-06-01'\n--       and ua.USER_ID = 2357211\n--       and pt.TRANSACTION_DATE < '2021-06-01'\n--   and gpt.PRN='223109843688'\n--   and gpt.PRN='223109843704'\n--     order by pt.TRANSACTION_DATE asc\n)\n, email_changes_raw as (\n    select ID as AUDIT_TRAIL_ID,\n           USER_ID,\n           DATE_CREATED,\n           AUDIT_TRAIL,\n           row_number() over (partition by USER_ID order by DATE_CREATED asc) as rn_email_changes\n    from WEB_DB.USER_AUDIT_TRAIL uat\n    where 1 = 1\n--       and uat.USER_ID = 2357211\n      and uat.AUDIT_TRAIL ilike 'Email%'\n      and uat.DATE_CREATED > '2020-06-01'\n)\n, email_changes as (\n    select ecr1.*,\n           ifnull(ecr2.DATE_CREATED, '2025-01-01') as end_time\n    from email_changes_raw ecr1\n             left join email_changes_raw ecr2\n                       on ecr1.USER_ID = ecr2.USER_ID and ecr1.rn_email_changes = ecr2.rn_email_changes - 1\n--     order by ecr1.DATE_CREATED asc\n)\n, joined_data as (\n    select\n           ec.USER_ID,\n           ec.AUDIT_TRAIL_ID,\n           ec.DATE_CREATED as email_change_time,\n           ec.AUDIT_TRAIL,\n           txns.TRANSACTION_ID,\n           txns.TRANSACTION_DATE,\n           txns.AMOUNT,\n           row_number() over (partition by AUDIT_TRAIL_ID order by txns.TRANSACTION_DATE asc ) as rn\n    from email_changes ec\n             join txns on txns.USER_ID = ec.USER_ID\n                      and txns.TRANSACTION_DATE >= ec.DATE_CREATED\n                      and txns.TRANSACTION_DATE <  ec.end_time\n    where 1 = 1\n--   and txns.ID=55524553 -- first txn\n--   and txns.ID=65505633 -- second txn\n)\nselect\n    *\n--     AUDIT_TRAIL_ID,\n--     email_change_time,\n--     TRANSACTION_ID,\n--     TRANSACTION_DATE\nfrom joined_data\nwhere 1=1\n--   and AUDIT_TRAIL_ID=119153774\n--   and AUDIT_TRAIL_ID=131527006\n--   and AUDIT_TRAIL_ID=141465263\n--   and USER_ID=2357211\n  and rn=1\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959564":{"id":2959564,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-784,"y":224,"width":32,"height":32,"inputConnectorIDs":[2959620],"outputSuccessConnectorIDs":[2959625],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create card_id_data_with_end_date table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.card_data_with_end_date as\nwith raw_card_data_asc as (\n    select row_number() over (partition by prn order by FILE_DATE asc ) as rn,\n           FILE_DATE,\n           PRN,\n           CARD_ID,\n           PRODUCT_ID\n    from rdl.RAW_GALILEO_ACCOUNT_CARD_DATA\n    where 1 = 1\n--       and prn = '223106298654'\n--       and prn = '223109814465'\n--   and date_trunc('month', FILE_DATE) = '2021-05-01'\n)\n, raw_card_data_desc as (\n    select row_number() over (partition by prn order by FILE_DATE desc ) as rn_desc,\n           rn as rn_asc,\n           FILE_DATE,\n           PRN,\n           CARD_ID,\n           PRODUCT_ID\n    from raw_card_data_asc\n    where 1 = 1\n--       and prn = '223106298654'\n--       and prn = '223109814465'\n--   and date_trunc('month', FILE_DATE) = '2021-05-01'\n)\n, raw_card_data_all as (\n    select *\n    from raw_card_data_asc\n    union all\n    select rn_asc+1     as RN,\n           '2022-01-01' as FILE_DATE,\n           PRN          as PRN,\n           CARD_ID      as CARD_ID,\n           PRODUCT_ID   as PRODUCT_ID\n    from raw_card_data_desc rcdd\n    where 1 = 1\n      and rn_desc = 1\n)\n-- select *\n-- from raw_card_data_all\n-- where 1=1\n--   and PRN='223106298654'\n-- ;\n\n, raw_card_data_2 as (\n    select rcd1.*,\n           rcd2.FILE_DATE as end_date\n    from raw_card_data_all rcd1\n             join raw_card_data_all rcd2 on rcd1.rn + 1 = rcd2.rn and rcd1.PRN = rcd2.PRN\n    where 1 = 1\n--   and rcd1.PRN='223106298654'\n--       and rcd1.prn = '223109814465'\n)\nselect *\nfrom raw_card_data_2\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959565":{"id":2959565,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1024,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2959645],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of fix feedzai tables permissions"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"-- create schema adw.feedzai;\n\nGRANT USAGE ON SCHEMA ADW.feedzai TO DATA_ENGINEERING_GROUP;\n\nGRANT SELECT ON ALL TABLES IN SCHEMA ADW.feedzai TO DATA_ENGINEERING_GROUP;\n-- GRANT SELECT ON FUTURE TABLES IN SCHEMA ADW.BANK_DB TO DATA_ENGINEERING_GROUP;\n\n\nGRANT USAGE ON SCHEMA ADW.feedzai TO DATA_SCIENCE_ANALYTICS;\nGRANT SELECT ON ALL TABLES IN SCHEMA ADW.feedzai TO DATA_SCIENCE_ANALYTICS;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959566":{"id":2959566,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-656,"y":128,"width":32,"height":32,"inputConnectorIDs":[2959622],"outputSuccessConnectorIDs":[2959570,2959649],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create card_id_hash_table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.card_id_hash_table as\nwith card_ids as (\n    select distinct CARD_ID\n    from rdl.RAW_GALILEO_ACCOUNT_CARD_DATA\n)\nselect\n    CARD_ID,\n    uuid_string() as UUID\nfrom card_ids\n;\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959567":{"id":2959567,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-768,"y":352,"width":32,"height":32,"inputConnectorIDs":[2959625],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create card_id_data table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.card_data_all_days as\nselect\n--     distinct dm.DATE\n    dm.DATE,\n    rcd2.*\nfrom dw.DATE_DIM dm\njoin FEEDZAI.card_data_with_end_date rcd2 on dm.DATE >= rcd2.FILE_DATE and dm.DATE < rcd2.end_date\nwhere 1=1\n--  and rcd2.PRN in ('223106298654', '223109814465')\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959573":{"id":2959573,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-912,"y":336,"width":32,"height":32,"inputConnectorIDs":[2959629],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"test export csv to feedzai staging"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"copy into @public.FEEDZAI_DATA_POC/dsa_test_001.csv\n\nfrom (\nselect\n    '1' as id,\n    'a' as name\nfrom bi.DT_ACCOUNTS\nlimit 1\n\n)\nfile_format = (format_name = FEEDZAI_CSV_FORMAT, compression = NONE)\nSINGLE=true\nHEADER=TRUE\nmax_file_size=4900000000\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959576":{"id":2959576,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-32,"y":112,"width":32,"height":32,"inputConnectorIDs":[2959631],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create charge_back_transaction_table_galileo 20220214"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.chargeback_transactions_galileo_20220214 as\nselect\n--     count(1)\n--     dtl.*,\n    dtl.ROW_NUMBER as galileo_report_row_number,\n    gpt.ID as debit_card_transaction_id,\n    'match_with_auth_id' as match_method,\n    null as rank\n--     pt.DESCRIPTION,\n--     pt.TRANSACTION_DATE,\n--     pt.AMOUNT\nfrom FEEDZAI.DISPUTE_TRACKER_LOG_20220214 dtl\njoin WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n    on dtl.PRN=gpt.PRN\n   and dtl.AUTH_ID=gpt.AUTHORIZATION_CODE\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\njoin unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n--join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n--join WEB_DB.USER_ACCOUNT ua on ua.ACCOUNT_ID=d.ACCOUNT_ID\nwhere 1=1\n  and dtl.AUTH_ID is not null\n  and ittm.INSTRUMENT='debit_card'\n  \nunion all\n\nselect\n    dtl.ROW_NUMBER as galileo_report_row_number,\n    gpt.ID as debit_card_transaction_id,\n    'match_with_amount' as match_method,\n--     dtl.*,\n--     pt.TRANSACTION_DATE,\n--     pt.AMOUNT,\n    ROW_NUMBER() over (partition by dtl.ROW_NUMBER order by pt.TRANSACTION_DATE desc) as rank\nfrom FEEDZAI.DISPUTE_TRACKER_LOG_20220214 dtl\njoin WEB_DB.GALILEO_POSTED_TRANSACTION gpt\n    on dtl.PRN=gpt.PRN\n   and dtl.CHARGE_BACK_AMOUNT=gpt.TRANSACTION_AMOUNT\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\njoin unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n--join WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\n--join WEB_DB.USER_ACCOUNT ua on ua.ACCOUNT_ID=d.ACCOUNT_ID\nwhere 1=1\n  and ittm.INSTRUMENT='debit_card'\n  and dtl.AUTH_ID is null\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959577":{"id":2959577,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-560,"y":-160,"width":32,"height":32,"inputConnectorIDs":[2959616],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import feedzai result - 20220211"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create or replace table feedzai.feedzai_blind_test_result_20220211\n\nas\n\nselect\n--     *,\n    replace(value:c1, '\"', '')::numeric(20, 0) as TRANSACTION_ID,\n    replace(value:c2, '\"', '') as CARD_PAN,\n    replace(value:c3, '\"', '') as EVENT_OCCURRED_AT,\n    replace(value:c4, '\"', '') as AMOUNT,\n    replace(value:c5, '\"', '') as SCORE\nfrom ujc.feedzai_blind_test_result_staging_20220211\nwhere 1=1\n  and replace(value:c1, '\"', '') != 'TRANSACTION_ID'\n--limit 50\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959578":{"id":2959578,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-912,"y":208,"width":32,"height":32,"inputConnectorIDs":[2959626],"outputSuccessConnectorIDs":[2959629],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"grant feedzai staging permissions"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"grant usage on file format FEEDZAI_CSV_FORMAT to role DATA_SCIENCE_ANALYTICS;\ngrant usage on file format FEEDZAI_CSV_FORMAT to role DATA_ENGINEERING_GROUP;\n\ngrant usage on stage FEEDZAI_DATA_POC to role DATA_SCIENCE_ANALYTICS;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959579":{"id":2959579,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-400,"y":-176,"width":32,"height":32,"inputConnectorIDs":[2959619],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create merchant_location table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.event_merchant_location\n\nas\n\nselect\n    MESSAGE_ID,\n    MESSAGE,\n    replace(message:merch_loc, '\"', '') as merch_loc,\n    replace(MESSAGE:prn, '\"', '') as prn,\n    replace(MESSAGE:tran_id, '\"', '') as tran_id\nfrom EVENTS_DB.EVENT\nwhere 1=1\n  and message:merch_loc is not null\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959580":{"id":2959580,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-464,"y":208,"width":32,"height":32,"inputConnectorIDs":[2959570],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"incremental add card_id_hash_table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\n\n\ninsert into FEEDZAI.CARD_ID_HASH_TABLE (card_id, uuid)\nwith card_ids as (\n    select distinct CARD_ID\n    from rdl.RAW_GALILEO_ACCOUNT_CARD_DATA\n    where CARD_ID not in (\n        select CARD_ID\n        from FEEDZAI.CARD_ID_HASH_TABLE\n        )\n)\nselect\n--     count(1)\n    CARD_ID,\n    uuid_string() as UUID\nfrom card_ids\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959581":{"id":2959581,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1024,"y":288,"width":32,"height":32,"inputConnectorIDs":[2959574],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"adhoc recreate table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate table feedzai.LAST_LOGIN_TIME_backup_20211217\nclone feedzai.LAST_LOGIN_TIME;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959582":{"id":2959582,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-880,"y":528,"width":32,"height":32,"inputConnectorIDs":[2959630],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create historical txns table 20220201"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.historical_transaction_extract_20220201 as\n\nwith prn_virtual_raw as (\n    select\n        PRN,\n        VIRTUAL,\n        row_number() over (partition by prn order by CREATED_AT asc ) as rn\n    from BANK_DB.DEBIT_CARD\n    where 1=1\n      and USER_ID != 0\n)\n, prn_virtual as (\n    select prn,\n           VIRTUAL\n    from prn_virtual_raw\n    where 1 = 1\n      and rn = 1\n--     limit 5\n)\nselect\n    ua.user_id,\n    gpt.prn,\n    gpt.ID as transaction_id,\n    gpt.MERCHANT_COUNTRY_CODE as acceptor_country_code,\n    gpt.MERCHANT_NUMBER as acceptor_id,\n    case\n        when gpt.ID=56010010 then 'REMA .RUM             Torp          NOR'\n        else gpt.MERCHANT_NAME\n    end as acceptor_name,\n--     'N/A' as account_pw_change_flag, -- TO investigate\n    ifnull(replace(pending.raw_body:response_code, '\"', ''), '') as action_code,\n    gpt.TRANSACTION_AMOUNT as amount,\n    gpt.AUTHORIZATION_CODE as auth_type,\n    pt.RUNNING_BALANCE::numeric(20,2) as card_available_balance,\n    case\n        when pv.VIRTUAL=TRUE then 'Virtual'\n        when pv.VIRTUAL=False then 'Physical'\n        else NULL\n    end as card_category,\n    cids_hash.UUID as card_pan,\n    gpt.TRANSACTION_CURRENCY_CODE as currency_code,\n--     NULL as customer_email_change_flag,             -- TODO, need some work\n    u.UUID as customer_id,\n--     NULL as customer_phone_change_flag,             -- TODO, need some work\n    pt.TRANSACTION_DATE as event_occurred_at,\n--     NULL as last_sca_at,                            -- probably can do, need some work\n    gpt.MERCHANT_CATEGORY_CODE as mcc,\n--     NULL as pos_card_read_method,                   -- need investigation on event_db\n--     NULL as pos_cardholder_ver_method,              -- need investigation on event_db\n--     'N/A' as terminal_id,                           -- need investigation on event_db\n    gl.DESCRIPTION as purchase_type,\n    gpt.TRANSACTION_AMOUNT_SIGN,\n    pwc.TRANSACTION_DATE is not null as account_pw_change_flag,\n    ec.TRANSACTION_DATE is not null as customer_email_change_flag,\n    pc.TRANSACTION_DATE is not null as customer_phone_change_flag,\n    logins.LOGIN_TIME as last_sca_at,\n    replace(pending.RAW_BODY:type, '\"', '') as TXN_TYPE,\n    replace(pending.RAW_BODY:act_type, '\"', '') as TXN_ACT_TYPE\nfrom WEB_DB.GALILEO_POSTED_TRANSACTION gpt\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\njoin WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\njoin WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\njoin WEB_DB._USER u on ua.USER_ID=u.ID\njoin WEB_DB.USER_PROFILE up on ua.USER_ID=up.USER_ID\njoin WEB_DB.ADDRESS addr on up.ADDRESS_ID = addr.ID\njoin prn_virtual pv on pv.PRN=gpt.PRN\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n-- join FEEDZAI.CARD_DATA_ALL_DAYS cids on gpt.PRN=cids.prn and to_date(gpt.POST_DATE, 'MMDDYYYY')=cids.DATE\nleft join FEEDZAI.CARD_ID_HASH_TABLE cids_hash on gpt.CARD_ID=cids_hash.CARD_ID\nleft join FEEDZAI.GALILEO_PENDING_TRANSACTION_FEEDZAI_POC pending\n    on pending.TXN_ID=gpt.AUTHORIZATION_CODE\n   and pending.GALILEO_ACCOUNT_ID=gpt.GALILEO_ACCOUNT_ID\nleft join FEEDZAI.FIRST_TXN_AFTER_PASSWORD_CHANGES pwc on pwc.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.FIRST_TXN_AFTER_EMAIL_CHANGES ec on ec.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.FIRST_TXN_AFTER_PHONE_CHANGES pc on pc.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.LAST_LOGIN_TIME logins on logins.TRANSACTION_ID=gpt.ID\nwhere 1=1\n  and ittm.INSTRUMENT='debit_card'\n  and date_trunc('month', pt.TRANSACTION_DATE) in ('2021-11-01', '2021-12-01')\n--   and to_date(gpt.POST_DATE, 'MMDDYYYY') between '2021-11-01' and '2022-01-01'\n--   and date_trunc('day', to_date(gpt.POST_DATE, 'MMDDYYYY')) = '2021-11-01'\n--   and gpt.galileo_account_id='473327'\n--   and posted.AUTHORIZATION_CODE='12335486'\n--   and ua.USER_ID=2357211\n--   and ua.USER_ID=2826307\n--   and ua.USER_ID in (1628334, 958687, 2357211, 2826307, 2962500)\n-- limit 5\n  \n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959583":{"id":2959583,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1040,"y":496,"width":32,"height":32,"inputConnectorIDs":[2959650],"outputSuccessConnectorIDs":[2959630],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create historical txns table 20220127"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace table feedzai.historical_transaction_extract_20220127 as\n\nwith prn_virtual_raw as (\n    select\n        PRN,\n        VIRTUAL,\n        row_number() over (partition by prn order by CREATED_AT asc ) as rn\n    from BANK_DB.DEBIT_CARD\n    where 1=1\n      and USER_ID != 0\n)\n, prn_virtual as (\n    select prn,\n           VIRTUAL\n    from prn_virtual_raw\n    where 1 = 1\n      and rn = 1\n--     limit 5\n)\nselect\n    ua.user_id,\n    gpt.prn,\n    gpt.ID as transaction_id,\n    gpt.MERCHANT_COUNTRY_CODE as acceptor_country_code,\n    gpt.MERCHANT_NUMBER as acceptor_id,\n    case\n        when gpt.ID=56010010 then 'REMA .RUM             Torp          NOR'\n        else gpt.MERCHANT_NAME\n    end as acceptor_name,\n--     'N/A' as account_pw_change_flag, -- TO investigate\n    ifnull(replace(pending.raw_body:response_code, '\"', ''), '') as action_code,\n    gpt.TRANSACTION_AMOUNT as amount,\n    gpt.AUTHORIZATION_CODE as auth_type,\n    pt.RUNNING_BALANCE::numeric(20,2) as card_available_balance,\n    case\n        when pv.VIRTUAL=TRUE then 'Virtual'\n        when pv.VIRTUAL=False then 'Physical'\n        else NULL\n    end as card_category,\n    cids_hash.UUID as card_pan,\n    gpt.TRANSACTION_CURRENCY_CODE as currency_code,\n--     NULL as customer_email_change_flag,             -- TODO, need some work\n    u.UUID as customer_id,\n--     NULL as customer_phone_change_flag,             -- TODO, need some work\n    pt.TRANSACTION_DATE as event_occurred_at,\n--     NULL as last_sca_at,                            -- probably can do, need some work\n    gpt.MERCHANT_CATEGORY_CODE as mcc,\n--     NULL as pos_card_read_method,                   -- need investigation on event_db\n--     NULL as pos_cardholder_ver_method,              -- need investigation on event_db\n--     'N/A' as terminal_id,                           -- need investigation on event_db\n    gl.DESCRIPTION as purchase_type,\n    gpt.TRANSACTION_AMOUNT_SIGN,\n    pwc.TRANSACTION_DATE is not null as account_pw_change_flag,\n    ec.TRANSACTION_DATE is not null as customer_email_change_flag,\n    pc.TRANSACTION_DATE is not null as customer_phone_change_flag,\n    logins.LOGIN_TIME as last_sca_at,\n    replace(pending.RAW_BODY:type, '\"', '') as TXN_TYPE,\n    replace(pending.RAW_BODY:act_type, '\"', '') as TXN_ACT_TYPE\nfrom WEB_DB.GALILEO_POSTED_TRANSACTION gpt\njoin WEB_DB.POSTED_TRANSACTION pt on gpt.POSTED_TRANSACTION_ID = pt.ID\njoin WEB_DB.DEPOSITORY d on pt.DEPOSITORY_ID = d.ID\njoin WEB_DB.USER_ACCOUNT ua on d.ACCOUNT_ID=ua.ACCOUNT_ID\njoin WEB_DB._USER u on ua.USER_ID=u.ID\njoin WEB_DB.USER_PROFILE up on ua.USER_ID=up.USER_ID\njoin WEB_DB.ADDRESS addr on up.ADDRESS_ID = addr.ID\njoin prn_virtual pv on pv.PRN=gpt.PRN\nJOIN web_db.galileo_lookup gl\n  ON (gl.code = gpt.transaction_code_type AND gl.file = 'P' AND gl.field_name = 'TRANSACTION CODE/TYPE')\n        join unit21.INSTRUMENT_TRANSACTION_TYPE_MAPPING ittm on ittm.ASPIRATION_TRANSACTION_TYPE=gl.DESCRIPTION\n-- join FEEDZAI.CARD_DATA_ALL_DAYS cids on gpt.PRN=cids.prn and to_date(gpt.POST_DATE, 'MMDDYYYY')=cids.DATE\nleft join FEEDZAI.CARD_ID_HASH_TABLE cids_hash on gpt.CARD_ID=cids_hash.CARD_ID\nleft join FEEDZAI.GALILEO_PENDING_TRANSACTION_FEEDZAI_POC pending\n    on pending.TXN_ID=gpt.AUTHORIZATION_CODE\n   and pending.GALILEO_ACCOUNT_ID=gpt.GALILEO_ACCOUNT_ID\nleft join FEEDZAI.FIRST_TXN_AFTER_PASSWORD_CHANGES pwc on pwc.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.FIRST_TXN_AFTER_EMAIL_CHANGES ec on ec.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.FIRST_TXN_AFTER_PHONE_CHANGES pc on pc.TRANSACTION_ID=gpt.ID\nleft join FEEDZAI.LAST_LOGIN_TIME logins on logins.TRANSACTION_ID=gpt.ID\nwhere 1=1\n  and ittm.INSTRUMENT='debit_card'\n  and date_trunc('month', pt.TRANSACTION_DATE) in ('2021-11-01', '2021-12-01')\n--   and to_date(gpt.POST_DATE, 'MMDDYYYY') between '2021-11-01' and '2022-01-01'\n--   and date_trunc('day', to_date(gpt.POST_DATE, 'MMDDYYYY')) = '2021-11-01'\n--   and gpt.galileo_account_id='473327'\n--   and posted.AUTHORIZATION_CODE='12335486'\n--   and ua.USER_ID=2357211\n--   and ua.USER_ID=2826307\n--   and ua.USER_ID in (1628334, 958687, 2357211, 2826307, 2962500)\n-- limit 5\n  \n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959584":{"id":2959584,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":-427,"y":-50,"width":32,"height":16,"inputConnectorIDs":[2959648],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Grid Iterator 0"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file_dates"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file_date_year"},"2":{"slot":2,"type":"STRING","value":"current_year"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"file_date_month"},"2":{"slot":2,"type":"STRING","value":"current_month"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"file_date_day"},"2":{"slot":2,"type":"STRING","value":"current_day"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Sequential"}}}},"visible":true},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[2959647],"inputIterationConnectorIDs":[]},"2959585":{"id":2959585,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1155583855,"x":-559,"y":-55,"width":32,"height":32,"inputConnectorIDs":[2959623],"outputSuccessConnectorIDs":[2959648],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get all dates to process"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true},"3":{"slot":3,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"4":{"slot":4,"name":"Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"galileo_interest_accrual"}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file_date"}}}},"visible":false},"7":{"slot":7,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"with t as (\nselect\n    date as file_date\nfrom dw.DATE_DIM\nwhere 1=1\n  and date >= '2021-11-01'\n  and date <  '2022-01-01'\n)\n\n, a as (\n    select to_date('2021-02-26') as file_date\n    union all\n    select to_date('2021-02-10') as file_date\n)\n\n\nselect distinct\n  to_char(file_date, 'YYYY') as file_date_year,\n  to_char(file_date, 'MM') as file_date_month,\n--  to_char(file_date, 'DD') as file_date_day\n  '01' as file_date_day  -- monthly data\nfrom t\n--from a\n-- order by file_date desc\n\n"}}}},"visible":true},"8":{"slot":8,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file_dates"}}}},"visible":true},"9":{"slot":9,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"FILE_DATE_YEAR"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"FILE_DATE_MONTH"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"FILE_DATE_DAY"}}}},"visible":true},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"rdl"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959586":{"id":2959586,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-736,"y":-48,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2959616,2959617,2959618,2959619,2959620,2959621,2959622,2959623,2959644,2959645],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2959587":{"id":2959587,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-427,"y":-50,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"feedzai_transaction_historical_extract_day"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"feedzai_transaction_historical_extract_day"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"current_year"},"2":{"slot":2,"type":"STRING","value":"${current_year}"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"current_month"},"2":{"slot":2,"type":"STRING","value":"${current_month}"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"current_day"},"2":{"slot":2,"type":"STRING","value":"${current_day}"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[2959647]},"2959600":{"id":2959600,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-992,"y":96,"width":32,"height":32,"inputConnectorIDs":[2959618],"outputSuccessConnectorIDs":[2959574,2959626],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create feedzai stage"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"use warehouse unit_21;\n\ncreate or replace stage public.feedzai_data_poc url='s3://feedzai-prod-asp-ds-storage-prod-us-east-1/input/'\ncredentials=(aws_key_id='AKIA****', aws_secret_key='pA5E****')\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2959568":{"id":2959568,"sourceID":2959555,"targetID":2959554},"2959569":{"id":2959569,"sourceID":2959558,"targetID":2959553},"2959570":{"id":2959570,"sourceID":2959566,"targetID":2959580},"2959571":{"id":2959571,"sourceID":2959557,"targetID":2959556},"2959572":{"id":2959572,"sourceID":2959563,"targetID":2959562},"2959574":{"id":2959574,"sourceID":2959600,"targetID":2959581},"2959575":{"id":2959575,"sourceID":2959558,"targetID":2959552},"2959624":{"id":2959624,"sourceID":2959562,"targetID":2959557},"2959625":{"id":2959625,"sourceID":2959564,"targetID":2959567},"2959626":{"id":2959626,"sourceID":2959600,"targetID":2959578},"2959627":{"id":2959627,"sourceID":2959560,"targetID":2959559},"2959628":{"id":2959628,"sourceID":2959561,"targetID":2959560},"2959629":{"id":2959629,"sourceID":2959578,"targetID":2959573},"2959630":{"id":2959630,"sourceID":2959583,"targetID":2959582},"2959631":{"id":2959631,"sourceID":2959558,"targetID":2959576},"2959648":{"id":2959648,"sourceID":2959585,"targetID":2959584},"2959649":{"id":2959649,"sourceID":2959566,"targetID":2959563},"2959650":{"id":2959650,"sourceID":2959554,"targetID":2959583}},"failureConnectors":{},"unconditionalConnectors":{"2959616":{"id":2959616,"sourceID":2959586,"targetID":2959577},"2959617":{"id":2959617,"sourceID":2959586,"targetID":2959561},"2959618":{"id":2959618,"sourceID":2959586,"targetID":2959600},"2959619":{"id":2959619,"sourceID":2959586,"targetID":2959579},"2959620":{"id":2959620,"sourceID":2959586,"targetID":2959564},"2959621":{"id":2959621,"sourceID":2959586,"targetID":2959558},"2959622":{"id":2959622,"sourceID":2959586,"targetID":2959566},"2959623":{"id":2959623,"sourceID":2959586,"targetID":2959585},"2959644":{"id":2959644,"sourceID":2959586,"targetID":2959555},"2959645":{"id":2959645,"sourceID":2959586,"targetID":2959565}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{"2959647":{"id":2959647,"sourceID":2959584,"targetID":2959587}},"noteConnectors":{},"notes":{"2959590":{"id":2959590,"x":-257,"y":-219,"width":307,"height":238,"text":"TODO for extracting more transactions\n\n- add more pending transactions to FEEDZAI.GALILEO_PENDING_TRANSACTION_FEEDZAI_POC\n\n- incremental add more rows to FEEDZAI.CARD_ID_HASH_TABLE\n\n- recalculate below tables:\n  - account_pw_change_flag\n  - customer_email_change_flag\n  - customer_phone_change_flag\n  - last_sca_at\n\n- create historical txn table","colour":"e6e63c"}},"variables":{"current_day":{"definition":{"name":"current_day","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"12"},"current_month":{"definition":{"name":"current_month","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"05"},"current_year":{"definition":{"name":"current_year","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"2021"}},"grids":{"file_dates":{"definition":{"name":"file_dates","scope":"BRANCH","definitions":[{"name":"file_date_year","type":"TEXT"},{"name":"file_date_month","type":"TEXT"},{"name":"file_date_day","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]}}},"info":{"name":"feedzai_transaction_historical_extract_day_list","description":"","type":"ORCHESTRATION","tag":"53c30ac2-9e9c-45f9-adf1-e81d1cb9d662"}}