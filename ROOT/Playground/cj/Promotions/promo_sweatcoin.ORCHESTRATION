{"job":{"components":{"2957824":{"id":2957824,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":80,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957846],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957825":{"id":2957825,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-240,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957844],"outputSuccessConnectorIDs":[2957845],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"stage"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS public.ucj_batch_stage;\nCREATE TABLE public.ucj_batch_stage AS \n   SELECT rpad('D'\t\t\t\t\t\t\t\t\t\t  , 1  ) AS record_type\n\t\t, rpad(record_number          \t\t\t\t\t  , 6  ) AS record_number\n\t\t, rpad('R'\t\t\t\t\t\t\t\t\t\t  , 1  ) AS account_id_type\n\t\t, rpad(account_identifier\t\t\t\t\t\t  , 50 ) AS account_identifier\n\t\t, rpad(''\t\t\t\t\t\t\t\t\t\t  , 1  ) AS location_id\n\t\t, rpad(''\t\t\t\t\t\t\t\t\t\t  , 20 ) AS location_type\n\t\t, rpad('A'\t\t\t\t\t\t\t\t\t\t  , 1  ) AS transaction_type\n\t\t, rpad('PA'\t\t\t\t\t\t\t\t\t\t  , 3  ) AS transaction_sub_type\n\t\t, rpad(transaction_amount        \t\t\t\t  , 13 ) AS transaction_amount\n\t\t, rpad('Aspiration Promotional - Sweatcoin'       , 40 ) AS transaction_description\n\t\t, rpad(transaction_identifier          \t\t\t  , 20 ) AS transaction_identifier\n   FROM public.ucj_batch_promo;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957826":{"id":2957826,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-416,"y":80,"width":32,"height":32,"inputConnectorIDs":[2957841],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Sweatcoin"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--Aspiration Promotional - Sweatcoin\nDROP TABLE IF EXISTS public.ucj_batch_promo;\nCREATE TABLE public.ucj_batch_promo AS\nWITH\n   account_incepted AS (\n      SELECT *\n      FROM (\n         SELECT upay.account_number AS prn\n              , uapp.user_id\n              , uapp.account_id\n              , least(coalesce(dep.account_approved_time,current_date),coalesce(dep.inception_date,current_date),coalesce(acc.inception_date,current_date))::DATE AS asp_inception_date\n              , row_number() OVER (PARTITION BY uapp.account_id ORDER BY coalesce(acc.inception_date,current_date) ASC NULLS LAST, uapp.product_id ASC NULLS LAST) AS rownum\n         FROM web_db.user_product_application uapp\n         JOIN web_db.account acc ON acc.id = uapp.account_id AND acc.termination_date IS NULL AND coalesce(acc.is_admin_disabled,'false') <> 'true'\n         JOIN web_db.depository dep ON dep.account_id = acc.id AND dep.product_id = uapp.product_id\n         JOIN web_db.user_payment_account upay ON dep.id = upay.depository_id AND upay.user_id = uapp.user_id AND coalesce(upay.is_admin_disabled,'false') <> 'true' AND coalesce(upay.is_deleted,'false') <> 'true'\n         JOIN web_db.fc_person_response usr_rsp ON usr_rsp.user_id = uapp.user_id\n         JOIN web_db.wait_list_user usr_lst ON usr_lst.id = usr_rsp.wait_list_user_id\n         WHERE least(coalesce(dep.account_approved_time,current_date),coalesce(dep.inception_date,current_date),coalesce(acc.inception_date,current_date))::DATE BETWEEN '2020-10-08' AND '2020-11-01'\n           AND usr_lst.utm_source = 'sweatcoin'\n         ) subq\n      WHERE rownum = 1\n      ),\n   account_balance AS (\n      SELECT gbal.balance_date\n           , usr_acc.account_id\n           , CASE dep.product_id WHEN 5 THEN 'Savings' WHEN 4 THEN 'Checking' END AS depository_type\n           , min(case when sum(gbal.current_balance) <> 0 then gbal.balance_date end) over (partition by usr_acc.account_id) AS first_balance\n           , min(case when sum(gbal.current_balance) >= 100 then gbal.balance_date end) over (partition by usr_acc.account_id) AS first_balance_qualified\n           , sum(gbal.current_balance) AS balance\n           , sum(sum(gbal.current_balance)) over (partition by gbal.balance_date,usr_acc.account_id) AS combined_balance\n      FROM account_incepted usr_acc\n      JOIN web_db.user_product_application uapp ON uapp.account_id = usr_acc.account_id\n      JOIN web_db.depository dep ON dep.account_id = uapp.account_id AND dep.product_id = uapp.product_id\n      JOIN web_db.depository_balance gbal ON dep.id = gbal.depository_id\n      WHERE dep.product_id IN (4,5)\n      GROUP BY gbal.balance_date\n             , usr_acc.account_id\n             , depository_type\n      ),\n   balance_period AS (\n      SELECT account_id\n           , case when first_balance_qualified - first_balance <= 7 then first_balance_qualified else first_balance end AS period_start\n           , case when first_balance_qualified - first_balance <= 7 then first_balance_qualified else first_balance end+30 AS period_end\n           , min(combined_balance) AS min_balance\n      FROM account_balance\n      WHERE balance_date BETWEEN period_start AND period_end\n      GROUP BY account_id\n             , period_start\n             , period_end\n      ),\n   account_standing AS (\n      SELECT account_id\n           , min(CASE WHEN depository_type = 'Checking' AND balance >= 10 THEN balance_date END) AS spend_fund_date\n           , min(CASE WHEN depository_type = 'Savings' AND balance >= 10 THEN balance_date END) AS save_fund_date\n           , max(CASE WHEN depository_type = 'Checking' AND balance < 0 THEN balance_date END) AS last_spend_overdraft\n           , max(CASE WHEN depository_type = 'Savings' AND balance < 0 THEN balance_date END) AS last_save_overdraft\n      FROM account_balance\n      GROUP BY account_id\n      ),\n   promo_results AS (\n      SELECT pa.prn\n           , pa.account_id\n           , pa.asp_inception_date\n           , pa.user_id\n           , sum(1) OVER (PARTITION BY pa.user_id) AS user_row_count\n           , sum(1) OVER (PARTITION BY pa.account_id) AS account_row_count\n           , nvl(ast.spend_fund_date,ast.save_fund_date) IS NOT NULL AS funded\n           , nvl(ast.last_spend_overdraft,ast.last_save_overdraft) IS NOT NULL AS overdraft\n           --, nvl(ac.count_credit,0) AS prior_credits\n           , bal_per.period_start\n           , bal_per.period_end\n           , bal_per.min_balance\n           , case when bal_per.min_balance >= 100 AND NOT overdraft AND funded THEN true END AS qualified\n      FROM account_incepted pa\n      LEFT JOIN account_standing ast ON ast.account_id = pa.account_id\n      --LEFT JOIN accounts_credited ac ON ac.account_id = pa.account_id\n      LEFT JOIN balance_period bal_per ON bal_per.account_id = pa.account_id\n      WHERE qualified\n      )\nSELECT row_number() over (order by 1)     \t\t\t\t\t::VARCHAR AS record_number\n     , pr.prn\t\t\t\t\t\t\t \t\t\t\t\t::VARCHAR AS account_identifier\n     , trunc(10 * -1,2)                  \t\t\t\t\t::VARCHAR AS transaction_amount\n     , 'SC_${run_history_id}-' || lpad(record_number,5,'0')\t::VARCHAR AS transaction_identifier\nFROM promo_results pr;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957827":{"id":2957827,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-416,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957840],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2957843],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Variables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Udating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport datetime\n\n#add run_history_id to create a unique temp table for parrallel processing\ncontext.updateVariable(\"staging_table\", staging_table + str(run_history_id))\n\n#add YYYYMMDD to batch_filename varible \n#add value in batch_filename_sequence variable\n#Note: date calc rolls to next day when processed after 5pm MT or 4pm PT (Galileo is no longer processing at this time)\n#context.updateVariable(\"batch_filename\", batch_filename + datetime.date.today().strftime('%Y') + datetime.date.today().strftime('%m') + datetime.date.today().strftime('%d') + str(run_history_id) + '.txt')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957828":{"id":2957828,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-320,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957843],"outputSuccessConnectorIDs":[2957844],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"promo"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--Aspiration Promotional - Sweatcoin\nDROP TABLE IF EXISTS public.ucj_batch_promo;\nCREATE TABLE public.ucj_batch_promo AS\nWITH\n   account_incepted AS (\n      SELECT *\n      FROM (\n         SELECT upay.account_number AS prn\n              , uapp.user_id\n              , uapp.account_id\n              , least(coalesce(dep.account_approved_time,current_date),coalesce(dep.inception_date,current_date),coalesce(acc.inception_date,current_date))::DATE AS asp_inception_date\n              , row_number() OVER (PARTITION BY uapp.account_id ORDER BY coalesce(acc.inception_date,current_date) ASC NULLS LAST, uapp.product_id ASC NULLS LAST) AS rownum\n         FROM web_db.user_product_application uapp\n         JOIN web_db.account acc ON acc.id = uapp.account_id AND acc.termination_date IS NULL AND coalesce(acc.is_admin_disabled,'false') <> 'true'\n         JOIN web_db.depository dep ON dep.account_id = acc.id AND dep.product_id = uapp.product_id\n         JOIN web_db.user_payment_account upay ON dep.id = upay.depository_id AND upay.user_id = uapp.user_id AND coalesce(upay.is_admin_disabled,'false') <> 'true' AND coalesce(upay.is_deleted,'false') <> 'true'\n         JOIN web_db.fc_person_response usr_rsp ON usr_rsp.user_id = uapp.user_id\n         JOIN web_db.wait_list_user usr_lst ON usr_lst.id = usr_rsp.wait_list_user_id\n         WHERE least(coalesce(dep.account_approved_time,current_date),coalesce(dep.inception_date,current_date),coalesce(acc.inception_date,current_date))::DATE > '2020-07-01'\n           AND usr_lst.utm_source = 'sweatcoin'\n         ) subq\n      WHERE rownum = 1\n      ),\n   account_balance AS (\n      SELECT gbal.balance_date\n           , usr_acc.account_id\n           , CASE dep.product_id WHEN 5 THEN 'Savings' WHEN 4 THEN 'Checking' END AS depository_type\n           , min(case when sum(gbal.current_balance) <> 0 then gbal.balance_date end) over (partition by usr_acc.account_id) AS first_balance\n           , min(case when sum(gbal.current_balance) >= 100 then gbal.balance_date end) over (partition by usr_acc.account_id) AS first_balance_qualified\n           , sum(gbal.current_balance) AS balance\n           , sum(sum(gbal.current_balance)) over (partition by gbal.balance_date,usr_acc.account_id) AS combined_balance\n      FROM account_incepted usr_acc\n      JOIN web_db.user_product_application uapp ON uapp.account_id = usr_acc.account_id\n      JOIN web_db.depository dep ON dep.account_id = uapp.account_id AND dep.product_id = uapp.product_id\n      JOIN web_db.depository_balance gbal ON dep.id = gbal.depository_id\n      WHERE dep.product_id IN (4,5)\n      GROUP BY gbal.balance_date\n             , usr_acc.account_id\n             , depository_type\n      ),\n   balance_period AS (\n      SELECT account_id\n           , case when first_balance_qualified - first_balance <= 7 then first_balance_qualified else first_balance end AS period_start\n           , case when first_balance_qualified - first_balance <= 7 then first_balance_qualified else first_balance end+30 AS period_end\n           , min(combined_balance) AS min_balance\n      FROM account_balance\n      WHERE balance_date BETWEEN period_start AND period_end\n      GROUP BY account_id\n             , period_start\n             , period_end\n      ),\n   account_standing AS (\n      SELECT account_id\n           , min(CASE WHEN depository_type = 'Checking' AND balance >= 10 THEN balance_date END) AS spend_fund_date\n           , min(CASE WHEN depository_type = 'Savings' AND balance >= 10 THEN balance_date END) AS save_fund_date\n           , max(CASE WHEN depository_type = 'Checking' AND balance < 0 THEN balance_date END) AS last_spend_overdraft\n           , max(CASE WHEN depository_type = 'Savings' AND balance < 0 THEN balance_date END) AS last_save_overdraft\n      FROM account_balance\n      GROUP BY account_id\n      ),\n   accounts_credited AS (\n      SELECT pa.account_id\n           , sum(post.amount) AS total_credit\n           , count(distinct post.id) AS count_credit\n      FROM account_incepted pa\n      JOIN web_db.depository d ON d.account_id = pa.account_id\n      JOIN web_db.posted_transaction post ON d.id = post.depository_id\n      JOIN web_db.galileo_posted_transaction gpt ON gpt.posted_transaction_id = post.id\n      WHERE post.description in ('Aspiration Promotional - Sweatcoin','Aspiration Promotional Credit - Sweatcoin') OR gpt.transaction_description in ('Aspiration Promotional Credit - Sweatcoin','Aspiration Promotional - Sweatcoin')\n      GROUP BY 1\n      ),\n   promo_results AS (\n      SELECT pa.prn\n           , pa.account_id\n           , pa.asp_inception_date\n           , pa.user_id\n           , sum(1) OVER (PARTITION BY pa.user_id) AS user_row_count\n           , sum(1) OVER (PARTITION BY pa.account_id) AS account_row_count\n           , nvl(ast.spend_fund_date,ast.save_fund_date) IS NOT NULL AS funded\n           , nvl(ast.last_spend_overdraft,ast.last_save_overdraft) IS NOT NULL AS overdraft\n           , nvl(ac.count_credit,0) AS prior_credits\n           , bal_per.period_start\n           , bal_per.period_end\n           , bal_per.min_balance\n           , case when bal_per.min_balance >= 100 AND NOT overdraft AND funded AND prior_credits < 1 THEN true END AS qualified\n      FROM account_incepted pa\n      LEFT JOIN account_standing ast ON ast.account_id = pa.account_id\n      LEFT JOIN accounts_credited ac ON ac.account_id = pa.account_id\n      LEFT JOIN balance_period bal_per ON bal_per.account_id = pa.account_id\n      WHERE qualified\n      )\nSELECT row_number() over (order by 1)     \t\t\t\t\t::VARCHAR AS record_number\n     , pr.prn\t\t\t\t\t\t\t \t\t\t\t\t::VARCHAR AS account_identifier\n     , trunc(20 * -1,2)                  \t\t\t\t\t::VARCHAR AS transaction_amount\n     , 'SC_${run_history_id}-' || lpad(record_number,5,'0')\t::VARCHAR AS transaction_identifier\nFROM promo_results pr;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957830":{"id":2957830,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-496,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2957840,2957841],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957831":{"id":2957831,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957850],"outputSuccessConnectorIDs":[2957846],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"cleanup"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS public.ucj_batch_promo;\nDROP TABLE IF EXISTS public.ucj_batch_stage;\nDROP TABLE IF EXISTS public.ucj_batch_file;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957848":{"id":2957848,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-80,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957847],"outputSuccessConnectorIDs":[2957850],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"output"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"copy into '@PUBLIC.ETL/file_processing/galileo_batch_transactions/batch_files/btrans_584_20210511_228.txt'\nfrom (\n  select COL_01\n\t   , COL_02\n\t   , COL_03\n\t   , COL_04\n\t   , COL_05\n\t   , COL_06\n\t   , COL_07\n\t   , COL_08\n\t   , COL_09\n\t   , COL_10\n\t   , COL_11\n  from public.ucj_batch_file\n  order by ROWNUM ASC\n  )\n\tfile_format=(\n      type=csv\n      compression=none\n      field_delimiter=none\n    )\n    single=true\n    ;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957849":{"id":2957849,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-160,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957845],"outputSuccessConnectorIDs":[2957847],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"batch"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS public.ucj_batch_file;\nCREATE TABLE public.ucj_batch_file (\n   ROWNUM\tBIGINT,\n   COL_01   VARCHAR(256),\n   COL_02   VARCHAR(256),\n   COL_03   VARCHAR(256),\n   COL_04   VARCHAR(256),\n   COL_05   VARCHAR(256),\n   COL_06   VARCHAR(256),\n   COL_07   VARCHAR(256),\n   COL_08   VARCHAR(256),\n   COL_09   VARCHAR(256),\n   COL_10   VARCHAR(256),\n   COL_11   VARCHAR(256)\n   );\nINSERT INTO public.ucj_batch_file (\n   SELECT 0\n\t\t, rpad('H'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 1  )\n\t\t, rpad('HEADER'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 6  )\n\t\t, rpad('454'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 10 )\n\t\t, rpad('584'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 10 )\n\t\t, rpad('btrans_584_'||to_char(dateadd(hour,-7,current_timestamp()),'YYYYMMDD')||'_228.txt.gpg'\t, 50 )\n\t\t, rpad(to_char(dateadd(hour,-7,current_timestamp()), 'MMDDYYYY')\t\t\t\t\t\t\t\t\t\t\t, 8  )\n\t\t, '', '', '', '', ''\n   );\nINSERT INTO public.ucj_batch_file (\n   SELECT record_number::bigint\n\t\t, record_type\n\t\t, record_number\n\t\t, account_id_type\n\t\t, account_identifier\n\t\t, location_id\n\t\t, location_type\n\t\t, transaction_type\n\t\t, transaction_sub_type\n\t\t, transaction_amount\n\t\t, transaction_description\n\t\t, transaction_identifier\n   FROM public.ucj_batch_stage\n   );\nINSERT INTO public.ucj_batch_file (\n   SELECT 999999\n        , rpad('T'\t\t\t\t, 1 )\n        , rpad('TRAILER'\t\t, 7 )\n        , rpad(count(1)::VARCHAR, 6 )\n        , '', '', '', '', '', '', '', ''\n   FROM public.ucj_batch_stage\n   );"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2957844":{"id":2957844,"sourceID":2957828,"targetID":2957825},"2957845":{"id":2957845,"sourceID":2957825,"targetID":2957849},"2957846":{"id":2957846,"sourceID":2957831,"targetID":2957824},"2957847":{"id":2957847,"sourceID":2957849,"targetID":2957848},"2957850":{"id":2957850,"sourceID":2957848,"targetID":2957831}},"failureConnectors":{},"unconditionalConnectors":{"2957840":{"id":2957840,"sourceID":2957830,"targetID":2957827},"2957841":{"id":2957841,"sourceID":2957830,"targetID":2957826},"2957843":{"id":2957843,"sourceID":2957827,"targetID":2957828}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"2957829":{"id":2957829,"x":-342,"y":-70,"width":44,"height":106,"text":"Query\nAmount","colour":"e6e63c"},"2957832":{"id":2957832,"x":-342,"y":-132,"width":284,"height":43,"text":"also two job variables for temp tables can be changed but not required.","colour":"e6e63c"},"2957833":{"id":2957833,"x":117,"y":-30,"width":382,"height":198,"text":"**``DETAIL``**\n\n0**   COLUMN                                       L      S       E      VALUE           REQ**\n1    RECORD_TYPE                               1     1       1      \"D\"                   Y\n2    RECORD_NUMBER                        6     2       7      999999           Y\n3    ACCOUNT_ID_TYPE                      1      8       8      R                      Y\n4    ACCOUNT_IDENTIFIER                 50    9      58    PRN                 Y\n5    LOCATION_ID                                1      59    59                             N\n6    LOCATION_TYPE                           20    60    79                             N\n7    TRANSACTION_TYPE                    1      80    80     var                   Y\n8    TRANSACTION_SUB_TYPE           3      81    83                             N\n9    TRANSACTION_AMOUNT            13    84    96    1234567891   Y\n10  TRANSACTION_DESCRIPTION    40    97    136   var                  N\n11  TRANSACTION_IDENTIFIER         20    137  156                          N","colour":"e6e63c"},"2957834":{"id":2957834,"x":-263,"y":-69,"width":46,"height":105,"text":"Descript\nType\nSubtype","colour":"e6e63c"},"2957835":{"id":2957835,"x":-104,"y":-70,"width":47,"height":106,"text":"Filename","colour":"e6e63c"},"2957836":{"id":2957836,"x":-341,"y":56,"width":283,"height":138,"text":"Types\nA: adjustment\n\nSubtypes\nPA: promotion...\nCD: cashback?","colour":"e6e63c"},"2957838":{"id":2957838,"x":118,"y":172,"width":382,"height":83,"text":"**``TRAILER``**\n\n0**\tCOLUMN .         L    S    E    VALUE        REQ**\n1  RECORD_TYPE   1    1    1    \"T\"               Y\n2  TRAILER              7    2    8    \"TRAILER\"   Y\n3  COUNT               6    9    14   999999       Y","colour":"e6e63c"},"2957839":{"id":2957839,"x":117,"y":-163,"width":382,"height":129,"text":"**``HEADER``**\n\n0**  COLUMN                        L      S     E      VAL                   REQ**\n1   RECORD_TYPE                1      1     1      \"H\"                    Y\n2   HEADER                           6      2     7      \"HEADER\"        Y\n3   CLIENT_ID                       10    8     17    454                    Y\n4   PROGRAM_ID                 10   18    27    584\n5   FILE_NAME                      50   28   77    var                     Y\n6   FILE_TRANSMIT_DATE   8     78   85    MMDDYYYY      Y","colour":"e6e63c"}},"variables":{"batch_table":{"definition":{"name":"batch_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"tmp_sweatcoin_file"},"file_number":{"definition":{"name":"file_number","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"input_bucket":{"definition":{"name":"input_bucket","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"s3://aspiration-etl-staging/file_processing/galileo_batch_transactions/batch_files"},"input_filename":{"definition":{"name":"input_filename","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"passed_variable"},"staging_table":{"definition":{"name":"staging_table","type":"TEXT","scope":"BRANCH","description":"","visibility":"PRIVATE"},"value":"tmp_sweatcoin_stage"}},"grids":{}},"info":{"name":"promo_sweatcoin","description":"","type":"ORCHESTRATION","tag":"8697deb1-ec9c-4be7-a741-573e9025f9bc"}}