{"job":{"components":{"2957762":{"id":2957762,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-416,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957779],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2957776],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Variables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Udating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport datetime\n\n#add run_history_id to create a unique temp table for parrallel processing\ncontext.updateVariable(\"staging_table\", staging_table + str(run_history_id))\n\n#add YYYYMMDD to batch_filename varible \n#add value in batch_filename_sequence variable\n#Note: date calc rolls to next day when processed after 5pm MT or 4pm PT (Galileo is no longer processing at this time)\n#context.updateVariable(\"batch_filename\", batch_filename + datetime.date.today().strftime('%Y') + datetime.date.today().strftime('%m') + datetime.date.today().strftime('%d') + str(run_history_id) + '.txt')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957784":{"id":2957784,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":80,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957781],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957785":{"id":2957785,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-240,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957777],"outputSuccessConnectorIDs":[2957782],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"stage"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS public.ucj_batch_stage;\nCREATE TABLE public.ucj_batch_stage AS \n   SELECT rpad('D'\t\t\t\t\t\t\t\t\t\t, 1  ) AS record_type\n\t\t, rpad(record_number          \t\t\t\t\t, 6  ) AS record_number\n\t\t, rpad('R'\t\t\t\t\t\t\t\t\t\t, 1  ) AS account_id_type\n\t\t, rpad(account_identifier\t\t\t\t\t\t, 50 ) AS account_identifier\n\t\t, rpad(''\t\t\t\t\t\t\t\t\t\t, 1  ) AS location_id\n\t\t, rpad(''\t\t\t\t\t\t\t\t\t\t, 20 ) AS location_type\n\t\t, rpad('A'\t\t\t\t\t\t\t\t\t\t, 1  ) AS transaction_type\n\t\t, rpad('PA'\t\t\t\t\t\t\t\t\t\t, 3  ) AS transaction_sub_type\n\t\t, rpad(transaction_amount        \t\t\t\t, 13 ) AS transaction_amount\n\t\t, rpad('Promotion - Term Life Insurance Quote'\t, 40 ) AS transaction_description\n\t\t, rpad(transaction_identifier          \t\t\t, 20 ) AS transaction_identifier\n   FROM public.ucj_batch_promo;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957786":{"id":2957786,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-416,"y":80,"width":32,"height":32,"inputConnectorIDs":[2957778],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Haven"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/* transaction_type = 'A'  transaction_subtype = 'PA'   'Promotion - Term Life Insurance Quote' */\nDROP TABLE IF EXISTS ${staging_schema}.${staging_table};\nCREATE TABLE ${staging_schema}.${staging_table} AS\nWITH\n         haven_users AS (\n            SELECT DISTINCT\n                   ha._id AS opportunity_id\n                 , ha.accountcreatedate AS haven_created_date\n                 , ha.email AS email\n                 , nvl(u.id,ue.user_id) AS user_id\n            FROM rdl.havenlife_activity ha\n            LEFT JOIN web_db._user u ON u.uuid = ha.referralid\n            LEFT JOIN web_db.user_email ue ON regexp_replace(lower(ue.email),'\\\\+[^@]*@','@') = regexp_replace(lower(ha.email),'\\\\+[^@]*@','@')\n            ),\n         haven_states AS (\n            SELECT DISTINCT\n                   hd.user_id\n                 , first_value(hd.haven_created_date) over (partition by hd.user_id order by hd.haven_created_date asc nulls last rows unbounded preceding) AS haven_created_date\n                 , (ad.state_id NOT IN (2,4,54,13,15,19,29,32,34,41,47,31,28) AND ad.state_id IS NOT NULL) AS isvalid_state\n            FROM haven_users hd\n            LEFT JOIN web_db.user_profile up ON up.user_id = hd.user_id\n            LEFT JOIN web_db.address ad ON up.address_id = ad.id\n            ),\n         haven_credits AS (\n            SELECT DISTINCT\n                   uacc.user_id\n                 , credits.account_id\n                 , credits.total_credit\n                 , credits.count_credit\n            FROM (\n               SELECT d.account_id\n                    , sum(post.amount) AS total_credit\n                    , count(distinct post.id) AS count_credit\n               FROM web_db.galileo_posted_transaction gpt\n               JOIN web_db.posted_transaction post ON gpt.posted_transaction_id = post.id\n               JOIN web_db.depository d ON d.id = post.depository_id\n               WHERE gpt.transaction_description IN ('Aspiration Promotional Credit','Promotion - Term Life Insurance Quote','June 26 Duplicate Credit Reversal')\n                 AND gpt.transaction_amount = '10.00'\n                 AND gpt.rdf_date  IN ('2020-05-21', '2020-06-27', '2020-07-01', '2020-07-11', '2020-08-28', '2020-09-26')\n                 AND gpt.transaction_code_type = 'ADPA'\n               GROUP BY 1\n               ) credits\n            JOIN web_db.user_account uacc ON uacc.account_id = credits.account_id\n            ),\n         haven_accounts AS (\n            SELECT *\n            FROM (\n               SELECT upay.account_number AS prn\n                    , uapp.user_id\n                    , uapp.account_id\n                    , hs.haven_created_date::DATE AS haven_created_date\n                    , least(nvl(d.account_approved_time,current_date),nvl(d.inception_date,current_date),nvl(a.inception_date,current_date))::DATE AS asp_created_date\n                    , asp_created_date <= (hs.haven_created_date::DATE + 14) AS isbefore_haven\n                    , row_number() OVER (PARTITION BY uapp.account_id ORDER BY nvl(a.inception_date,current_date) ASC NULLS LAST, uapp.product_id ASC NULLS LAST) AS rownum\n               FROM haven_states hs\n               JOIN web_db.user_product_application uapp ON uapp.user_id = hs.user_id\n               JOIN web_db.account a ON a.id = uapp.account_id AND a.termination_date IS NULL AND nvl(a.is_admin_disabled,'false') <> 'true'\n               JOIN web_db.depository d ON d.account_id = a.id AND d.product_id = uapp.product_id\n               JOIN web_db.user_payment_account upay ON d.id = upay.depository_id\n                                                    AND upay.user_id = uapp.user_id\n                                                    AND nvl(upay.is_admin_disabled,'false') <> 'true'\n                                                    AND nvl(upay.is_deleted,'false') <> 'true'\n               )\n            WHERE rownum = 1\n            ),\n         haven_results AS (\n           SELECT *\n           FROM (\n              SELECT *\n                   , sum(case when isbefore_haven and isvalid_state then 10 end) over (partition by account_id order by haven_created_date rows between current row and unbounded following) AS credit_running\n                   , case when credit_running <= due_credit and isbefore_haven and isvalid_state then 10 else 0 end AS credit_amount\n              FROM (\n                 SELECT hs.user_id\n                      , ha.account_id\n                      , ha.prn\n                      , hs.haven_created_date\n                      , ha.asp_created_date\n                      , hs.isvalid_state\n                      , ha.isbefore_haven\n                      , sum(case when ha.isbefore_haven and hs.isvalid_state then 1 end) OVER (PARTITION BY ha.account_id) AS qualified_users\n                      , nvl(hc.count_credit,0) AS prior_transactions\n                      , trunc(nvl(hc.total_credit,0),2) AS prior_credit\n                      , trunc(qualified_users * 10,2) - prior_credit AS due_credit\n                 FROM haven_states hs\n                 LEFT JOIN haven_accounts ha ON ha.user_id = hs.user_id\n                 LEFT JOIN haven_credits hc ON hc.user_id = ha.user_id AND hc.account_id = ha.account_id\n                 WHERE hs.haven_created_date  BETWEEN '2020-11-20' AND ('2020-11-30'::DATE+1)\n                 )\n             )\n         WHERE credit_amount > 0\n         )\nSELECT row_number() over (order by 1)   ::VARCHAR AS record_number\n     , pr.prn\t\t\t\t\t\t\t::VARCHAR AS account_identifier\n     , '-10.00'\t\t\t           \t\t::VARCHAR AS transaction_amount\n     , 'LD_${run_history_id}-'\n       ||lpad(record_number,5,'0')\t\t::VARCHAR AS transaction_identifier\nFROM promo_results pr;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957787":{"id":2957787,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-160,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957782],"outputSuccessConnectorIDs":[2957780],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"batch"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS public.ucj_batch_file;\nCREATE TABLE public.ucj_batch_file (\n   ROWNUM\tBIGINT,\n   COL_01   VARCHAR(256),\n   COL_02   VARCHAR(256),\n   COL_03   VARCHAR(256),\n   COL_04   VARCHAR(256),\n   COL_05   VARCHAR(256),\n   COL_06   VARCHAR(256),\n   COL_07   VARCHAR(256),\n   COL_08   VARCHAR(256),\n   COL_09   VARCHAR(256),\n   COL_10   VARCHAR(256),\n   COL_11   VARCHAR(256)\n   );\nINSERT INTO public.ucj_batch_file (\n   SELECT 0\n\t\t, rpad('H'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 1  )\n\t\t, rpad('HEADER'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 6  )\n\t\t, rpad('454'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 10 )\n\t\t, rpad('584'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 10 )\n\t\t, rpad('btrans_584_'||to_char(dateadd(hour,-7,current_timestamp()),'YYYYMMDD')||'_228.txt.gpg'\t, 50 )\n\t\t, rpad(to_char(dateadd(hour,-7,current_timestamp()), 'MMDDYYYY')\t\t\t\t\t\t\t\t\t\t\t, 8  )\n\t\t, '', '', '', '', ''\n   );\nINSERT INTO public.ucj_batch_file (\n   SELECT record_number::bigint\n\t\t, record_type\n\t\t, record_number\n\t\t, account_id_type\n\t\t, account_identifier\n\t\t, location_id\n\t\t, location_type\n\t\t, transaction_type\n\t\t, transaction_sub_type\n\t\t, transaction_amount\n\t\t, transaction_description\n\t\t, transaction_identifier\n   FROM public.ucj_batch_stage\n   );\nINSERT INTO public.ucj_batch_file (\n   SELECT 999999\n        , rpad('T'\t\t\t\t, 1 )\n        , rpad('TRAILER'\t\t, 7 )\n        , rpad(count(1)::VARCHAR, 6 )\n        , '', '', '', '', '', '', '', ''\n   FROM public.ucj_batch_stage\n   );"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957788":{"id":2957788,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957783],"outputSuccessConnectorIDs":[2957781],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"cleanup"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS public.ucj_batch_promo;\nDROP TABLE IF EXISTS public.ucj_batch_stage;\nDROP TABLE IF EXISTS public.ucj_batch_file;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957789":{"id":2957789,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-320,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957776],"outputSuccessConnectorIDs":[2957777],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"promo"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS public.ucj_batch_promo;\nCREATE TABLE public.ucj_batch_promo AS\n      WITH\n         HAVEN_USERS AS (\n            SELECT DISTINCT\n                   HA._ID               AS OPPORTUNITY_ID\n                 , HA.ACCOUNTCREATEDATE AS HAVEN_CREATED_DATE\n                 , HA.EMAIL             AS EMAIL\n                 , NVL(U.ID,UE.USER_ID) AS USER_ID\n            FROM RDL.HAVENLIFE_ACTIVITY HA\n            LEFT JOIN WEB_DB._USER U ON U.UUID = HA.REFERRALID\n            LEFT JOIN WEB_DB.USER_EMAIL UE ON REGEXP_REPLACE(LOWER(UE.EMAIL),'\\\\+[^@]*@','@') = REGEXP_REPLACE(LOWER(HA.EMAIL),'\\\\+[^@]*@','@')\n            ),\n         HAVEN_STATES AS (\n            SELECT DISTINCT\n                   HD.USER_ID\n                 , FIRST_VALUE(HD.HAVEN_CREATED_DATE) OVER (PARTITION BY HD.USER_ID ORDER BY HD.HAVEN_CREATED_DATE ASC NULLS LAST ROWS UNBOUNDED PRECEDING) AS HAVEN_CREATED_DATE\n                 , (AD.STATE_ID NOT IN (2,4,54,13,15,19,29,32,34,41,47,31,28) AND AD.STATE_ID IS NOT NULL)                                                  AS ISVALID_STATE\n            FROM HAVEN_USERS HD\n            LEFT JOIN WEB_DB.USER_PROFILE UP ON UP.USER_ID = HD.USER_ID\n            LEFT JOIN WEB_DB.ADDRESS AD ON UP.ADDRESS_ID = AD.ID\n            WHERE ISVALID_STATE\n            ),\n         HAVEN_CREDITS AS (\n            SELECT DISTINCT\n                   UACC.USER_ID\n                 , CREDITS.ACCOUNT_ID\n                 , CREDITS.TOTAL_CREDIT\n                 , CREDITS.COUNT_CREDIT\n            FROM (\n               SELECT D.ACCOUNT_ID\n                    , SUM(POST.AMOUNT)        AS TOTAL_CREDIT\n                    , COUNT(DISTINCT POST.ID) AS COUNT_CREDIT\n               FROM WEB_DB.GALILEO_POSTED_TRANSACTION GPT\n               JOIN WEB_DB.POSTED_TRANSACTION POST ON GPT.POSTED_TRANSACTION_ID = POST.ID\n               JOIN WEB_DB.DEPOSITORY D ON D.ID = POST.DEPOSITORY_ID\n               WHERE GPT.TRANSACTION_DESCRIPTION IN ('Aspiration Promotional Credit','Promotion - Term Life Insurance Quote','June 26 Duplicate Credit Reversal','Promotion - Haven Life Insurance Quote')\n                 AND GPT.TRANSACTION_AMOUNT IN ('10.00','25.00','20.00')\n                 AND GPT.TRANSACTION_CODE_TYPE = 'ADPA'\n               GROUP BY 1\n               ) CREDITS\n            JOIN WEB_DB.USER_ACCOUNT UACC ON UACC.ACCOUNT_ID = CREDITS.ACCOUNT_ID\n            ),\n         HAVEN_ACCOUNTS AS (\n            SELECT *\n            FROM (\n               SELECT HS.USER_ID\n                    , UPAY.ACCOUNT_NUMBER                                                                                                  AS PRN\n                    , UAPP.ACCOUNT_ID\n                    , HS.HAVEN_CREATED_DATE::DATE                                                                                          AS HAVEN_CREATED_DATE\n                    , LEAST(D.ACCOUNT_APPROVED_TIME,D.INCEPTION_DATE,A.INCEPTION_DATE)::DATE                                               AS ASP_CREATED_DATE\n                    , ASP_CREATED_DATE <= (HS.HAVEN_CREATED_DATE::DATE + 14)                                                               AS ISBEFORE_HAVEN\n                    , ROW_NUMBER() OVER (PARTITION BY HS.USER_ID ORDER BY A.INCEPTION_DATE ASC NULLS LAST, UAPP.PRODUCT_ID ASC NULLS LAST) AS ROWNUM\n               FROM HAVEN_STATES HS\n               JOIN WEB_DB.USER_PRODUCT_APPLICATION UAPP ON UAPP.USER_ID = HS.USER_ID\n               JOIN WEB_DB.ACCOUNT A ON A.ID = UAPP.ACCOUNT_ID AND A.TERMINATION_DATE IS NULL AND NVL(A.IS_ADMIN_DISABLED,'false') <> 'true'\n               JOIN WEB_DB.DEPOSITORY D ON D.ACCOUNT_ID = A.ID AND D.PRODUCT_ID = UAPP.PRODUCT_ID\n               JOIN WEB_DB.USER_PAYMENT_ACCOUNT UPAY ON D.ID = UPAY.DEPOSITORY_ID AND UPAY.USER_ID = HS.USER_ID AND NVL(UPAY.IS_ADMIN_DISABLED,'false') <> 'true' AND NVL(UPAY.IS_DELETED,'false') <> 'true'\n               )\n            WHERE ROWNUM = 1\n            ),\n         PROMO_RESULTS AS (\n            SELECT *\n            FROM (\n               SELECT *\n                    , SUM(CASE WHEN ISBEFORE_HAVEN AND ISVALID_STATE THEN 10 END) OVER (PARTITION BY ACCOUNT_ID ORDER BY HAVEN_CREATED_DATE ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS CREDIT_RUNNING\n                    , CASE WHEN CREDIT_RUNNING <= DUE_CREDIT AND ISBEFORE_HAVEN AND ISVALID_STATE THEN 10 ELSE 0 END                                                                          AS CREDIT_AMOUNT\n               FROM (\n                  SELECT HS.USER_ID\n                       , HS.ISVALID_STATE\n                       , HS.HAVEN_CREATED_DATE\n                       , HA.ASP_CREATED_DATE\n                       , HA.ISBEFORE_HAVEN\n                       , HA.PRN\n                       , HA.ACCOUNT_ID\n                       , TRUNC(NVL(HC.TOTAL_CREDIT,0),2)                                         AS PRIOR_CREDIT\n                       , NVL(HC.COUNT_CREDIT,0)                                                  AS PRIOR_TRANSACTIONS\n                       , SUM(DECODE(HA.ISBEFORE_HAVEN,TRUE,1)) OVER (PARTITION BY HA.ACCOUNT_ID) AS QUALIFIED_USERS\n                       , TRUNC(QUALIFIED_USERS * 10,2) - PRIOR_CREDIT                            AS DUE_CREDIT\n                  FROM HAVEN_STATES HS\n                  LEFT JOIN HAVEN_ACCOUNTS HA ON HA.USER_ID = HS.USER_ID\n                  LEFT JOIN HAVEN_CREDITS HC ON HC.USER_ID = HA.USER_ID AND HC.ACCOUNT_ID = HA.ACCOUNT_ID\n                  WHERE HS.HAVEN_CREATED_DATE >= '2021-12-01'\n                    AND HS.HAVEN_CREATED_DATE < '2022-01-01'\n                  )\n               )\n            WHERE CREDIT_AMOUNT > 0\n            )\nSELECT row_number() over (order by 1)   ::VARCHAR AS record_number\n     , pr.prn\t\t\t\t\t\t\t::VARCHAR AS account_identifier\n     , '-20.00'\t\t\t           \t\t::VARCHAR AS transaction_amount\n     , 'LD_${run_history_id}-'\n       ||lpad(record_number,5,'0')\t\t::VARCHAR AS transaction_identifier\nFROM promo_results pr;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957790":{"id":2957790,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-80,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957780],"outputSuccessConnectorIDs":[2957783],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"output"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"copy into '@PUBLIC.ETL/file_processing/galileo_batch_transactions/batch_files/btrans_584_20220202_228.txt'\nfrom (\n  select COL_01\n\t   , COL_02\n\t   , COL_03\n\t   , COL_04\n\t   , COL_05\n\t   , COL_06\n\t   , COL_07\n\t   , COL_08\n\t   , COL_09\n\t   , COL_10\n\t   , COL_11\n  from public.ucj_batch_file\n  order by ROWNUM ASC\n  )\n\tfile_format=(\n      type=csv\n      compression=none\n      field_delimiter=none\n    )\n    single=true\n    ;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957791":{"id":2957791,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-496,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2957778,2957779],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2957777":{"id":2957777,"sourceID":2957789,"targetID":2957785},"2957780":{"id":2957780,"sourceID":2957787,"targetID":2957790},"2957781":{"id":2957781,"sourceID":2957788,"targetID":2957784},"2957782":{"id":2957782,"sourceID":2957785,"targetID":2957787},"2957783":{"id":2957783,"sourceID":2957790,"targetID":2957788}},"failureConnectors":{},"unconditionalConnectors":{"2957776":{"id":2957776,"sourceID":2957762,"targetID":2957789},"2957778":{"id":2957778,"sourceID":2957791,"targetID":2957786},"2957779":{"id":2957779,"sourceID":2957791,"targetID":2957762}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"2957760":{"id":2957760,"x":118,"y":172,"width":382,"height":83,"text":"**``TRAILER``**\n\n0**\tCOLUMN .         L    S    E    VALUE        REQ**\n1  RECORD_TYPE   1    1    1    \"T\"               Y\n2  TRAILER              7    2    8    \"TRAILER\"   Y\n3  COUNT               6    9    14   999999       Y","colour":"e6e63c"},"2957761":{"id":2957761,"x":117,"y":-163,"width":382,"height":129,"text":"**``HEADER``**\n\n0**  COLUMN                        L      S     E      VAL                   REQ**\n1   RECORD_TYPE                1      1     1      \"H\"                    Y\n2   HEADER                           6      2     7      \"HEADER\"        Y\n3   CLIENT_ID                       10    8     17    454                    Y\n4   PROGRAM_ID                 10   18    27    584\n5   FILE_NAME                      50   28   77    var                     Y\n6   FILE_TRANSMIT_DATE   8     78   85    MMDDYYYY      Y","colour":"e6e63c"},"2957763":{"id":2957763,"x":117,"y":-30,"width":382,"height":198,"text":"**``DETAIL``**\n\n0**   COLUMN                                       L      S       E      VALUE           REQ**\n1    RECORD_TYPE                               1     1       1      \"D\"                   Y\n2    RECORD_NUMBER                        6     2       7      999999           Y\n3    ACCOUNT_ID_TYPE                      1      8       8      R                      Y\n4    ACCOUNT_IDENTIFIER                 50    9      58    PRN                 Y\n5    LOCATION_ID                                1      59    59                             N\n6    LOCATION_TYPE                           20    60    79                             N\n7    TRANSACTION_TYPE                    1      80    80     var                   Y\n8    TRANSACTION_SUB_TYPE           3      81    83                             N\n9    TRANSACTION_AMOUNT            13    84    96    1234567891   Y\n10  TRANSACTION_DESCRIPTION    40    97    136   var                  N\n11  TRANSACTION_IDENTIFIER         20    137  156                          N","colour":"e6e63c"},"2957764":{"id":2957764,"x":-104,"y":-70,"width":47,"height":106,"text":"Filename","colour":"e6e63c"},"2957765":{"id":2957765,"x":-341,"y":56,"width":283,"height":138,"text":"Types\nA: adjustment\n\nSubtypes\nPA: promotion...\nCD: cashback?","colour":"e6e63c"},"2957766":{"id":2957766,"x":-342,"y":-70,"width":44,"height":106,"text":"Query\nAmount","colour":"e6e63c"},"2957767":{"id":2957767,"x":-263,"y":-69,"width":46,"height":105,"text":"Descript\nType\nSubtype","colour":"e6e63c"}},"variables":{"batch_table":{"definition":{"name":"batch_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"tmp_batch_file"},"file_number":{"definition":{"name":"file_number","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"input_bucket":{"definition":{"name":"input_bucket","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"s3://aspiration-etl-staging/file_processing/galileo_batch_transactions/batch_files"},"input_filename":{"definition":{"name":"input_filename","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"passed_variable"},"staging_table":{"definition":{"name":"staging_table","type":"TEXT","scope":"BRANCH","description":"","visibility":"PRIVATE"},"value":"tmp_batch_stage"}},"grids":{}},"info":{"name":"promo_havenlife","description":"","type":"ORCHESTRATION","tag":"7c4f12c9-a722-48ec-99a7-6654c8e15b8e"}}