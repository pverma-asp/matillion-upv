{"job":{"components":{"2957904":{"id":2957904,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-160,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957907],"outputSuccessConnectorIDs":[2957996],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"batch"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS public.ucj_batch_file;\nCREATE TABLE public.ucj_batch_file (\n   ROWNUM\tBIGINT,\n   COL_01   VARCHAR(256),\n   COL_02   VARCHAR(256),\n   COL_03   VARCHAR(256),\n   COL_04   VARCHAR(256),\n   COL_05   VARCHAR(256),\n   COL_06   VARCHAR(256),\n   COL_07   VARCHAR(256),\n   COL_08   VARCHAR(256),\n   COL_09   VARCHAR(256),\n   COL_10   VARCHAR(256),\n   COL_11   VARCHAR(256)\n   );\nINSERT INTO public.ucj_batch_file (\n   SELECT 0\n\t\t, rpad('H'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 1  )\n\t\t, rpad('HEADER'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 6  )\n\t\t, rpad('454'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 10 )\n\t\t, rpad('584'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, 10 )\n\t\t, rpad('btrans_584_'||to_char(dateadd(hour,-7,current_timestamp()),'YYYYMMDD')||'_228.txt.gpg'\t, 50 )\n\t\t, rpad(to_char(dateadd(hour,-7,current_timestamp()), 'MMDDYYYY')\t\t\t\t\t\t\t\t\t\t\t, 8  )\n\t\t, '', '', '', '', ''\n   );\nINSERT INTO public.ucj_batch_file (\n   SELECT record_number::bigint\n\t\t, record_type\n\t\t, record_number\n\t\t, account_id_type\n\t\t, account_identifier\n\t\t, location_id\n\t\t, location_type\n\t\t, transaction_type\n\t\t, transaction_sub_type\n\t\t, transaction_amount\n\t\t, transaction_description\n\t\t, transaction_identifier\n   FROM public.ucj_batch_stage\n   );\nINSERT INTO public.ucj_batch_file (\n   SELECT 999999\n        , rpad('T'\t\t\t\t, 1 )\n        , rpad('TRAILER'\t\t, 7 )\n        , rpad(count(1)::VARCHAR, 6 )\n        , '', '', '', '', '', '', '', ''\n   FROM public.ucj_batch_stage\n   );"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957905":{"id":2957905,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-80,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957996],"outputSuccessConnectorIDs":[2957999],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"output"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"copy into '@PUBLIC.ETL/file_processing/galileo_batch_transactions/batch_files/btrans_584_20201209_229.txt'\nfrom (\n  select COL_01\n\t   , COL_02\n\t   , COL_03\n\t   , COL_04\n\t   , COL_05\n\t   , COL_06\n\t   , COL_07\n\t   , COL_08\n\t   , COL_09\n\t   , COL_10\n\t   , COL_11\n  from public.ucj_batch_file\n  order by ROWNUM ASC\n  )\n\tfile_format=(\n      type=csv\n      compression=none\n      field_delimiter=none\n    )\n    single=true\n    ;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957908":{"id":2957908,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-416,"y":80,"width":32,"height":32,"inputConnectorIDs":[2957992],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AccOpen"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--Promotion - Account Opening\nDROP TABLE IF EXISTS ${staging_schema}.${staging_table};\nCREATE TABLE ${staging_schema}.${staging_table} AS\nWITH\n   promo_users AS (\n      SELECT DISTINCT\n             ue.user_id\n      FROM ucj.july_flash_list jfl\n      LEFT JOIN web_db.user_email ue ON regexp_replace(lower(ue.email),'\\\\+[^@]*@','@') = regexp_replace(lower(jfl.email),'\\\\+[^@]*@','@')\n      WHERE ue.user_id is not null\n      ),\n   promo_accounts AS (\n      SELECT *\n      FROM (\n         SELECT upay.account_number AS prn\n              , uapp.user_id\n              , uapp.account_id\n              , least(d.account_approved_time,d.inception_date,a.inception_date)::DATE AS asp_inception_date\n              , row_number()\n                OVER (PARTITION BY uapp.account_id ORDER BY a.inception_date ASC NULLS LAST, uapp.product_id ASC NULLS LAST) AS rownum\n         FROM promo_users pu\n         JOIN web_db.user_product_application uapp ON uapp.user_id = pu.user_id\n         JOIN web_db.account a ON a.id = uapp.account_id AND a.termination_date IS NULL AND nvl(a.is_admin_disabled,'false') <> 'true'\n         JOIN web_db.depository d ON d.account_id = a.id AND d.product_id = uapp.product_id\n         JOIN web_db.user_payment_account upay ON d.id = upay.depository_id\n                                              AND upay.user_id = uapp.user_id\n                                              AND nvl(upay.is_admin_disabled,'false') <> 'true'\n                                              AND nvl(upay.is_deleted,'false') <> 'true'\n         WHERE ((( asp_inception_date::date ) >= (CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', TIMESTAMP '2020-07-22')) AND ( asp_inception_date::date ) < (CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', TIMESTAMP '2020-07-26'))))\n         )\n      WHERE rownum = 1\n      ),\n   balance_records AS (\n      SELECT gbal.file_date\n           , asp_gal.account_id\n           , decode(gbal.type_of_account,8,'Savings',6,'Checking') depository_type\n           , sum(concat(gbal.current_balance_sign,gbal.current_balance)::DEC(18,2)) AS balance\n      FROM (\n         SELECT DISTINCT uapp.account_id, aog.galileo_account_number\n         FROM promo_accounts pa\n         JOIN web_db.user_product_application uapp ON uapp.account_id = pa.account_id\n         JOIN aog_db.galileo_accounts aog ON uapp.id = aog.aspiration_application_id AND uapp.user_id = aog.aspiration_user_id\n         ) asp_gal\n      JOIN rdl.raw_galileo_customer_master_data gbal ON asp_gal.galileo_account_number = gbal.galileo_account_id\n      GROUP BY gbal.file_date\n             , asp_gal.account_id\n             , gbal.type_of_account\n      ),\n   records_start AS (\n      SELECT min(file_date) AS start_date\n      FROM balance_records\n      ),\n   numbers AS (\n      SELECT 0 AS number\n      UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3\n      UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6\n      UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9\n      ),\n   records_dates AS (\n      SELECT (n1.number::VARCHAR || n2.number::VARCHAR || n3.number::VARCHAR)::BIGINT AS num\n           , concat(to_char(('2019-01-01'::DATE + num),'YYYY-MM'),'-01')::DATE AS month\n           , to_char(('2019-01-01'::DATE + num),'YYYY-MM-DD')::DATE AS date\n      FROM numbers n1 CROSS JOIN numbers n2 CROSS JOIN numbers n3\n      CROSS JOIN records_start rs\n      WHERE date <= sysdate\n        AND date >= rs.start_date\n      ),\n   daily_balance AS (\n      SELECT rd.month\n           , rd.date\n           , pa.account_id\n           , bal.depository_type\n           , last_value(bal.balance IGNORE NULLS)\n             OVER (PARTITION BY bal.account_id, bal.depository_type ORDER BY rd.date ASC ROWS UNBOUNDED PRECEDING) AS balance\n      FROM records_dates rd\n      CROSS JOIN promo_accounts pa\n      LEFT JOIN balance_records bal ON bal.file_date = rd.date AND bal.account_id = pa.account_id\n      ),\n   accounts_standing AS (\n      SELECT account_id\n           , min(balance) < 0 AS has_od\n           , max(balance) >= 10 AS has_funded\n      FROM daily_balance\n      GROUP BY account_id\n      ),\n   promo_results AS (\n       SELECT pa.prn\n            , pa.account_id\n            , pa.asp_inception_date\n            , pa.user_id\n            , sum(1) over (partition by pa.user_id) AS user_row_count\n            , sum(1) over (partition by pa.account_id) AS account_row_count\n            , nvl(ast.has_funded,false) AS funded\n            , nvl(ast.has_od,false) AS overdraft\n            , case when overdraft = false and funded = true then true else false end AS qualified\n       FROM promo_accounts pa\n       LEFT JOIN accounts_standing ast ON ast.account_id = pa.account_id\n       WHERE qualified\n   )\nSELECT '${run_history_id}'\t\t\t ::VARCHAR \t    AS etl_run_history_id\n, lpad(3::VARCHAR,2,'0') \t\t\t ::VARCHAR \t    AS etl_batch_number\n, row_number() over()     \t\t\t ::BIGINT  \t    AS etl_rownum\n, pr.prn\t\t\t\t\t\t\t ::VARCHAR \t    AS account_identifier\n, -25               \t  \t\t\t ::DECIMAL(8,4) AS transaction_amount\n, 'FL_'||'${run_history_id}'||'-'||\n etl_batch_number::VARCHAR||\n '-'||\n lpad(etl_rownum::VARCHAR,5,'0')     ::VARCHAR \t\tAS transaction_identifier\nFROM promo_results pr;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957909":{"id":2957909,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-320,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957993],"outputSuccessConnectorIDs":[2957906],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"promo"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS public.ucj_batch_promo;\nCREATE TABLE public.ucj_batch_promo AS\nWITH\n   participants AS (\n      SELECT DISTINCT\n             usr.id AS user_id\n      FROM public.ucj_adhoc_aplus ah\n      LEFT JOIN web_db._user usr ON usr.uuid = ah.uuid\n      --WHERE ue.user_id is not null\n      ),\n   promo_accounts AS (\n      SELECT *\n      FROM (\n         SELECT upay.account_number AS prn\n              , uapp.user_id\n              , uapp.account_id\n              , least(nvl(d.account_approved_time,current_date),nvl(d.inception_date,current_date),nvl(a.inception_date,current_date))::DATE AS asp_inception_date\n              , row_number() OVER (PARTITION BY uapp.account_id ORDER BY nvl(a.inception_date,current_date) ASC NULLS LAST, uapp.product_id ASC NULLS LAST) AS rownum\n         FROM participants usr\n         LEFT JOIN web_db.user_product_application uapp ON uapp.user_id = usr.user_id\n         LEFT JOIN web_db.account a ON a.id = uapp.account_id AND a.termination_date IS NULL AND nvl(a.is_admin_disabled,'false') <> 'true'\n         LEFT JOIN web_db.depository d ON d.account_id = a.id AND d.product_id = uapp.product_id\n         LEFT JOIN web_db.user_payment_account upay ON d.id = upay.depository_id AND upay.user_id = uapp.user_id AND nvl(upay.is_admin_disabled,'false') <> 'true' AND nvl(upay.is_deleted,'false') <> 'true'\n         --WHERE asp_inception_date::DATE >= '2019-06-20' AND asp_inception_date::DATE < '2019-09-15'\n         )\n      WHERE rownum = 1\n      ),\n   subscribe_accounts AS (\n         SELECT usr.user_id\n              , usr.account_id\n              , usr.prn\n              , sub.subscription_id\n              , sub.plan_id\n              , sub.billing_cycle_anchor\n              , sub.created_at AS subscribe_date\n              , sub_inv.invoice_id\n              , sub_inv.plan_id AS plan_invoice\n              , sub_inv.amount_due\n              , sub_inv.billing_reason\n              , sub_inv.period_start\n              , sub_inv.period_end\n              , sub_inv.created_at AS invoice_date\n              , row_number() over (partition by usr.account_id order by sub_inv.period_start asc) AS invoice_number\n         FROM promo_accounts usr\n         LEFT JOIN web_db.subscription sub ON sub.account_id = usr.account_id\n         LEFT JOIN web_db.subscription pre_sub ON pre_sub.account_id = usr.account_id AND pre_sub.created_at::date < '2020-10-31' AND pre_sub.status = 'active'\n         LEFT JOIN web_db.subscription_invoice sub_inv ON sub_inv.subscription_id = sub.subscription_id\n         WHERE sub.created_at::date >= '2020-10-31' AND sub.created_at::date < '2020-11-08'\n           AND pre_sub.subscription_id is null\n           AND sub_inv.status = 'paid'\n      ),\n   balance_records AS (\n      SELECT gbal.file_date\n           , asp_gal.account_id\n           , decode(gbal.type_of_account,8,'Savings',6,'Checking') depository_type\n           , sum(concat(trim(gbal.current_balance_sign),trim(gbal.current_balance))::DEC(18,2)) AS balance\n      FROM (\n         SELECT DISTINCT uapp.account_id, aog.galileo_account_number\n         FROM promo_accounts pa\n         JOIN web_db.user_product_application uapp ON uapp.account_id = pa.account_id\n         JOIN aog_db.galileo_accounts aog ON uapp.id = aog.aspiration_application_id AND uapp.user_id = aog.aspiration_user_id\n         ) asp_gal\n      JOIN rdl.raw_galileo_customer_master_data gbal ON asp_gal.galileo_account_number = gbal.galileo_account_id\n      GROUP BY gbal.file_date\n             , asp_gal.account_id\n             , gbal.type_of_account\n      ),\n   accounts_start AS (\n      SELECT account_id\n           , min(file_date)-1 AS start_date\n      FROM balance_records\n      GROUP BY account_id\n      ),\n   numbers AS (\n      SELECT 0 AS number\n      UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4\n      UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8\n      UNION ALL SELECT 9\n      ),\n   records_dates AS (\n      SELECT rs.account_id\n           , (n1.number::VARCHAR || n2.number::VARCHAR || n3.number::VARCHAR)::BIGINT AS num\n           , concat(to_char(('2019-01-01'::DATE + num),'YYYY-MM'),'-01')::DATE AS month\n           , to_char(('2019-01-01'::DATE + num),'YYYY-MM-DD')::DATE AS date\n      FROM numbers n1\n      CROSS JOIN numbers n2\n      CROSS JOIN numbers n3\n      CROSS JOIN accounts_start rs\n      WHERE date <= current_date+1\n        AND date >= rs.start_date\n      ),\n   daily_balance AS (\n      SELECT rd.month\n           , rd.date\n           , rd.account_id\n           , nvl(last_value(spend.balance IGNORE NULLS) OVER (PARTITION BY rd.account_id ORDER BY rd.date ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) AS balance_spend\n           , nvl(last_value(save.balance IGNORE NULLS) OVER (PARTITION BY rd.account_id ORDER BY rd.date ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) AS balance_save\n           , nvl(balance_spend,0)+nvl(balance_save,0) AS balance_combined\n      FROM records_dates rd\n      LEFT JOIN balance_records spend ON spend.file_date = rd.date AND spend.account_id = rd.account_id AND spend.depository_type = 'Checking'\n      LEFT JOIN balance_records save ON save.file_date = rd.date AND save.account_id = rd.account_id AND save.depository_type = 'Savings'\n      ),\n   accounts_standing AS (\n      SELECT account_id\n           , min(balance_spend) < 0   OR min(balance_save) < 0   AS has_od\n           , max(balance_spend) >= 10 OR max(balance_save) >= 10 AS has_funded\n      FROM daily_balance\n      GROUP BY account_id\n      ),\n   accounts_credited AS (\n      SELECT pa.account_id\n           , sum(post.amount) AS total_credit\n           , count(DISTINCT post.id) AS count_credit\n      FROM promo_accounts pa\n      JOIN web_db.depository d ON d.account_id = pa.account_id\n      JOIN web_db.posted_transaction post ON d.id = post.depository_id\n      JOIN web_db.galileo_posted_transaction gpt ON gpt.posted_transaction_id = post.id\n      WHERE (post.description = 'Aspiration Plus Fee Rebate - Promotion' OR gpt.transaction_description = 'Aspiration Plus Fee Rebate - Promotion')\n      GROUP BY 1\n      ),\n   accounts_cards AS (\n      SELECT DISTINCT cards.prn\n      FROM promo_accounts pa\n      JOIN web_db.depository d ON d.account_id = pa.account_id\n      JOIN web_db.posted_transaction post ON d.id = post.depository_id\n      JOIN web_db.galileo_posted_transaction gpt ON gpt.posted_transaction_id = post.id\n      JOIN rdl.raw_galileo_account_card_data cards ON gpt.prn = cards.prn\n      WHERE cards.type_of_card IN (2,25,3) --includes virtual\n      ),\n   accounts_debits AS (\n      SELECT pa.account_id\n           , count(1) AS count_trans\n           , sum(case when post.transaction_date >= '2020-09-04'::DATE AND post.transaction_date < '2020-09-08'::DATE then post.amount end)*-1 AS sum_trans\n      FROM promo_accounts pa\n      JOIN web_db.depository d ON d.account_id = pa.account_id\n      JOIN web_db.posted_transaction post ON d.id = post.depository_id\n      JOIN web_db.galileo_posted_transaction gpt ON gpt.posted_transaction_id = post.id\n      JOIN accounts_cards cards ON gpt.prn = cards.prn\n      WHERE post.transaction_date >= '2020-09-04'::DATE\n        AND post.transaction_date < '2020-10-01'::DATE\n        AND gpt.transaction_code_type IN ('ADdh'   --'Debit Chargeback',\n                                         ,'ADdj'   --'Debit 2nd Presentment',\n                                         ,'ISA'    --'Purchase with PIN',\n                                         ,'ISC'    --'Pre-auth completion',\n                                         ,'ISL'    --'Auth',\n                                         ,'SDA'    --'Purchase with PIN',\n                                         ,'SDC'    --'Pre-auth completion',\n                                         ,'SDL'    --'Retail Sale',\n                                         ,'SE5'    --'Purchase',\n                                         ,'SE8')   --'Unique Transactions',\n      GROUP BY 1\n      ),\n   promo_results AS (\n      SELECT pa.prn\n           , pa.account_id\n           , pa.user_id\n           , sum(1) OVER (PARTITION BY pa.user_id) AS user_row_count\n           , sum(1) OVER (PARTITION BY pa.account_id) AS account_row_count\n           , nvl(ast.has_funded,FALSE) AS funded\n           , nvl(ast.has_od,FALSE) AS overdraft\n           , nvl(ac.count_credit,0) AS prior_credits\n           , trunc(nvl(ac.total_credit,0),2) AS prior_amount\n           , trunc(greatest(case when pa.plan_invoice like '%yearly%' then greatest(17.25 - prior_amount,0) else least(21.0 - prior_amount, 7.0) end,0),2) AS credit_amount\n      FROM subscribe_accounts pa\n      LEFT JOIN accounts_standing ast ON ast.account_id = pa.account_id\n      LEFT JOIN accounts_credited ac ON ac.account_id = pa.account_id\n      WHERE pa.invoice_number > prior_credits\n        AND credit_amount > 0\n\n      )\nSELECT row_number() over (order by 1)  \t\t\t\t\t\t::VARCHAR AS record_number\n     , pr.prn\t\t\t\t\t\t   \t\t\t\t\t\t::VARCHAR AS account_identifier\n     , trunc(pr.credit_amount * -1,2)  \t\t\t\t\t\t::VARCHAR AS transaction_amount\n     , 'AP_${run_history_id}-'||lpad(record_number,5,'0')\t::VARCHAR AS transaction_identifier\nFROM promo_results pr\nUNION ALL\nSELECT 11                                  \t\t\t\t\t::VARCHAR AS record_number\n     , '223108036318'\t\t\t\t\t \t\t\t\t\t::VARCHAR AS account_identifier\n     , '-7.00'                                 \t\t\t\t::VARCHAR AS transaction_amount\n     , 'AP_${run_history_id}-' || lpad(record_number,5,'0')\t::VARCHAR AS transaction_identifier\nUNION ALL\nSELECT 12                                  \t\t\t\t\t::VARCHAR AS record_number\n     , '223108010875'\t\t\t\t\t \t\t\t\t\t::VARCHAR AS account_identifier\n     , '-7.00'                                 \t\t\t\t::VARCHAR AS transaction_amount\n     , 'AP_${run_history_id}-' || lpad(record_number,5,'0')\t::VARCHAR AS transaction_identifier\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957910":{"id":2957910,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-496,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2957992,2957998],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957911":{"id":2957911,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957999],"outputSuccessConnectorIDs":[2957997],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"cleanup"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS public.ucj_batch_promo;\nDROP TABLE IF EXISTS public.ucj_batch_stage;\nDROP TABLE IF EXISTS public.ucj_batch_file;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957912":{"id":2957912,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-240,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957906],"outputSuccessConnectorIDs":[2957907],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"stage"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS public.ucj_batch_stage;\nCREATE TABLE public.ucj_batch_stage AS \n   SELECT rpad('D'\t\t\t\t\t\t\t\t\t\t, 1  ) AS record_type\n\t\t, rpad(record_number          \t\t\t\t\t, 6  ) AS record_number\n\t\t, rpad('R'\t\t\t\t\t\t\t\t\t\t, 1  ) AS account_id_type\n\t\t, rpad(account_identifier\t\t\t\t\t\t, 50 ) AS account_identifier\n\t\t, rpad(''\t\t\t\t\t\t\t\t\t\t, 1  ) AS location_id\n\t\t, rpad(''\t\t\t\t\t\t\t\t\t\t, 20 ) AS location_type\n\t\t, rpad('A'\t\t\t\t\t\t\t\t\t\t, 1  ) AS transaction_type\n\t\t, rpad('PA'\t\t\t\t\t\t\t\t\t\t, 3  ) AS transaction_sub_type\n\t\t, rpad(transaction_amount        \t\t\t\t, 13 ) AS transaction_amount\n\t\t, rpad('Aspiration Plus Fee Rebate - Promotion'\t, 40 ) AS transaction_description\n\t\t, rpad(transaction_identifier          \t\t\t, 20 ) AS transaction_identifier\n   FROM public.ucj_batch_promo;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957914":{"id":2957914,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-416,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957998],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2957993],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Variables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Udating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport datetime\n\n#add run_history_id to create a unique temp table for parrallel processing\ncontext.updateVariable(\"staging_table\", staging_table + str(run_history_id))\n\n#add YYYYMMDD to batch_filename varible \n#add value in batch_filename_sequence variable\n#Note: date calc rolls to next day when processed after 5pm MT or 4pm PT (Galileo is no longer processing at this time)\n#context.updateVariable(\"batch_filename\", batch_filename + datetime.date.today().strftime('%Y') + datetime.date.today().strftime('%m') + datetime.date.today().strftime('%d') + str(run_history_id) + '.txt')"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957915":{"id":2957915,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":80,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957997],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2957906":{"id":2957906,"sourceID":2957909,"targetID":2957912},"2957907":{"id":2957907,"sourceID":2957912,"targetID":2957904},"2957996":{"id":2957996,"sourceID":2957904,"targetID":2957905},"2957997":{"id":2957997,"sourceID":2957911,"targetID":2957915},"2957999":{"id":2957999,"sourceID":2957905,"targetID":2957911}},"failureConnectors":{},"unconditionalConnectors":{"2957992":{"id":2957992,"sourceID":2957910,"targetID":2957908},"2957993":{"id":2957993,"sourceID":2957914,"targetID":2957909},"2957998":{"id":2957998,"sourceID":2957910,"targetID":2957914}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"2957901":{"id":2957901,"x":118,"y":172,"width":382,"height":83,"text":"**``TRAILER``**\n\n0**\tCOLUMN .         L    S    E    VALUE        REQ**\n1  RECORD_TYPE   1    1    1    \"T\"               Y\n2  TRAILER              7    2    8    \"TRAILER\"   Y\n3  COUNT               6    9    14   999999       Y","colour":"e6e63c"},"2957902":{"id":2957902,"x":-104,"y":-70,"width":47,"height":106,"text":"Filename","colour":"e6e63c"},"2957903":{"id":2957903,"x":117,"y":-30,"width":382,"height":198,"text":"**``DETAIL``**\n\n0**   COLUMN                                       L      S       E      VALUE           REQ**\n1    RECORD_TYPE                               1     1       1      \"D\"                   Y\n2    RECORD_NUMBER                        6     2       7      999999           Y\n3    ACCOUNT_ID_TYPE                      1      8       8      R                      Y\n4    ACCOUNT_IDENTIFIER                 50    9      58    PRN                 Y\n5    LOCATION_ID                                1      59    59                             N\n6    LOCATION_TYPE                           20    60    79                             N\n7    TRANSACTION_TYPE                    1      80    80     var                   Y\n8    TRANSACTION_SUB_TYPE           3      81    83                             N\n9    TRANSACTION_AMOUNT            13    84    96    1234567891   Y\n10  TRANSACTION_DESCRIPTION    40    97    136   var                  N\n11  TRANSACTION_IDENTIFIER         20    137  156                          N","colour":"e6e63c"},"2957913":{"id":2957913,"x":-342,"y":-132,"width":284,"height":43,"text":"also two job variables for temp tables can be changed but not required.","colour":"e6e63c"},"2957916":{"id":2957916,"x":-342,"y":-70,"width":44,"height":106,"text":"Query\nAmount","colour":"e6e63c"},"2957917":{"id":2957917,"x":-263,"y":-69,"width":46,"height":105,"text":"Descript\nType\nSubtype","colour":"e6e63c"},"2957918":{"id":2957918,"x":-341,"y":56,"width":283,"height":138,"text":"Types\nA: adjustment\n\nSubtypes\nPA: promotion...\nCD: cashback?","colour":"e6e63c"},"2957919":{"id":2957919,"x":117,"y":-163,"width":382,"height":129,"text":"**``HEADER``**\n\n0**  COLUMN                        L      S     E      VAL                   REQ**\n1   RECORD_TYPE                1      1     1      \"H\"                    Y\n2   HEADER                           6      2     7      \"HEADER\"        Y\n3   CLIENT_ID                       10    8     17    454                    Y\n4   PROGRAM_ID                 10   18    27    584\n5   FILE_NAME                      50   28   77    var                     Y\n6   FILE_TRANSMIT_DATE   8     78   85    MMDDYYYY      Y","colour":"e6e63c"}},"variables":{"batch_table":{"definition":{"name":"batch_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"tmp_batch_file"},"file_number":{"definition":{"name":"file_number","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"input_bucket":{"definition":{"name":"input_bucket","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"s3://aspiration-etl-staging/file_processing/galileo_batch_transactions/batch_files"},"input_filename":{"definition":{"name":"input_filename","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"passed_variable"},"staging_table":{"definition":{"name":"staging_table","type":"TEXT","scope":"BRANCH","description":"","visibility":"PRIVATE"},"value":"tmp_batch_stage"}},"grids":{}},"info":{"name":"promo_newaccount","description":"","type":"ORCHESTRATION","tag":"91b08e4d-eb96-49de-ae00-0841d469ca26"}}