{"job":{"components":{"2957468":{"id":2957468,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-960,"y":160,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2957465],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957470":{"id":2957470,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-880,"y":160,"width":32,"height":32,"inputConnectorIDs":[2957465],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2957464],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python Script 0"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\ncontext.updateVariable(\"source_column_list\", \"S.\" + column_list.replace(\" \",\"\").replace(\",\",\",S.\"))\ncontext.updateVariable(\"target_hashkey\", \"md5(coalesce(T.\" + pk_cols.replace(\" \",\"\").replace(\",\",\"::varchar,'')||coalesce(T.\") + \"::varchar,''))\")\ncontext.updateVariable(\"target_hashrow\", \"md5(coalesce(T.\" + column_list.replace(\" \",\"\").replace(\",\",\"::varchar,'')||coalesce(T.\") + \"::varchar,''))\")\n#print(target_hashrow)\n#print(target_hashkey)\n#print(source_column_list)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957471":{"id":2957471,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-800,"y":160,"width":32,"height":32,"inputConnectorIDs":[2957464],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"append_target"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"CREATE OR REPLACE TABLE ${target_schema}.${target_table} CLONE ${target_schema}_STG.${target_table};\n/*\nCREATE TABLE IF NOT EXISTS ${target_schema}.${target_table} AS (\n  SELECT ${column_list}, ETL_LOAD_DATE\n  FROM ${target_schema}_STG.${target_table}\n  LIMIT 0);\nMERGE INTO ${target_schema}.${target_table} T\n\t USING ${target_schema}_STG.${target_table} S ON S.hashkey = ${target_hashkey} AND (S.hashrow = ${target_hashrow} OR (S.hashrow <> ${target_hashrow} AND S.record_action = 'DELETE'))\n  \t  WHEN MATCHED AND S.hashrow <> ${target_hashrow} THEN DELETE\n  \t  WHEN NOT MATCHED AND S.record_action = 'INSERT' THEN INSERT (${column_list}, ETL_LOAD_DATE) VALUES (${source_column_list}, S.ETL_LOAD_DATE);\n      */"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{},"unconditionalConnectors":{"2957464":{"id":2957464,"sourceID":2957470,"targetID":2957471},"2957465":{"id":2957465,"sourceID":2957468,"targetID":2957470}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"column_list":{"definition":{"name":"column_list","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"item_reference_id, endpoint, user_id, response, request, created_at"},"pk_cols":{"definition":{"name":"pk_cols","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"item_reference_id"},"source_column_list":{"definition":{"name":"source_column_list","type":"TEXT","scope":"BRANCH","description":"","visibility":"PRIVATE"},"value":""},"target_hashkey":{"definition":{"name":"target_hashkey","type":"TEXT","scope":"BRANCH","description":"","visibility":"PRIVATE"},"value":""},"target_hashrow":{"definition":{"name":"target_hashrow","type":"TEXT","scope":"BRANCH","description":"","visibility":"PRIVATE"},"value":""},"target_schema":{"definition":{"name":"target_schema","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"web_db"},"target_table":{"definition":{"name":"target_table","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"user_product_application"}},"grids":{}},"info":{"name":"cj_append_data","description":"","type":"ORCHESTRATION","tag":"a83df78e-3b5d-4aee-b4db-9783363ba038"}}