{"job":{"components":{"2957324":{"id":2957324,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-192,"y":224,"width":32,"height":32,"inputConnectorIDs":[2957322],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of encrypt_file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\n#python function to call lambda to encrypt s3 file to send to galileo\nimport time\n\nbody = json.dumps(dict(operation='dec',\n                       file='s3://aspiration-datateam/dump/szhang/${galileo_filename}.out.gpg',\n                       encrypted_file_path='s3://aspiration-datateam/dump/szhang',\n                       gpg_key='galileo_secret_key',\n                       extension='gpg'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:prod-python-encrypt-decrypt-manual',\n    InvocationType='Event',\n    LogType='Tail',\n    Payload=body\n    )\n\n\nrun_lambda()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957325":{"id":2957325,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-192,"y":128,"width":32,"height":32,"inputConnectorIDs":[2957323],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2957322],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"get_file_from_galileo"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\n#python function to call lambda to encrypt s3 file to send to galileo\n\n\nbody = json.dumps(dict(operation='get',\n                       working_dir='/sftpdir/response',\n                       s3_output='s3://aspiration-datateam/dump/szhang/${galileo_filename}.out.gpg',\n                       sftp_file_name='${galileo_filename}.out.gpg',\n                       lambda_arn='None'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:sftp-to-s3-python',\n    InvocationType='Event',\n    LogType='Tail',\n    Payload=body\n    )\n\nprint ('send file to galileo:', 's3://aspiration-datateam/dump/szhang/${galileo_filename}')\nrun_lambda()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957344":{"id":2957344,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":0,"y":176,"width":32,"height":32,"inputConnectorIDs":[2957321],"outputSuccessConnectorIDs":[2957327],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"encrypt_file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\n#python function to call lambda to encrypt s3 file to send to galileo\nimport time\n\nbody = json.dumps(dict(operation='enc',file='s3://aspiration-datateam/dump/szhang/${galileo_filename}',\n                       encrypted_file_path='s3://aspiration-datateam/dump/szhang',\n                       gpg_key='galileo_public_key',\n                       extension='gpg'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:prod-python-encrypt-decrypt-manual',\n    InvocationType='Event',\n    LogType='Tail',\n    Payload=body\n    )\n\n\nprint ('encrypt file:', 's3://aspiration-datateam/dump/szhang/${galileo_filename}')\nrun_lambda()\n\nprint ('wait 30 seconds for gpg file generation')\ntime.sleep(15)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957345":{"id":2957345,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-200,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2957320,2957323],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957346":{"id":2957346,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":0,"y":256,"width":32,"height":32,"inputConnectorIDs":[2957327],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"send_file_to_galileo"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\n#python function to call lambda to encrypt s3 file to send to galileo\n\n\nbody = json.dumps(dict(operation='put',working_dir='/sftpdir/batch',\n                       s3_output='s3://aspiration-datateam/dump/szhang/${galileo_filename}.gpg',\n                       sftp_file_name='${galileo_filename}.gpg',\n                       lambda_arn='None'\n                      ))\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:sftp-to-s3-python',\n    InvocationType='Event',\n    LogType='Tail',\n    Payload=body\n    )\n\nprint ('send file to galileo:', 's3://aspiration-datateam/dump/szhang/${galileo_filename}')\nrun_lambda()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957347":{"id":2957347,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":0,"y":96,"width":32,"height":32,"inputConnectorIDs":[2957326],"outputSuccessConnectorIDs":[2957321],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"rename file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\n\n\ns3 = boto3.resource('s3')\ns3.Object('aspiration-datateam','dump/jchen/galileo/${galileo_filename}') \\\n\t.copy_from(CopySource='aspiration-datateam/dump/jchen/galileo/${galileo_filename}000')\n\ns3.Object('aspiration-datateam','dump/jchen/galileo/${galileo_filename}000').delete()"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957350":{"id":2957350,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[2957320],"outputSuccessConnectorIDs":[2957326],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create galileo file"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists etl.galileo_file_temp_jchen;\ncreate table etl.galileo_file_temp_jchen (\n  row_no BIGINT,\n  row    varchar(20000)\n)\n;\n\ninsert into etl.galileo_file_temp_jchen (row_no, row)\nselect\n  0,\n  recordtype ||\n  header ||\n  rpad(clientid, 10, ' ') ||\n  rpad(programid, 10, ' ') ||\n  rpad((filename), 50, ' ') ||\n  filetransmitdate\nfrom etl.galileo_transaction_batch_header\n;\n\n\ninsert into etl.galileo_file_temp_jchen (row_no, row)\nselect recordnumber::BIGINT,\n       'D' ||\n       rpad(recordnumber, 6, ' ') ||\n       'R' ||\n       rpad(accountidentifier,50,' ') ||\n       lpad('',21,' ') ||\n       transactiontype ||\n       rpad(transactionsubtype, 3, ' ') ||\n       rpad(transactionamount,13,' ') ||\n       rpad((transactiondescription),40,' ') ||\n       rpad((transactionidentifier),20,' ')\nfrom etl.galileo_transaction_batch_detail\n;\n\ninsert into etl.galileo_file_temp_jchen (row_no, row)\nselect 10000000,\n       recordtype ||\n       trailer || rpad(count, 6,' ')\nfrom etl.galileo_transaction_batch_trailer\n;\n\n\nUNLOAD ('SELECT row FROM etl.galileo_file_temp_jchen ORDER BY row_no') \nTO 's3://aspiration-datateam/dump/jchen/galileo/${galileo_filename}'\niam_role '${redshift_role}'\nPARALLEL OFF \nENCRYPTED   \nALLOWOVERWRITE; \n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2957321":{"id":2957321,"sourceID":2957347,"targetID":2957344},"2957326":{"id":2957326,"sourceID":2957350,"targetID":2957347},"2957327":{"id":2957327,"sourceID":2957344,"targetID":2957346}},"failureConnectors":{},"unconditionalConnectors":{"2957320":{"id":2957320,"sourceID":2957345,"targetID":2957350},"2957322":{"id":2957322,"sourceID":2957325,"targetID":2957324},"2957323":{"id":2957323,"sourceID":2957345,"targetID":2957325}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"galileo_filename":{"definition":{"name":"galileo_filename","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"btrans_584_20200320_005.txt"}},"grids":{}},"info":{"name":"Copy of Send_File_to_Galileo_SFTP","description":"","type":"ORCHESTRATION","tag":"8a959472-27f4-447c-887f-2540ad554f45"}}