{"job":{"components":{"2958060":{"id":2958060,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":-272,"y":16,"width":32,"height":16,"inputConnectorIDs":[2958057],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Grid Iterator 0"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"files"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"filename"},"2":{"slot":2,"type":"STRING","value":"file_name_return"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Sequential"}}}},"visible":true},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[2958056],"inputIterationConnectorIDs":[]},"2958061":{"id":2958061,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-272,"y":48,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"achachp returns"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS etl.achachp_import;\nCREATE TABLE etl.achachp_import (\n      ACH_ROW VARCHAR(5000)\n   );\n\nCOPY INTO etl.achachp_import (ACH_ROW) \n   FROM (\n      SELECT $1\n      FROM '${file_path_return}/${file_name_return}'\n   ) FILE_FORMAT = ETL.PLAIN_TEXT;\n\nINSERT INTO USH.ACH_RETURN\nSELECT SUBSTRING(ACH_ROW,1,1)                                                       AS RECORD_TYPE\n     , SUBSTRING(ACH_ROW,2,3)                                                       AS SERVICE_CLASS_CODE\n     , SUBSTRING(ACH_ROW,5,16)                                                      AS COMPANY_NAME\n     , SUBSTRING(ACH_ROW,21,20)                                                     AS COMPANY_DISCRETIONAY_DATA\n     , SUBSTRING(ACH_ROW,41,10)                                                     AS COMPANY_IDENTIFICATION\n     , SUBSTRING(ACH_ROW,51,3)                                                      AS STANDARD_ENTRY_CLASS_CODE\n     , SUBSTRING(ACH_ROW,54,10)                                                     AS COMPANY_ENTRY_DESCRIPTION\n     , SUBSTRING(ACH_ROW,64,6)                                                      AS COMPANY_DESCRIPTIVE_DATE\n     , SUBSTRING(ACH_ROW,70,6)                                                      AS EFFECTIVE_ENTRY_DATE\n     , SUBSTRING(ACH_ROW,76,3)                                                      AS SETTLEMENT_DATE\n     , SUBSTRING(ACH_ROW,79,1)                                                      AS ORIGINATOR_STATUS_CODE\n     , SUBSTRING(ACH_ROW,80,8)                                                      AS ORIGINATING_DFI_IDENTIFICATION\n     , SUBSTRING(ACH_ROW,88,7)                                                      AS BATCH_NUMBER\n     --detail\n     , SUBSTRING(ACH_ROW,96,1)                                                      AS RECORD_TYPE_DETAIL\n     , SUBSTRING(ACH_ROW,97,2)                                                      AS TRANSACTION_CODE\n     , SUBSTRING(ACH_ROW,99,8)                                                      AS RECEIVING_DFI_IDENTIFICATION\n     , SUBSTRING(ACH_ROW,107,1)                                                     AS CHECK_DIGIT\n     , TRIM(SUBSTRING(ACH_ROW,108,17))                                              AS DFI_ACCOUNT_NUMBER\n     , (SUBSTRING(ACH_ROW,125,8) || '.' || SUBSTRING(ACH_ROW,133,2))::DECIMAL(10,2) AS AMOUNT\n     , TRIM(SUBSTRING(ACH_ROW,135,15))                                              AS INDIVIDUAL_IDENTIFICATION_NUMBER\n     , SUBSTRING(ACH_ROW,150,22)                                                    AS INDIVIDUAL_NAME\n     , SUBSTRING(ACH_ROW,172,2)                                                     AS DISCRETIONARY_DATA\n     , SUBSTRING(ACH_ROW,173,1)                                                     AS ADDENDA_RECORD_INDICATOR\n     , SUBSTRING(ACH_ROW,174,15)                                                    AS TRACE_NUMBER\nFROM ETL.ACHACHP_IMPORT\nWHERE LEFT(ACH_ROW,1) = '5'\n  AND RECORD_TYPE_DETAIL = '6';\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[2958056]},"2958096":{"id":2958096,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-176,"y":-64,"width":32,"height":32,"inputConnectorIDs":[2958063],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"return"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists etl.achachp_import;\ncreate table etl.achachp_import\n(\n    ach_row varchar(5000)\n);\n\n\n\nCOPY INTO etl.achachp_import (ach_row)\nFROM (SELECT $1\n      FROM '${file_path_return}')\nFILE_FORMAT = ETL.PLAIN_TEXT;\n\n/*\n--insert into ush.ach_return\nselect\n    substring(ach_row,1,1) as record_type,\n    substring(ach_row,2,3) as service_class_code,\n    substring(ach_row,5,16) as company_name,\n    substring(ach_row,21,20) as company_discretionay_data,\n    substring(ach_row,41,10) as company_identification,\n    substring(ach_row,51,3) as standard_entry_class_code,\n    substring(ach_row,54,10) as company_entry_description,\n    substring(ach_row,64,6) as company_descriptive_date,\n    substring(ach_row,70,6) as effective_entry_date,\n    substring(ach_row,76,3) as settlement_date,\n    substring(ach_row,79,1) as originator_status_code,\n    substring(ach_row,80,8) as originating_dfi_identification,\n    substring(ach_row,88,7) as batch_number,\n    --detail\n    substring(ach_row,96,1) as record_type_detail,\n    substring(ach_row,97,2) as transaction_code,\n    substring(ach_row,99,8) as receiving_dfi_identification,\n    substring(ach_row,107,1) as check_digit,\n    trim(substring(ach_row,108,17)) as dfi_account_number,\n    (substring(ach_row,125,8)  || '.' || substring(ach_row,133,2))::decimal(10,2) as amount,\n    trim(substring(ach_row,135,15)) as individual_identification_number,\n    substring(ach_row,150,22) as individual_name,\n    substring(ach_row,172,2) as discretionary_data,\n    substring(ach_row,173,1) as addenda_record_indicator,\n    substring(ach_row,174,15) as trace_number\nfrom etl.achachp_import\nwhere left(ACH_ROW,1) = '5'\nand record_type_detail = '6';\n*/"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2958097":{"id":2958097,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-272,"y":-144,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"achaj"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DROP TABLE IF EXISTS PUBLIC.TEMP_COASTAL_TRANSACTIONS_VALID;\nCREATE TABLE PUBLIC.TEMP_COASTAL_TRANSACTIONS_VALID (\n      ACH_ROW VARCHAR(5000)\n   );\n\nCOPY INTO PUBLIC.TEMP_COASTAL_TRANSACTIONS_VALID (ACH_ROW) \n   FROM (\n      SELECT $1\n      FROM '${file_path}/${file_name}'\n   ) FILE_FORMAT = ETL.PLAIN_TEXT;\n\nINSERT INTO PUBLIC.COASTAL_TRANSACTIONS_VALID\n--CREATE TABLE PUBLIC.COASTAL_TRANSACTIONS_VALID AS\n   SELECT '${file_name}'                                                                                                                AS FILE_NAME\n        , TO_DATE(SUBSTR('${file_name}',21,4) || '-' || SUBSTR('${file_name}',25,2) || '-' || SUBSTR('${file_name}',27,2),'YYYY-MM-DD') AS FILE_DATE\n        , SUBSTRING(ACH_ROW,1,1)                                                                                                        AS RECORD_TYPE\n        , SUBSTRING(ACH_ROW,2,2)                                                                                                        AS TRANSACTION_CODE\n        , SUBSTRING(ACH_ROW,4,8)                                                                                                        AS RECEIVING_DFI_IDENTIFICATION\n        , SUBSTRING(ACH_ROW,12,1)                                                                                                       AS CHECK_DIGIT\n        , SUBSTRING(ACH_ROW,13,17)                                                                                                      AS DFI_ACCOUNT_NUMBER\n        , (SUBSTRING(ACH_ROW,30,8) || '.' || SUBSTRING(ACH_ROW,38,2))::DECIMAL(10,2)                                                    AS AMOUNT\n        , SUBSTRING(ACH_ROW,40,15)                                                                                                      AS INDIVIDUAL_IDENTIFICATION_NUMBER\n        , SUBSTRING(ACH_ROW,55,22)                                                                                                      AS INDIVIDUAL_NAME\n        , SUBSTRING(ACH_ROW,77,2)                                                                                                       AS DISCRETIONARY_DATA\n        , SUBSTRING(ACH_ROW,79,1)                                                                                                       AS ADDENDA_RECORD_INDICATOR\n        , SUBSTRING(ACH_ROW,80,15)                                                                                                      AS TRACE_NUMBER\n   FROM PUBLIC.TEMP_COASTAL_TRANSACTIONS_VALID\n   WHERE LEFT(ACH_ROW,1) = '6';"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[2958059]},"2958098":{"id":2958098,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":-272,"y":-176,"width":32,"height":16,"inputConnectorIDs":[2958062],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Grid Iterator 0"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"files"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"filename"},"2":{"slot":2,"type":"STRING","value":"file_name"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Sequential"}}}},"visible":true},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[2958059],"inputIterationConnectorIDs":[]},"2958099":{"id":2958099,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-272,"y":-64,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2958057,2958062,2958063],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{},"unconditionalConnectors":{"2958057":{"id":2958057,"sourceID":2958099,"targetID":2958060},"2958062":{"id":2958062,"sourceID":2958099,"targetID":2958098},"2958063":{"id":2958063,"sourceID":2958099,"targetID":2958096}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{"2958056":{"id":2958056,"sourceID":2958060,"targetID":2958061},"2958059":{"id":2958059,"sourceID":2958098,"targetID":2958097}},"noteConnectors":{},"notes":{"2958080":{"id":2958080,"x":-221,"y":-222,"width":110,"height":103,"text":"--insert into ush.achaj\nselect\n    substring(ach_row,1,1) as record_type,\n    substring(ach_row,2,2) as transaction_code,\n    substring(ach_row,4,8) as receiving_dfi_identification,\n    substring(ach_row,12,1) as check_digit,\n    substring(ach_row,13,17) as dfi_account_number,\n    (substring(ach_row,30,8) || '.' || substring(ach_row,38,2))::decimal(10,2) as amount,\n    substring(ach_row,40,15) as individual_identification_number,\n    substring(ach_row,55,22) as individual_name,\n    substring(ach_row,77,2) as discretionary_data,\n    substring(ach_row,79,1) as addenda_record_indicator,\n    substring(ach_row,80,15) as trace_number\nfrom etl.achaj_import\nwhere left(ach_row,1) = '6'","colour":"e6e63c"},"2958082":{"id":2958082,"x":-1173,"y":-233,"width":265,"height":441,"text":"ACHAJ01125108997PEIN2021\n\nACHAJ01125108997PEIN20210604201001578.ach\nACHAJ01125108997PEIN20210603200754172.ach\n\nACHAJ01125108997PEIN20210602202717769.ach\nACHAJ01125108997PEIN20210528201652422.ach\nACHAJ01125108997PEIN20210527201101238.ach\nACHAJ01125108997PEIN20210526201742075.ach\nACHAJ01125108997PEIN20210525200532212.ach\nACHAJ01125108997PEIN20210524200631201.ach\nACHAJ01125108997PEIN20210521201304969.ach\nACHAJ01125108997PEIN20210520200151494.ach\nACHAJ01125108997PEIN20210519202014798.ach\nACHAJ01125108997PEIN20210518200602253.ach\nACHAJ01125108997PEIN20210517200908702.ach\nACHAJ01125108997PEIN20210514201409891.ach\nACHAJ01125108997PEIN20210513201445763.ach\nACHAJ01125108997PEIN20210512201635638.ach\nACHAJ01125108997PEIN20210511200155062.ach\nACHAJ01125108997PEIN20210510200753313.ach\nACHAJ01125108997PEIN20210507200952022.ach\nACHAJ01125108997PEIN20210506200529588.ach","colour":"00ce4f"},"2958083":{"id":2958083,"x":-214,"y":-10,"width":109,"height":142,"text":"--insert into ush.ach_return\nselect\n    substring(ach_row,1,1) as record_type,\n    substring(ach_row,2,3) as service_class_code,\n    substring(ach_row,5,16) as company_name,\n    substring(ach_row,21,20) as company_discretionay_data,\n    substring(ach_row,41,10) as company_identification,\n    substring(ach_row,51,3) as standard_entry_class_code,\n    substring(ach_row,54,10) as company_entry_description,\n    substring(ach_row,64,6) as company_descriptive_date,\n    substring(ach_row,70,6) as effective_entry_date,\n    substring(ach_row,76,3) as settlement_date,\n    substring(ach_row,79,1) as originator_status_code,\n    substring(ach_row,80,8) as originating_dfi_identification,\n    substring(ach_row,88,7) as batch_number,\n    --detail\n    substring(ach_row,96,1) as record_type_detail,\n    substring(ach_row,97,2) as transaction_code,\n    substring(ach_row,99,8) as receiving_dfi_identification,\n    substring(ach_row,107,1) as check_digit,\n    trim(substring(ach_row,108,17)) as dfi_account_number,\n    (substring(ach_row,125,8)  || '.' || substring(ach_row,133,2))::decimal(10,2) as amount,\n    trim(substring(ach_row,135,15)) as individual_identification_number,\n    substring(ach_row,150,22) as individual_name,\n    substring(ach_row,172,2) as discretionary_data,\n    substring(ach_row,173,1) as addenda_record_indicator,\n    substring(ach_row,174,15) as trace_number\nfrom etl.achachp_import\nwhere left(ACH_ROW,1) = '5'\nand record_type_detail = '6';","colour":"e6e63c"},"2958100":{"id":2958100,"x":-886,"y":-233,"width":504,"height":442,"text":"ACHACHP125108997PD2021\n\nACHACHP125108997PD20210603T213251.ACHACHP125108997PD20210603T213251.patched\nACHACHP125108997PD20210604T130520.ACHACHP125108997PD20210604T130520.patched\nACHACHP125108997PD20210604T160533.ACHACHP125108997PD20210604T160533.patched\nACHACHP125108997PD20210604T213337.ACHACHP125108997PD20210604T213337.patched\n\nACHACHP125108997PD20210603T160527.ACHACHP125108997PD20210603T160527.patched\nACHACHP125108997PD20210603T130518.ACHACHP125108997PD20210603T130518.patched\nACHACHP125108997PD20210602T213232.ACHACHP125108997PD20210602T213232.patched\nACHACHP125108997PD20210602T160528.ACHACHP125108997PD20210602T160528.patched\nACHACHP125108997PD20210602T130521.ACHACHP125108997PD20210602T130521.patched","colour":"d60000"}},"variables":{"file_name":{"definition":{"name":"file_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"ACHAJ01125108997PEIN20210602202717769.ach"},"file_name_return":{"definition":{"name":"file_name_return","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"ACHACHP125108997PD20210601T213552.ACHACHP125108997PD20210601T213552.patched"},"file_path":{"definition":{"name":"file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@PUBLIC.ETL/file_processing/ach/coastal_file_drop"},"file_path_return":{"definition":{"name":"file_path_return","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@PUBLIC.DATATEAM/dump/sharris"}},"grids":{"files":{"definition":{"name":"files","scope":"BRANCH","definitions":[{"name":"filename","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[{"values":["ACHAJ01125108997PEIN20210604201001578.ach"]},{"values":["ACHAJ01125108997PEIN20210603200754172.ach"]}]}}},"info":{"name":"ach_achaj_load","description":"","type":"ORCHESTRATION","tag":"570ab303-26a8-4fa9-92fe-b7344c16168b"}}