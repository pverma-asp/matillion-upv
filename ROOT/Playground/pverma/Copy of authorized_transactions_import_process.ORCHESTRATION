{"job":{"components":{"2960816":{"id":2960816,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-96,"y":320,"width":32,"height":32,"inputConnectorIDs":[2960839],"outputSuccessConnectorIDs":[2960836],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log data imported"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log any files expected to be there but weren't\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Authorized Transactions File Import',\n       'Data import completed successfully - ${records_inserted} records inserted.',\n        ${records_inserted},\n       'rdl.authorized_transactions_test',\n       'file_name = ${file_name}',\n       'low';"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2960817":{"id":2960817,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-400,"y":320,"width":32,"height":32,"inputConnectorIDs":[2960846],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"update posted_transaction_id"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"update rdl.AUTHORIZED_TRANSACTIONS\nset posted_transaction_id = src.posted_transaction_id\nfrom rdl.AUTHORIZED_TRANSACTIONS_POSTED src\nwhere rdl.AUTHORIZED_TRANSACTIONS.AUTH_TRAN_KEY = src.AUTH_TRAN_KEY\nand src.file_date >= current_date - 6;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2960818":{"id":2960818,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-214,"y":5,"width":32,"height":32,"inputConnectorIDs":[2960837],"outputSuccessConnectorIDs":[2960843],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"check for file"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\nimport boto3\nimport botocore\n\ns3 = boto3.resource('s3')\n\ntry:\n    s3.Object(job_s3_bucket, v_yy + \"/\" + str(int(v_mm)) + \"/\" + file_name).load()\nexcept botocore.exceptions.ClientError as e:\n       context.updateVariable('file_exists', \"false\")\nelse:\n       context.updateVariable('file_exists', \"true\")\n\nprint(\"File exists: \" + file_exists)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2960819":{"id":2960819,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":48,"y":320,"width":32,"height":32,"inputConnectorIDs":[2960840],"outputSuccessConnectorIDs":[2960839],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"get row count"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select count(*) as row_count\nfrom rdl.authorized_transactions_test\nwhere file_name = '${file_name}'\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"records_inserted"},"2":{"slot":2,"type":"STRING","value":"ROW_COUNT"}}}},"visible":true},"4":{"slot":4,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"5":{"slot":5,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2960820":{"id":2960820,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-96,"y":112,"width":32,"height":32,"inputConnectorIDs":[2960833],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"log no file to import"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--log any files expected to be there but weren't\ninsert into etl.issue_log\n(issue_program, issue_description, issue_count, issue_object, issue_identifier, issue_priority)\nselect\n       'Authorized Transactions File Import',\n       'Expected file ${file_name}, but it was not present in the aspiration-galileo-prod-sftp-all S3 bucket',\n        null,\n       'rdl.authorized_transactions_test',\n       'file_name = ${file_name}',\n       'high';"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2960821":{"id":2960821,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":53,"y":216,"width":32,"height":32,"inputConnectorIDs":[2960842],"outputSuccessConnectorIDs":[2960840],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Row Count","mapTo":"records_inserted"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into final table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Insert into rdl.authorized_transactions_test\n(\n    file_name,\n    file_date,\n    record_type,\n    unique_program_id,\n    galileo_account_id,\n    card_identifier,\n    transaction_date,\n    transaction_currency_code,\n    address_verification_response,\n    authorization_response,\n    transaction_amount,\n    authorization_code,\n    network_code,\n    merchant_number,\n    merchant_description,\n    merchant_category_code,\n    transaction_code,\n    merchant_country_code,\n    prn \n)\n\nwith cte_parsed_data as (\n  select \n    substring(auth_tran_row,1,1) as record_type,\n    substring(auth_tran_row,2,15) as unique_program_id,\n    substring(auth_tran_row,17,30) as galileo_account_id,\n    substring(auth_tran_row,47,30) as card_identifier,\n    substring(auth_tran_row,77,17) as transaction_date,\n    substring(auth_tran_row,94,3) as transaction_currency_code,\n    substring(auth_tran_row,97,1) as address_verification_response,\n    substring(auth_tran_row,98,2) as authorization_response,\n    substring(auth_tran_row,100,26) as transaction_amount,\n    substring(auth_tran_row,126,10) as authorization_code,\n    substring(auth_tran_row,136,1) as network_code,\n    substring(auth_tran_row,137,30) as merchant_number,\n    substring(auth_tran_row,167,50) as merchant_description,\n    substring(auth_tran_row,217,4) as merchant_category_code,\n    substring(auth_tran_row,221,15) as transaction_code,\n    substring(auth_tran_row,236,5) as merchant_country_code,\n    case when '${file_date}' >= '2019-12-11' then substring(auth_tran_row,241,12) else null end as prn  \n  from etl.authorized_transactions_staging_test\n  ) \nselect\n    '${file_name}',\n    '${file_date}',\n    record_type,\n    nullif(trim(unique_program_id),''),\n    nullif(trim(galileo_account_id),''),\n    nullif(trim(card_identifier),''),\n    --Galileo gives us the date in AZ time, which is UTC minus 7 (at any time of the year)\n    --so 7 is added to make timestamp to make it UTC\n    dateadd(hour,7,TO_TIMESTAMP(substring(transaction_date,5,4) || '-' \n             || left(transaction_date,2) || '-' || substring(transaction_date,3,2)\n             || ' ' || substring(transaction_date,10,8)))\n             as transaction_date,\n    nullif(trim(transaction_currency_code),''),\n    nullif(trim(address_verification_response),''),\n    nullif(trim(authorization_response),''),\n    --changing amount from string to decimal\n    --taking sign at end of string and moving it to the front\n    (right(trim(transaction_amount),1) ||\n         left(trim(transaction_amount),len(trim(transaction_amount))-1))::decimal(38,2) \n         as transaction_amount,\n    authorization_code,\n    nullif(trim(network_code),''),\n    nullif(trim(merchant_number),''),\n    nullif(trim(merchant_description),''),\n    nullif(trim(merchant_category_code),''),\n    nullif(trim(transaction_code),''),\n    nullif(trim(merchant_country_code),''),\n    nullif(trim(prn),'')\nfrom cte_parsed_data;  \n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2960822":{"id":2960822,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-240,"y":320,"width":32,"height":32,"inputConnectorIDs":[2960836],"outputSuccessConnectorIDs":[2960846],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert posted_transaction_id"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--delete a weeks worth of records\ndelete\nfrom rdl.AUTHORIZED_TRANSACTIONS_POSTED\nwhere file_date >= current_date - 6;\n\n--insert a week's worth of records\ninsert into rdl.AUTHORIZED_TRANSACTIONS_POSTED \n(AUTH_TRAN_KEY, file_date, posted_transaction_id)\nwith posted as (\n    select a.ID as posted_transaction_id,\n           a.TRANSACTION_DATE,\n           a.AUTHORIZATION_CODE::NUMBER(38) as AUTHORIZATION_CODE,\n           b.GALILEO_ACCOUNT_ID\n    from WEB_DB.POSTED_TRANSACTION a\n    join WEB_DB.GALILEO_POSTED_TRANSACTION b on a.ID = b.POSTED_TRANSACTION_ID\n)\nselect a.AUTH_TRAN_KEY,\n       a.file_date,\n       p.posted_transaction_id\nfrom rdl.AUTHORIZED_TRANSACTIONS a\nleft join posted p on a.GALILEO_ACCOUNT_ID = p.GALILEO_ACCOUNT_ID\n                    and a.AUTHORIZATION_CODE = p.AUTHORIZATION_CODE\n                    and a.TRANSACTION_DATE::timestamp = p.TRANSACTION_DATE\nwhere a.file_date >= current_date - 6;\n\n\n\n\n/*\ndrop table if exists rdl.AUTHORIZED_TRANSACTIONS_POSTED;\ncreate table rdl.AUTHORIZED_TRANSACTIONS_POSTED as\nwith posted as (\n    select a.ID as posted_transaction_id,\n           a.TRANSACTION_DATE,\n           a.AUTHORIZATION_CODE::NUMBER(38) as AUTHORIZATION_CODE,\n           b.GALILEO_ACCOUNT_ID\n    from WEB_DB.POSTED_TRANSACTION a\n    join WEB_DB.GALILEO_POSTED_TRANSACTION b on a.ID = b.POSTED_TRANSACTION_ID\n)\nselect a.AUTH_TRAN_KEY,\n       a.file_date,\n       p.posted_transaction_id\nfrom rdl.AUTHORIZED_TRANSACTIONS a\nleft join posted p on a.GALILEO_ACCOUNT_ID = p.GALILEO_ACCOUNT_ID\n                    and a.AUTHORIZATION_CODE = p.AUTHORIZATION_CODE\n                    and a.TRANSACTION_DATE::timestamp = p.TRANSACTION_DATE;\n*/"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2960823":{"id":2960823,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":48,"y":0,"width":32,"height":32,"inputConnectorIDs":[2960838],"outputSuccessConnectorIDs":[2960841],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"load into staging"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists etl.authorized_transactions_staging_test;\ncreate table etl.authorized_transactions_staging_test\n(\n  auth_tran_row varchar(5000)\n);\n\nCOPY INTO etl.authorized_transactions_staging_test (auth_tran_row)\nFROM (SELECT $1\n      FROM '${copy_into_full_path}')\nFILE_FORMAT = ETL.PLAIN_TEXT;\n\n--remove header and trailer\ndelete from etl.authorized_transactions_staging_test \nwhere left(auth_tran_row,1) in ('H','T');"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2960826":{"id":2960826,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":48,"y":112,"width":32,"height":32,"inputConnectorIDs":[2960841],"outputSuccessConnectorIDs":[2960842],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delete existing records for file"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"delete from rdl.authorized_transactions_test\nwhere file_name = '${file_name}';\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2960844":{"id":2960844,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-448,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2960832],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2960845":{"id":2960845,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":-91,"y":-2,"width":32,"height":32,"inputConnectorIDs":[2960843],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[2960838],"outputFalseConnectorIDs":[2960833],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"if exists"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file_exists"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"true"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2960847":{"id":2960847,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-335,"y":7,"width":32,"height":32,"inputConnectorIDs":[2960832],"outputSuccessConnectorIDs":[2960837],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"set variables"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport datetime \n\ncontext.updateVariable('copy_into_full_path', copy_into_s3_bucket + \"/\" \n                                       + v_yy + \"/\" + str(int(v_mm)) + \"/\" + file_name)\n\n\n\n# if date before 12/11/2019, do not include prn in fixed width  \n# date in yyyy/mm/dd format \n#if datetime.datetime(int(v_yy), int(v_mm), int(v_dd)) >= datetime.datetime(2019, 12, 11):\n#\tcontext.updateVariable('fixed_width', fixed_width + \",prn:20\")\n\n\nprint (copy_into_full_path)\n\n\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2960836":{"id":2960836,"sourceID":2960816,"targetID":2960822},"2960837":{"id":2960837,"sourceID":2960847,"targetID":2960818},"2960839":{"id":2960839,"sourceID":2960819,"targetID":2960816},"2960840":{"id":2960840,"sourceID":2960821,"targetID":2960819},"2960841":{"id":2960841,"sourceID":2960823,"targetID":2960826},"2960842":{"id":2960842,"sourceID":2960826,"targetID":2960821},"2960843":{"id":2960843,"sourceID":2960818,"targetID":2960845},"2960846":{"id":2960846,"sourceID":2960822,"targetID":2960817}},"failureConnectors":{},"unconditionalConnectors":{"2960832":{"id":2960832,"sourceID":2960844,"targetID":2960847}},"trueConnectors":{"2960838":{"id":2960838,"sourceID":2960845,"targetID":2960823}},"falseConnectors":{"2960833":{"id":2960833,"sourceID":2960845,"targetID":2960820}},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"copy_into_full_path":{"definition":{"name":"copy_into_full_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@PUBLIC.DATATEAM/dump/galileo_test_file_20220727/2022/7/authorizedtransactions_20220727_test.txt"},"copy_into_s3_bucket":{"definition":{"name":"copy_into_s3_bucket","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"@PUBLIC.DATATEAM/dump/galileo_test_file_20220727"},"file_date":{"definition":{"name":"file_date","type":"DATETIME","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"2022-07-27"},"file_exists":{"definition":{"name":"file_exists","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":null},"file_name":{"definition":{"name":"file_name","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"authorizedtransactions_20220727_test.txt"},"file_path":{"definition":{"name":"file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":null},"fixed_width":{"definition":{"name":"fixed_width","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":null},"job_s3_bucket":{"definition":{"name":"job_s3_bucket","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"aspiration-datateam"},"records_inserted":{"definition":{"name":"records_inserted","type":"DECIMAL","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":null},"response_file_path":{"definition":{"name":"response_file_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"/sftpdir"},"s3_full_path":{"definition":{"name":"s3_full_path","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":null},"v_dd":{"definition":{"name":"v_dd","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"27"},"v_mm":{"definition":{"name":"v_mm","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"07"},"v_yy":{"definition":{"name":"v_yy","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"2022"}},"grids":{}},"info":{"name":"Copy of authorized_transactions_import_process","description":"Processes individual authorized transaction files ","type":"ORCHESTRATION","tag":"cfa8c4dc-1178-4ff7-bff1-bc1614e18957"}}