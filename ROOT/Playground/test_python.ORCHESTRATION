{"job":{"components":{"2957096":{"id":2957096,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1155583855,"x":-1408,"y":144,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[2957098],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Check max file date and run lambda"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true},"4":{"slot":4,"name":"Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"galileo_interest_accrual"}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file_date"}}}},"visible":false},"7":{"slot":7,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"WITH\n   Prod AS ( SELECT MAX(file_date) as file_date FROM  rdl.galileo_interest_accrual\n\t\t )\nSELECT file_date as current_max_file_date\nFROM Prod"}}}},"visible":true},"8":{"slot":8,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"file_dates"}}}},"visible":true},"9":{"slot":9,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"current_max_file_date"}}}},"visible":true},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"20":{"slot":20,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"rdl"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957097":{"id":2957097,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1200,"y":128,"width":32,"height":32,"inputConnectorIDs":[2957098],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python Script 0"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nfrom datetime import datetime\n\n#pass the date to the lambda function in the correct format\ntoday_date = datetime.now().strftime('%Y-%m-%d')\n\ndef run_lambda():\n    client = boto3.client('lambda', region_name='us-west-2')\n\n    today = json.dumps(dict(date=today_date))\n\n    response = client.invoke(\n    FunctionName='arn:aws:lambda:us-west-2:332894900161:function:galileo-rdf-ingestor-prod-hello',\n    InvocationType='Event',\n    LogType='Tail',\n    Payload=today\n    )\n                                        \nfor dates in context.getGridVariable('file_dates'):\n  if dates[0] != today_date:\n    run_lambda()\n  else:\n    pass"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957099":{"id":2957099,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1280,"y":-80,"width":32,"height":32,"inputConnectorIDs":[2957093],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Python Script 0"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"import boto3\nfrom datetime import datetime\nfrom urllib.parse import unquote_plus\n\nSTATUS = {\n    '1': 'exported',\n    '2': 'export_error',\n    '3': 'got_return_file'\n}\n\ndef run_lambda(func_arn,status):\n    client = boto3.client('lambda', region_name='us-west-2')\n    body = status\n    response = client.invoke(\n        FunctionName=func_arn,\n        InvocationType='Event',\n        LogType='Tail',\n        Payload=body\n    )\n    return response\n\ndef make_payload(file_name,status):\n    payload = json.dumps(dict(s3_file_name=file_name,status=status))\n    return payload\n\ndef get_file_name(file_path):\n    file_path, file_name = os.path.split(file_path)\n    return unquote_plus(file_name)\n\nfile_name = get_file_name(\"s3://aspiration-datateam/dump/lnguyen/btrans_584_20191213_015.txt.out.gpg\")\np = make_payload(file_name,STATUS.get('1'))\nnext_lambda = \"arn:aws:lambda:us-west-2:332894900161:function:python-write-to-db\"\nrun_lambda(next_lambda,p)"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2957100":{"id":2957100,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1472,"y":-80,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2957093],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2957098":{"id":2957098,"sourceID":2957096,"targetID":2957097}},"failureConnectors":{},"unconditionalConnectors":{"2957093":{"id":2957093,"sourceID":2957100,"targetID":2957099}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{},"grids":{"file_dates":{"definition":{"name":"file_dates","scope":"BRANCH","definitions":[{"name":"current_max_day","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[]}}},"info":{"name":"test_python","description":null,"type":"ORCHESTRATION","tag":"eb56aa5c-e480-49cf-989c-74d00c752e77"}}