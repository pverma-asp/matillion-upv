{"job":{"components":{"2958522":{"id":2958522,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-368,"y":-16,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2958517],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2958523":{"id":2958523,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-237,"y":-11,"width":32,"height":32,"inputConnectorIDs":[2958517],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert sweepstakes data"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--drop table if exists rdl.promo_pyc_sweepstakes_mktg_119;\n--create table rdl.promo_pyc_sweepstakes_mktg_119 as\ninsert into rdl.promo_pyc_sweepstakes_mktg_119\nwith distinct_ee_initial as (\n    select distinct\n           a.ENTRY_TIMESTAMP::date as entry_date,\n           date_trunc('month', a.ENTRY_TIMESTAMP::date)::DATE AS entry_month,\n           a.EMAIL,\n           a.FULL_NAME,\n           c.SPEND_GALILEO_PRN,\n           'electronic_entry' as entry_source,\n           b.USER_ID\n    from ush.mktg_119_electronic_entries a\n    left join WEB_DB.USER_EMAIL b on lower(a.email) = lower(b.EMAIL)\n    left join bi.dt_accounts c on b.user_id = c.user_id and c.account_type = 'Checking'\n\n)\n, distinct_ee as (\n    select entry_date, entry_month, EMAIL, FULL_NAME, SPEND_GALILEO_PRN, entry_source\n    from distinct_ee_initial\n    where USER_ID is null\n    or USER_ID not in (select USER_ID from rdl.VW_BLACK_LISTED_USERS)\n)\n, ee_data_set_x_10 as (\n    select e.*\n    from etl.NUMBERS_1000 n\n    cross join  distinct_ee e\n    where n.i between 1 and 10\n)\n, qualified_txn as (\n    select\n           convert_timezone('UTC','America/Los_Angeles',a.TRANSACTION_DATE::timestamp)::date as entry_date,\n           date_trunc('month', entry_date::date)::DATE AS entry_month,\n           c.USER_EMAIL as email,--ifnull(c.USER_EMAIL,'missing') as email,\n           c.FIRST_NAME || ' ' || c.LAST_NAME as full_name,\n           b.SPEND_GALILEO_PRN,\n           'qualified_transaction' as entry_source  --select count(*)\n    from bi.DT_DEPOSITORY_TRANSACTIONS a\n    join bi.DT_ACCOUNTS b on a.UNIQUE_ACCOUNT_ID = b.UNIQUE_ACCOUNT_ID\n    left join bi.DT_USERS c on b.USER_ID = c.USER_ID\n    where a.PLANT_YOUR_CHANGE_TRANSFER_ID is not null\n    and convert_timezone('UTC','America/Los_Angeles',a.TRANSACTION_DATE::timestamp)::date between '2021-11-01' and '2022-08-31'\n    and b.USER_ID not in (select USER_ID from rdl.VW_BLACK_LISTED_USERS)\n)\n, pyc_lite_users as (\n    select ue.USER_ID,\n           u.DISPLAY_NAME as full_name,\n           u.UUID          as EXTERNAL_USER_ID,\n           ue.EMAIL,\n           row_number() over (partition by ue.USER_ID order by ue.DATE_CREATED desc) as rn\n    from WEB_DB.user_email ue\n    join WEB_DB.USER_PRODUCT_APPLICATION upa on ue.USER_ID = upa.USER_ID\n    join WEB_DB.PRODUCT p on p.id = upa.PRODUCT_ID\n    join WEB_DB._USER u on ue.USER_ID = u.ID\n    where p.CODE = 'PYC-LITE'\n    and ue.IS_PRIMARY = true\n    and ue.USER_ID not in (select USER_ID from rdl.VW_BLACK_LISTED_USERS)\n)\n, pyc_lite_eligible_transactions as (\n    select\n        convert_timezone('UTC','America/Los_Angeles',rt.CREATED_AT::timestamp)::date as entry_date,\n        date_trunc('month', entry_date::date)::DATE AS entry_month,\n        pu.EMAIL,\n        pu.full_name,\n        null as prn,\n        'PYC4A_transaction' as entry_source\n    from BANK_DB.ROUNDUP_TRANSACTION rt\n    join pyc_lite_users pu on rt.USER_ID = pu.USER_ID and pu.rn = 1\n    where rt.PYC_ELIGIBLE = TRUE\n)\n, combined as (\n    select *\n    from ee_data_set_x_10\n    union all\n    select *\n    from qualified_txn\n    union all\n    select *\n    from pyc_lite_eligible_transactions\n\n)\n, combined_with_rn as (\n    select *,\n           row_number() over (partition by entry_month, entry_date, EMAIL order by entry_source, entry_date) as rn\n    from combined\n)\n, entry_list as (\n    select entry_date, entry_month, EMAIL, SPEND_GALILEO_PRN, entry_source\n    from combined_with_rn\n    where rn between 1 and 10\n)\n, month_total as (\n    select entry_month, count(*) as month_total\n    from entry_list\n    group by 1\n)\n, entrant_month_total as (\n    select entry_month, EMAIL, count(*) as entrant_month_total\n    from entry_list\n    group by 1,2\n)\nselect el.*,\n       row_number() over (partition by el.entry_month order by random())::bigint as random_entry_number,\n       emt.entrant_month_total, mt.month_total,\n       (emt.entrant_month_total / mt.month_total) * 100 as entrant_percent_chance_of_winning\nfrom entry_list el\njoin month_total mt on el.entry_month = mt.entry_month\njoin entrant_month_total emt on el.entry_month = emt.entry_month and el.EMAIL = emt.EMAIL\nleft join rdl.promo_pyc_sweepstakes_mktg_119 s on el.EMAIL = s.EMAIL and el.entry_date = s.ENTRY_DATE\nwhere el.entry_month = '2022-08-01'\nand s.EMAIL is null;\n\n\ngrant select on rdl.promo_pyc_sweepstakes_mktg_119 to role looker_role;\ngrant select on rdl.promo_pyc_sweepstakes_mktg_119 to role data_engineering_group;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{},"unconditionalConnectors":{"2958517":{"id":2958517,"sourceID":2958522,"targetID":2958523}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{},"grids":{}},"info":{"name":"promo_pyc_sweepstakes_mktg_119","description":"query to create data for https://aspirationpartners.atlassian.net/browse/MKTG-119\nnote: does not include initial import of electronic entries","type":"ORCHESTRATION","tag":"782f19b3-5b9f-4828-a1cd-4fbb949d9455"}}